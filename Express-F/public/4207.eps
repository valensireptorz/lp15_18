%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 97_1_47_01.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For: User
%%CreationDate: 6/10/2019
%%BoundingBox: 0 0 1000 700
%%HiResBoundingBox: 0 0 1000 700
%%CropBox: 0 0 1000 700
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.1 x249 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 92 8%%BeginData: 11219 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFD61FF84A9FD7CFF84070707
%307EFD7AFFA97E777D0D30A9FD7AFFCAC2C22F0DFFCAFD79FFCAC2C35385
%FFC2BBC9CAFD4CFFCAFD29FFCAC3C2C9AFFFC3BBBAC1C2FD4AFFC8CEFD2A
%FFC9C3CAFFFFFFBBC1BBC1C2FD48FFC8C7C8FD29FFA9FFA1FFA8FFFFC2BA
%C1BBBBC2FD06FFC9C2FD3EFFC9C7C1C9FD28FFA9A9CAFFAF857EFFCAC1BB
%C1BBC1C9FD04FFCABBC1CFFD3CFFCAC8C1C7C8FD27FFA88585C9A7AF8485
%7EFFC3BBBAC1BAC2FFFFFFCFBABBBBCAFD3CFFCFC7C8C1CFFD1EFFCACAA1
%A9A8FFFFFFA88585AFA7AFFD05A9FFC3C1BBC1BBFFFFFFC2C1BBC1C9FD3C
%FFC8C7C1C7CAFD17FFAFFFFFFFAFFFFFFFCAA87EA984A984A97EA9A9C9A8
%A984A985A9FFFFC9C2BBBBCFFFCAC1BBC1BBCAFD3CFFCEC1C7C9FD23FF84
%A985AFA9A985AFC8FD04A9AF84FD05FFC9CAFFCABBC1BBC1CAFD36FFC9C7
%C8FFFFFFC9C1C1FD0FFFA9FD15FFA8A97EA97EA984C8A8A984A9A9A9A8FD
%05FFC9CAC3FD04BBFD0DFFAFFD29FFCFC7C7C7CFFFFFC8FD2AFFA985AFC8
%AFA9AF85AF85FD07FFCAC9BBC1BAC9FD0CFF858585FD28FFCAC8C1C7C1FF
%CAFD2BFFA8A9A8C8A8A985A9A9A9A8FFFFCAC2C9C2CAC2C1BAC2FD0CFF85
%A9FF85A9FD28FFC8C7C7C7C8FFFFCFC9CEC9FD26FFAF85A9C1CAA9A985AF
%A9FFCFC9BBBBBAC1BBC1BBC9FD04FFCFC9C1FD06FF85FFFFA9AFFD29FFC1
%C7C1C7C9C9C1C7C1C7C1C8CAFD23FFA8A9A8C8A8A97EA97EFFCAC1BAC1BB
%C1BBBBBBC9FD04FFC3C1BABBCAFFA9FFFFAF85FFFF85A9FD2AFFC8C8C1C8
%C7C8C1C8C7C7C8FD25FFA9AFA8A985AF84FFCAC1BAC1BBC1BBC1C1FFCFCF
%FFFFC3C1BBC1C2FF858585AF85FFFFFF85FD2CFFCAC9C8C8A07D59847E85
%5A5AA8FF5A8585855A5A5A85FF8561855A855A5A5A8585855A8585855A85
%858561855A5A5A857EA87EA95A5A84CFC1C1BAC1BBC1C2FFFFFFC9FFC9BB
%BAC1BAC985AFFFAF85FFFFFF85AFFD2FFFCFFF37613761370E0785AF3D37
%6137610E0E30FF3761376137300E61376137613761376137613761300E07
%5B37617E855A30077FFFFFCFCFCAFD06FFCA7D53529ABBC27D547EFD05FF
%AF85A9AFAFFD25FFC9C2C9C9CFFFFFCAFFA861375B36610D0D3085375B36
%613736073084613661375B073037613661375B3661375B36613736073036
%613661375B070E5AFFA9FFFFCAC2C2997676A82F0606290628282906287E
%FD05FFA9AF8585A9FD24FFC9C7C7C7C1A759FFCFC87E6137615B36073661
%6137615B6136300D5B5B615B613630306137615B615B615B613761376136
%0E075B5B615B615B300785FFFFCAC2BBC1BB76062F062F282F2929062F29
%532884FFAFAFFD05FFA9AFFD25FFC8C79F2E05062EC8C08437613761300D
%0D6137613761375B073030613761373607303761376137373661FD06855A
%7E5A613761375B070E5AFFAFFFC1BBBAC14C07062F2829062953530677C2
%A1A8FF85FD06FF85A9FD25FF59272E06527652C1C77C615B615B37073637
%615B6137615B30075B5B613761303030615B6137610D0E30FD08FFAF3761
%37615B300785FD04FFC9C1BABB28290629062F7EFFA8A1C2C3C9FFFFAFFD
%05FFAF85FD1FFFA82E2E2E7E7D2F0506050676C3A0C9C8A8376137613630
%30613661375B3661300E3661376136300736376137613630075AFD04FFCB
%FFFFFF8437375B36610D075AFFA9FFAFFFFFCAC2C97D7E59A1A8FFCAC7C1
%C8BAC2FFFF84FD04FF8561FD20FF060C060C050C062E062E057DCACFCFFF
%FF61376137610E5B5B615B613761615B0D615B6137610E305A615B613761
%36375AAF858585A97E8584AF376137615B300785FD04FFCACFC9CFCAFFFF
%FFCAFFFFC8C7C8C7C7C9FFA9AFFFFFFF8B85FD20FF5906050C060C050605
%060559A9AFA8A884C8596137613630376137613661376136303761376130
%300785376137613761376137613737360E075A8561376137610D0D5AFFAF
%FFA1BBBABBBAC1BBC9FFCFCAC8C1C8C1C7C1CFFF85A9FFFF8585FD07FFA8
%FD19FF59050C062E062E7D5953A8FD05FFA99FA837615B6136615B613736
%5B6137613661376161360730856137615B6137615B6137615B610D305AAF
%37615B6137300785FD04FFC1C1BBC1BBC1BAC9CAC9C1C8C1C8C7C7C8AF85
%FFAF85AFFD07FF59FD1AFF590605060506A8FF7DFD08FFA77C373661375B
%36613737075B375B3661375B36610E0D2FAF375B36613761376137373661
%360E075A85373661375B070E5AFFA9FFAFFFBBBBBBC1BBC1BBC2BBC1C1C7
%C1C7C1C784FFFFAF5A85A9FD05FF7D84FD1BFF5906050C7EFFA8FD09FFAF
%845B615B6137615B613630366137615B6137615B30077FAF6137615B6136
%375AAF85AF85AF7E85A8AF37615B615B300785FD06FFC2C1BAC1BBC1BBC1
%C1C8C7C8C8C8C1CEFD04FFAF85FD05FF7DFD1DFF847D84FFAF84FFFFA8FD
%05FFA8FF846137613761376137360736376137613761375B0D0E5AFF3761
%37613730075AFD08FF85373761375B070E5AFFA9FFAFFFAFFFCAC9C2C9C3
%C9C3C8C1C7C8FFA7C7C1CFFD04FF85FD04FF7E7DFD21FFAFA8FFA884AFFF
%FFFF8484FFAF5A61376137613761300E30615B6137615B6136300DA9AF61
%376137610E0E30FD08FFAF376137615B300785FFFFFFFD04C9FD05FFCAFF
%C8C8C1CF85AFC8C7C1C9C9CFA8AFCFFFFFFF59FD22FF84FFA8A8A8AFFFFF
%FFA87DFFCA5A365A365B36613630077E5B61375B366137360730A8AF3661
%37613630075AA9FFA9FFA9FFA9FF8437375B366130305AAF85A97CA07576
%75C2CAFFCACAA8A0C1C7A0A1C2C9C7C79FC7C1C19FC8A0CA59A8FD22FFAF
%FFA8AFFF84FFFFAF7CC784FD05FFA9CA7E5B0D30A8AF376137615B613030
%30FFA9615B6137615B615B615B615B615B362F5B616137615B615B613761
%376137300E77BAC1CAFFCA7E06535276999A767DFD05527D7D8459A8FD23
%FFA8FF84FF7E302F5A2F54A0A67DFFA8A884855A610E0E0DFF8561376137
%613730075AFFAF37613761376137613761375B37610D0D30613761376137
%6137613761375B0D0E52C1BAC1CACA29290629062906290629062906292F
%84AFFD25FFAFA8FFA955305B3055305AC7C8A761375B37613730075AFFFF
%37615B6137610E0E5AFFA96137615B6137615B6137615B61373007373761
%5B6137615B6137615B6137300E53BBC1BBC97729282F282F282F282F282F
%282F28290653A9FD22FFA8537DA9FF7F30303054303030A8CFFF5BFD0537
%07075AFFAF61365B37610E0E0785FFAF3737365B3737365B37373661375B
%070D0E61365B3737365B3737365B3737070E52BBBABBBA76062928290629
%28290629282906292829017EFD23FF53A17DFF545B305B305B30555BFFFF
%FF84A884A77C847EFFFFFFA9AFA9AF85A98485A9FFAFAF85AFA9AF85AFA9
%AF85AF85AF5A8484A985AFA9AF85AFA9AF85AFA9AF85A984A9FD04C9522F
%292F282F292F282F282F062F292F28297EFD24FF28285A55305430553054
%305BCAC8C1C8C7C7C0C9FD1AFF842E0C0652FD15FFCAA806292829062F28
%290629287E532F282928FD25FF84847F305B3055305B305530C8C7C7C1C8
%7D8461856161365A5A85A9FD07FF858561855B615A5A3085A959050C052F
%FD048561855A5A7EFFFF856185858561855A5A7DA9855A2F2F282F282F2F
%3030858553062F067EFD1DFFA9FFFFFFA9FD05FF54303054303030543054
%9FC7C183363D3737366137613630073084FD04FFAF5B3736613737366137
%3707300652765206373761373737300730CAFF373736613737360E07305A
%3D3761365B365B3661376137360629062FA9FD26FFA95B305B305B545B30
%5B30CEC88437615B6137615B61376161370730A9FFFFAF376137615B6137
%615B615B610E0DA0C976365B615B61376136300DFFA96137615B6137610E
%30308537613761616137615B6137613029282F7EFD27FFAFFD04305A8530
%553054FFAF37613761376137613761376137300730FFAF37613761376137
%6137613761375B072E522E366137613761375B070E7EAF37613761376136
%30075A5B6137613761376137613737372F282828FD28FF8555305530A9A9
%3130555AFF5B615B613761373736615B61376136300785856137615B6137
%5B366137615B61373606060661376137615B613730075A61615B6137615B
%610D305A8537615B61365B36FD0585282F287EFD04FFAFFD18FFAFFFFFFF
%AFFFFFFFAFFFFFA930543030A8A93030307F853736613761303007848561
%376137610D073061375B366136300784A9613661375A537651767D5B373D
%366137610D0E2F613661375B36613630075A5B5B366137360730A8FFFFFF
%7E28067EFFFFA9FFFFFFA9FD22FF8555305B30FFA95530557F8537615B61
%3730075BFFFF6161365B365A7E85376137615B30075AFFFF85617EC2BBC1
%C1C2BBC1BBC25A615B615B5B073637615B6137615B610E305A8537615B61
%30300DFD04FF7E0653FD2AFF853055305BFFA930303085615B3761373607
%0E84FFFFFFA9A984FFFFFF616137613737070E7EFFFFFF5AC1BAC1BBC1BB
%C1BBC1BAC236613761303030613761366137613730075A5B613761375B30
%375B8585852F282F85A9FD28FF853130557FFFA95B305584853761376130
%0E0DFD0AFF6137615B6130300EAFFFFFAFA8BAC1BBC1BBC1BBC1BBC1BB5A
%37615B610D5B5B6137375B6137610E0E3085376137615B6137613761362F
%290E07AFFD1BFFA9FFFFFFA9FFFFFFA9FD04FFA9303030A9FFA9305430A9
%3661376136360730A8FFFFFFA9FFAFFFA9FF5B5B366137360730A8FFA9FF
%A0BBBBC1BBC1BBC1BBC1BBC1523737613730366137370E6137613630075A
%5A61375B3661375B3661373606300730A8FFAFFFA9FFAFFD22FF8555305B
%FFFFA95B305BA96137613761303030FD0AFF6137615B6130300EAFFFFFFF
%C2BBC1BBC1BBC1BBC1BBC1BB9A30615B6136615B613036616137610E3036
%85376137615B615B6137610D06060D07FD1CFFA9FFFFFFAFFFFFFFAFFFFF
%FFA95B30307EFFFFAF303054FF5B61376137360730A8FFFFAF7E857EA9FF
%FF5B5B376137360730A8FFAFFFBBBB99C1BBC1BBC1BBC199C19930376137
%5B366137300E6137613630075A5B613761375B303684AF8584597E5984A9
%FFAFFFA9FFAFFD21FFA930555AFFFFFFA95B307FFF8537615B6130300DA9
%FFFF853D3637305A848537613761363007A9FFFFCAC1BB7E99C1BBC1BAC1
%A07DBAC12F6137615B6137610E3637615B610D305A8537615B6130300DFD
%26FFA9FFAFFFA9FFAFFFA9FF543030AFFFFFAFAF30305AFF613736613737
%070E5AFFA961376137610E0D3061375B36610D072FFFFFC9BAC961A8C2C9
%C2C3C2A885C3BA533661366137613630306136613630075A5B5B36613736
%0730A8FFA9FFFFFFA9FFFFFFA9FFA9FFA9FD20FFA95530A9FD04FFA95B30
%A9FFAF37615B615B5B0E3084AF376137615B30075B61613761615B0E307E
%AFA1C1CFFD09FFCAC152375B615B615B5B0D365B615B610E305A8537615B
%61363030AFFD04FFAFFD20FFA9FFAFFFA9FFAFFFFF7F305BAFFFAFFFFFAF
%3030A8FFAF6137613761375B3637376137613737070E7E8537613761375B
%36360E7CBAC9FD09FFC9BA770E6137613761300E306137613730075A6161
%3761376136615B6137615B6130302FFFA9FFAFFD21FFAF305BA9FD05FFA9
%5B30FFFFFFA96137615B6137615B6137615B610E0E30FFAF61376137615B
%36292F299AC2FD09FFC19A2930306137615B360737616137610E0E308537
%6137615B6137613761376161360730FD1FFFA9FFA9FFA9FF5A307EFFA9FF
%A9FFFFA9305BA9FFA9FF85373661375B3661375B3761300707A9FFFF8561
%375B375B28280629062853AFFD06FF7D52062906282F6136610D0D306137
%613630075A5B61375B3661375B3661375B3661300D0DFD24FFA8307FFD07
%FFA95B7FFD05FF856137613761376137610E0E30AFFD04FFAF8537613730
%062F292F28292954545B5A5A2F2F292F282F28363761360E075B37613761
%0D0E306137613761376137613761376137360730FD1FFFAFFD04FF53017E
%FD04FFA9FFFFA92A85FFFFA9FFFFFFA9AF85855B615A5B305A7EFD05FFA9
%FFAFA985855B53062906290629062906290629062F28280159FD04855A7E
%84AFFD04855AFD0685A9858585A9858585AF847E5AFD24FFA8842FA8FD06
%FFA829287EA9FD1CFFA959592F2F072F06290629282F282F2F7EFD41FFA9
%FFAFFFFFFFA8FFA9FFAFFFA9FF7E847EA9FFFFA9FFAFFFA9FFFFFFA9FFFF
%FFA9FFAFFFA9FFAFFFA9FFAFFFA9FD04FFAF0D0E2F7E5359532F075AA8FD
%75FFAFA9FD05FFAFAFAFFD48FFAFFDFCFFFD05FFAFFFFFFFA9FFFFFFA9FF
%FFFFA9FFFFFFA9FFFFFFA9FFFFFFA9FDFCFFFDFCFFFDFCFFFDFCFFFDFCFF
%FDFCFFFDFCFFFDFCFFFD70FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">97_1_35</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2019-06-10T16:02:15+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2019-06-10T16:02:15+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2019-06-10T16:02:15+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>180</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAtAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUPqN/badp91qF0xW2s4nnnYAsRHEpdiANzsMlCBkQB&#xA;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&#xA;2KuxV//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:84958797-5f65-ea4d-a5d4-d2b34b0124b4</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:84958797-5f65-ea4d-a5d4-d2b34b0124b4</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:782e65c8-bda8-1745-b4f5-87d5b6c4f02d</stRef:instanceID>
            <stRef:documentID>xmp.did:782e65c8-bda8-1745-b4f5-87d5b6c4f02d</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ebaa02d6-9ff3-0040-b34c-bedc95b313bc</stEvt:instanceID>
                  <stEvt:when>2018-10-20T21:41:43+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:e51652be-5387-1043-8e6f-24d9fc650893</stEvt:instanceID>
                  <stEvt:when>2018-10-20T21:41:55+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9a42ce44-5075-6949-a69f-4a5365d379b4</stEvt:instanceID>
                  <stEvt:when>2018-11-22T18:13:06+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:e38c8622-f8d9-be40-b95d-d9066de08543</stEvt:instanceID>
                  <stEvt:when>2018-11-22T18:30:41+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:88bc026a-33ee-884a-b75d-942b15c09fde</stEvt:instanceID>
                  <stEvt:when>2018-11-22T18:33:25+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:657d0bbe-5267-1f4d-a07e-117ed81a067d</stEvt:instanceID>
                  <stEvt:when>2018-11-22T18:41:20+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:68616103-8be2-1d4d-9afc-53cae90d117f</stEvt:instanceID>
                  <stEvt:when>2018-11-22T18:48:19+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:a533ee9b-d0e6-0948-a80d-59c9b9d5d7e1</stEvt:instanceID>
                  <stEvt:when>2018-11-22T18:48:19+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7b420a6d-7da6-0141-991d-a8ba6af0742a</stEvt:instanceID>
                  <stEvt:when>2018-11-22T19:31:39+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:c416e5aa-0ff3-b94e-9c4d-ca382ca74854</stEvt:instanceID>
                  <stEvt:when>2018-11-22T19:33:03+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:5e66a9b7-b2dc-3641-a6a7-5c8007131161</stEvt:instanceID>
                  <stEvt:when>2019-03-22T23:37:01+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d65cda16-176f-e745-8736-786cc9f60c10</stEvt:instanceID>
                  <stEvt:when>2019-03-22T23:37:09+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0c568cb6-c9bb-7c47-9abc-9042f881befe</stEvt:instanceID>
                  <stEvt:when>2019-06-08T16:00:41+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:dd105cdb-5dc0-6245-9e5f-228baa2ef589</stEvt:instanceID>
                  <stEvt:when>2019-06-08T16:05:22+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:58738b07-51ce-1544-85ce-737dae2891db</stEvt:instanceID>
                  <stEvt:when>2019-06-08T16:23:24+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:231de144-da89-2a40-af22-0ddeffef0717</stEvt:instanceID>
                  <stEvt:when>2019-06-08T16:29:29+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:dee568fb-3b98-d54f-971d-89b0a843b293</stEvt:instanceID>
                  <stEvt:when>2019-06-09T19:29:54+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1786516c-7fac-3d4b-8ab0-03ff927762bb</stEvt:instanceID>
                  <stEvt:when>2019-06-09T19:34:19+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f6d2a573-1eee-5443-a1dd-16b2961e86db</stEvt:instanceID>
                  <stEvt:when>2019-06-10T11:10:54+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:5e38a4b2-6172-154c-8c63-752aab1e08eb</stEvt:instanceID>
                  <stEvt:when>2019-06-10T11:52:47+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:fe450caa-9c76-654e-8238-f95b894e4df4</stEvt:instanceID>
                  <stEvt:when>2019-06-10T12:24:11+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f717b1e1-d0a9-5340-893e-a7a579d65b7b</stEvt:instanceID>
                  <stEvt:when>2019-06-10T12:38:58+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1bfad6b4-5888-f945-84a9-e3317a7a30d5</stEvt:instanceID>
                  <stEvt:when>2019-06-10T12:39+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:fa8a8189-3c5f-c44e-94a8-e82c31ed7478</stEvt:instanceID>
                  <stEvt:when>2019-06-10T14:09:23+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f2f035cb-8774-9b48-a4b2-b552d73b583c</stEvt:instanceID>
                  <stEvt:when>2019-06-10T15:50:38+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:84958797-5f65-ea4d-a5d4-d2b34b0124b4</stEvt:instanceID>
                  <stEvt:when>2019-06-10T16:02:15+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1000.000000</stDim:w>
            <stDim:h>700.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Группа образцов по умолчанию</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Белый</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Черный</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=255 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=81 G=119 B=168 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>81</xmpG:red>
                           <xmpG:green>119</xmpG:green>
                           <xmpG:blue>168</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -700 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 700 li
1000 700 li
1000 0 li
cp
clp
1000 700 mo
0 700 li
0 0 li
1000 0 li
1000 700 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
gsave
911.866 485.49 mo
913.357 483.198 914.762 480.714 916.07 478.024 cv
927.421 454.689 920.535 427.34 904.75 405.839 cv
879.312 371.19 856.56 359.74 811.265 359.963 cv
772.967 360.15 729.112 352.476 704.203 326.22 cv
675.383 295.842 681.77 250.717 656.912 218.001 cv
639.685 195.394 609.657 181.681 579.263 172.696 cv
462.394 138.139 311.781 172.528 258.99 265.605 cv
246.451 287.676 239.392 312.301 221.179 331.473 cv
180.957 373.808 93.2265 383.196 77.9141 435.589 cv
73.0782 452.135 77.3242 469.608 83.7866 485.776 cv
102.18 531.64 142.147 574.058 197.732 588.625 cv
286.483 611.884 406.953 582.735 485.304 546.566 cv
524.488 528.477 559.793 496.34 602.25 483.959 cv
662.922 466.283 727.111 479.993 786.371 494.773 cv
829.588 505.551 885.015 526.744 911.866 485.49 cv
clp
gsave
838.318 575.114 mo
1037.68 575.324 li
1037.86 410.04 li
838.493 409.83 li
838.318 575.114 li
clp
913.718 420.653 mo
839.174 420.575 li
839.179 415.616 li
911.118 415.692 li
912.038 417.325 912.905 418.979 913.718 420.653 cv
.0889906 .0406806 0 0 cmyk
f
921.688 453.717 mo
838.447 453.63 li
838.447 453.629 li
839.139 453.63 li
839.144 448.671 li
921.537 448.758 li
921.652 450.413 921.703 452.066 921.688 453.717 cv
f
911.015 486.763 mo
839.103 486.687 li
839.109 481.729 li
914.092 481.808 li
913.374 483.087 912.631 484.314 911.866 485.49 cv
911.586 485.921 911.302 486.346 911.015 486.763 cv
f
919.723 437.186 mo
839.156 437.101 li
839.161 432.142 li
918.341 432.226 li
918.858 433.87 919.32 435.526 919.723 437.186 cv
f
919.15 470.243 mo
839.121 470.159 li
839.127 465.2 li
920.441 465.286 li
920.088 466.951 919.66 468.602 919.15 470.243 cv
f
892.766 503.273 mo
839.087 503.216 li
839.092 498.257 li
900.354 498.322 li
897.942 500.24 895.407 501.882 892.766 503.273 cv
f
839.174 420.575 mo
838.482 420.574 li
838.487 415.615 li
839.179 415.615 li
839.179 415.616 li
839.174 420.575 li
839.174 420.575 li
f
839.139 453.63 mo
838.447 453.629 li
838.452 448.67 li
839.144 448.671 li
839.144 448.671 li
839.139 453.63 li
f
839.103 486.688 mo
838.412 486.687 li
838.417 481.728 li
839.109 481.728 li
839.109 481.729 li
839.103 486.687 li
839.103 486.688 li
f
839.156 437.101 mo
838.464 437.101 li
838.47 432.141 li
839.161 432.142 li
839.161 432.142 li
839.156 437.101 li
839.156 437.101 li
f
839.121 470.159 mo
838.429 470.158 li
838.435 465.199 li
839.127 465.199 li
839.127 465.2 li
839.121 470.159 li
839.121 470.159 li
f
839.087 503.217 mo
838.394 503.216 li
838.4 498.256 li
839.092 498.257 li
839.092 498.257 li
839.087 503.216 li
839.087 503.217 li
f
grestore
gsave
838.493 409.83 mo
1037.86 410.04 li
1038.03 244.757 li
838.667 244.547 li
838.493 409.83 li
clp
889.438 387.57 mo
838.517 387.516 li
838.517 387.516 li
839.208 387.517 li
839.214 382.558 li
884.219 382.606 li
885.975 384.166 887.712 385.82 889.438 387.57 cv
.0889906 .0406806 0 0 cmyk
f
867.774 371.018 mo
839.226 370.988 li
839.231 366.029 li
838.539 366.029 li
838.539 366.028 li
856.441 366.047 li
860.4 367.435 864.163 369.085 867.774 371.018 cv
f
903.471 404.113 mo
839.191 404.045 li
839.196 399.087 li
899.639 399.151 li
900.912 400.747 902.19 402.402 903.471 404.113 cv
f
839.208 387.517 mo
838.517 387.516 li
838.522 382.557 li
839.214 382.558 li
839.214 382.558 li
839.208 387.517 li
f
839.226 370.988 mo
838.534 370.988 li
838.539 366.029 li
839.231 366.029 li
839.226 370.988 li
839.226 370.988 li
f
839.191 404.046 mo
838.499 404.045 li
838.505 399.086 li
839.196 399.087 li
839.196 399.087 li
839.191 404.045 li
839.191 404.046 li
f
grestore
gsave
638.953 574.904 mo
838.318 575.114 li
838.493 409.83 li
639.128 409.62 li
638.953 574.904 li
clp
838.447 453.63 mo
837.754 453.629 li
837.754 453.628 li
838.447 453.629 li
838.447 453.63 li
.0889906 .0406806 0 0 cmyk
f
838.482 420.574 mo
639.117 420.364 li
639.117 420.364 li
639.809 420.364 li
639.813 415.405 li
639.122 415.404 li
639.122 415.404 li
838.487 415.615 li
838.482 420.574 li
f
838.447 453.629 mo
837.754 453.628 li
639.773 453.419 li
639.778 448.461 li
639.087 448.46 li
639.087 448.46 li
838.452 448.67 li
838.447 453.629 li
f
838.412 486.687 mo
751.766 486.595 li
743.422 484.778 735.015 483.09 726.568 481.61 cv
838.417 481.728 li
838.412 486.687 li
f
838.464 437.101 mo
639.099 436.89 li
639.099 436.89 li
639.791 436.891 li
639.796 431.932 li
838.47 432.141 li
838.464 437.101 li
f
838.429 470.158 mo
639.064 469.948 li
639.064 469.948 li
639.756 469.948 li
639.762 464.99 li
838.435 465.199 li
838.429 470.158 li
f
838.394 503.216 mo
818.509 503.195 li
812.106 501.6 805.75 499.878 799.548 498.215 cv
838.4 498.256 li
838.394 503.216 li
f
639.809 420.364 mo
639.117 420.364 li
639.122 415.404 li
639.813 415.405 li
639.809 420.364 li
f
639.773 453.42 mo
639.082 453.419 li
639.087 448.46 li
639.778 448.461 li
639.773 453.419 li
639.773 453.42 li
f
639.791 436.891 mo
639.099 436.89 li
639.104 431.931 li
639.796 431.932 li
639.796 431.932 li
639.791 436.891 li
f
639.756 469.948 mo
639.064 469.948 li
639.069 464.988 li
639.762 464.989 li
639.762 464.99 li
639.756 469.948 li
f
grestore
gsave
639.128 409.62 mo
838.493 409.83 li
838.667 244.547 li
639.302 244.336 li
639.128 409.62 li
clp
838.517 387.516 mo
837.824 387.516 li
837.824 387.515 li
838.517 387.516 li
838.517 387.516 li
.0889906 .0406806 0 0 cmyk
f
838.539 366.029 mo
837.847 366.028 li
837.847 366.027 li
838.539 366.028 li
838.539 366.029 li
f
674.194 255.117 mo
639.982 255.081 li
639.988 250.122 li
672.672 250.156 li
673.199 251.802 673.705 253.456 674.194 255.117 cv
f
683.421 288.182 mo
639.947 288.136 li
639.953 283.177 li
639.261 283.176 li
639.261 283.176 li
681.909 283.221 li
682.396 284.882 682.898 286.536 683.421 288.182 cv
f
699.897 321.257 mo
639.913 321.193 li
639.918 316.235 li
639.226 316.234 li
639.226 316.233 li
696.279 316.294 li
697.408 317.979 698.613 319.636 699.897 321.257 cv
f
758.039 354.373 mo
639.878 354.248 li
639.884 349.29 li
741.351 349.397 li
746.736 351.363 752.325 353.009 758.039 354.373 cv
f
838.517 387.516 mo
837.824 387.515 li
639.844 387.306 li
639.849 382.348 li
639.157 382.347 li
639.157 382.346 li
838.522 382.557 li
838.517 387.516 li
f
678.715 271.648 mo
639.273 271.607 li
639.273 271.606 li
639.966 271.607 li
639.971 266.648 li
639.278 266.647 li
639.278 266.647 li
677.4 266.687 li
677.84 268.341 678.276 269.995 678.715 271.648 cv
f
689.773 304.717 mo
639.931 304.664 li
639.935 299.706 li
639.243 299.705 li
639.243 299.705 li
687.59 299.756 li
688.277 301.426 689.003 303.082 689.773 304.717 cv
f
718.056 337.805 mo
639.203 337.722 li
639.203 337.721 li
639.895 337.722 li
639.901 332.764 li
639.209 332.763 li
639.209 332.763 li
711.338 332.839 li
713.485 334.596 715.726 336.249 718.056 337.805 cv
f
838.534 370.988 mo
639.169 370.777 li
639.169 370.777 li
639.86 370.777 li
639.866 365.819 li
639.174 365.819 li
639.174 365.818 li
837.847 366.028 li
838.539 366.029 li
838.534 370.988 li
f
838.499 404.045 mo
639.826 403.835 li
639.831 398.877 li
639.139 398.876 li
639.139 398.876 li
838.505 399.086 li
838.499 404.045 li
f
639.982 255.081 mo
639.29 255.08 li
639.296 250.121 li
639.988 250.121 li
639.988 250.122 li
639.982 255.081 li
f
639.947 288.136 mo
639.256 288.135 li
639.261 283.176 li
639.953 283.177 li
639.947 288.136 li
f
639.913 321.193 mo
639.221 321.193 li
639.226 316.234 li
639.918 316.235 li
639.913 321.193 li
f
639.878 354.249 mo
639.186 354.248 li
639.191 349.289 li
639.884 349.29 li
639.884 349.29 li
639.878 354.248 li
639.878 354.249 li
f
639.844 387.307 mo
639.151 387.306 li
639.157 382.347 li
639.849 382.348 li
639.844 387.306 li
639.844 387.307 li
f
639.966 271.607 mo
639.273 271.606 li
639.278 266.647 li
639.971 266.648 li
639.966 271.607 li
f
639.931 304.665 mo
639.238 304.664 li
639.243 299.705 li
639.935 299.706 li
639.931 304.665 li
f
639.895 337.722 mo
639.203 337.721 li
639.209 332.763 li
639.901 332.764 li
639.895 337.722 li
f
639.86 370.777 mo
639.169 370.777 li
639.174 365.819 li
639.866 365.819 li
639.86 370.777 li
f
639.826 403.836 mo
639.134 403.835 li
639.139 398.876 li
639.831 398.877 li
639.826 403.835 li
639.826 403.836 li
f
grestore
gsave
639.302 244.336 mo
838.667 244.547 li
838.842 79.2631 li
639.477 79.0527 li
639.302 244.336 li
clp
659.789 222.044 mo
639.325 222.022 li
639.325 222.022 li
640.018 222.023 li
640.023 217.064 li
639.331 217.063 li
639.331 217.063 li
656.2 217.081 li
656.44 217.387 656.677 217.692 656.912 218.001 cv
657.921 219.329 658.878 220.677 659.789 222.044 cv
.0889906 .0406806 0 0 cmyk
f
645.172 205.5 mo
639.343 205.493 li
639.343 205.493 li
640.035 205.494 li
640.039 201.27 li
641.805 202.634 643.519 204.045 645.172 205.5 cv
f
668.477 238.582 mo
640 238.552 li
640.005 233.593 li
639.313 233.592 li
639.313 233.592 li
666.285 233.621 li
667.057 235.257 667.787 236.913 668.477 238.582 cv
f
640.018 222.023 mo
639.325 222.022 li
639.331 217.063 li
640.023 217.064 li
640.018 222.023 li
f
640.035 205.494 mo
639.343 205.493 li
639.348 200.74 li
639.579 200.915 639.81 201.093 640.039 201.27 cv
640.035 205.494 li
f
640 238.552 mo
639.308 238.551 li
639.313 233.592 li
640.005 233.593 li
640 238.552 li
f
grestore
gsave
439.588 574.693 mo
638.953 574.904 li
639.128 409.62 li
439.762 409.41 li
439.588 574.693 li
clp
639.117 420.364 mo
638.424 420.363 li
638.424 420.363 li
639.117 420.364 li
639.117 420.364 li
639.122 415.404 mo
638.43 415.404 li
638.43 415.403 li
639.122 415.404 li
639.122 415.404 li
.0889906 .0406806 0 0 cmyk
f
639.087 448.46 mo
638.394 448.459 li
638.394 448.459 li
639.087 448.46 li
639.087 448.46 li
f
639.099 436.89 mo
638.406 436.89 li
638.406 436.889 li
639.099 436.89 li
639.099 436.89 li
f
639.064 469.948 mo
638.372 469.947 li
638.372 469.947 li
639.064 469.948 li
639.064 469.948 li
f
639.117 420.364 mo
638.424 420.363 li
440.443 420.154 li
440.448 415.195 li
439.756 415.195 li
439.756 415.194 li
638.43 415.404 li
639.122 415.404 li
639.117 420.364 li
f
639.082 453.419 mo
440.408 453.209 li
440.414 448.251 li
638.394 448.459 li
639.087 448.46 li
639.082 453.419 li
f
594.58 486.43 mo
440.374 486.267 li
440.378 481.308 li
611.588 481.489 li
608.467 482.233 605.353 483.055 602.25 483.959 cv
599.666 484.712 597.113 485.538 594.58 486.43 cv
f
532.529 519.42 mo
439.646 519.322 li
439.646 519.321 li
440.338 519.322 li
440.344 514.363 li
439.651 514.362 li
439.651 514.362 li
540.392 514.468 li
537.766 516.112 535.145 517.767 532.529 519.42 cv
f
472.122 552.414 mo
439.611 552.38 li
439.611 552.379 li
440.304 552.38 li
440.309 547.421 li
483.341 547.467 li
479.689 549.132 475.944 550.784 472.122 552.414 cv
f
639.099 436.89 mo
638.406 436.889 li
440.426 436.68 li
440.431 431.722 li
439.739 431.721 li
439.739 431.72 li
639.104 431.931 li
639.099 436.89 li
f
639.064 469.948 mo
638.372 469.947 li
440.391 469.738 li
440.396 464.779 li
439.704 464.779 li
439.704 464.778 li
639.069 464.988 li
639.064 469.948 li
f
559.56 502.921 mo
440.356 502.796 li
440.361 497.837 li
439.669 497.836 li
439.669 497.836 li
568.579 497.972 li
565.55 499.565 562.545 501.22 559.56 502.921 cv
f
505.647 535.92 mo
440.321 535.851 li
440.326 530.893 li
439.634 530.892 li
439.634 530.891 li
514.011 530.97 li
511.23 532.655 508.445 534.309 505.647 535.92 cv
f
440.291 564.811 mo
440.292 563.95 li
439.599 563.949 li
439.599 563.949 li
442.693 563.952 li
441.893 564.24 441.095 564.525 440.291 564.811 cv
f
440.443 420.154 mo
439.751 420.154 li
439.756 415.195 li
440.448 415.195 li
440.443 420.154 li
440.443 420.154 li
f
440.408 453.21 mo
439.716 453.209 li
439.721 448.249 li
440.414 448.25 li
440.414 448.251 li
440.408 453.209 li
440.408 453.21 li
f
440.374 486.268 mo
439.681 486.267 li
439.686 481.307 li
440.378 481.308 li
440.378 481.308 li
440.374 486.267 li
440.374 486.268 li
f
440.338 519.322 mo
439.646 519.321 li
439.651 514.362 li
440.344 514.363 li
440.338 519.322 li
f
440.304 552.38 mo
439.611 552.379 li
439.617 547.42 li
440.309 547.421 li
440.309 547.421 li
440.304 552.38 li
f
440.426 436.681 mo
439.734 436.68 li
439.739 431.721 li
440.431 431.722 li
440.426 436.68 li
440.426 436.681 li
f
440.391 469.738 mo
439.699 469.737 li
439.704 464.779 li
440.396 464.779 li
440.391 469.738 li
440.391 469.738 li
f
440.356 502.796 mo
439.664 502.795 li
439.669 497.836 li
440.361 497.837 li
440.356 502.796 li
440.356 502.796 li
f
440.321 535.852 mo
439.629 535.851 li
439.634 530.892 li
440.326 530.893 li
440.321 535.851 li
440.321 535.852 li
f
439.598 565.056 mo
439.599 563.949 li
440.292 563.95 li
440.291 564.811 li
440.063 564.892 439.826 564.976 439.598 565.056 cv
f
grestore
gsave
439.762 409.41 mo
639.128 409.62 li
639.302 244.336 li
439.937 244.126 li
439.762 409.41 li
clp
639.261 283.176 mo
638.568 283.175 li
638.568 283.175 li
639.261 283.176 li
639.261 283.176 li
.0889906 .0406806 0 0 cmyk
f
639.226 316.234 mo
638.533 316.233 li
638.533 316.233 li
639.226 316.233 li
639.226 316.234 li
f
639.157 382.347 mo
638.464 382.346 li
638.464 382.346 li
639.157 382.346 li
639.157 382.347 li
f
639.273 271.607 mo
638.581 271.606 li
638.581 271.605 li
639.273 271.606 li
639.273 271.607 li
639.278 266.647 mo
638.586 266.647 li
638.586 266.646 li
639.278 266.647 li
639.278 266.647 li
f
639.243 299.705 mo
638.552 299.705 li
638.552 299.704 li
639.243 299.705 li
639.243 299.705 li
f
639.203 337.722 mo
638.511 337.721 li
638.511 337.721 li
639.203 337.721 li
639.203 337.722 li
639.209 332.763 mo
638.516 332.762 li
638.516 332.762 li
639.209 332.763 li
639.209 332.763 li
f
639.169 370.777 mo
638.476 370.776 li
638.476 370.776 li
639.169 370.777 li
639.169 370.777 li
639.174 365.819 mo
638.481 365.818 li
638.481 365.817 li
639.174 365.818 li
639.174 365.819 li
f
639.139 398.876 mo
638.446 398.875 li
638.446 398.875 li
639.139 398.876 li
639.139 398.876 li
f
639.29 255.08 mo
440.618 254.87 li
440.623 249.911 li
639.296 250.121 li
639.29 255.08 li
f
639.256 288.135 mo
440.583 287.926 li
440.588 282.967 li
439.896 282.966 li
439.896 282.966 li
638.568 283.175 li
639.261 283.176 li
639.256 288.135 li
f
639.221 321.193 mo
439.856 320.983 li
439.856 320.982 li
440.548 320.983 li
440.553 316.024 li
439.861 316.024 li
439.861 316.024 li
638.533 316.233 li
639.226 316.234 li
639.221 321.193 li
f
639.186 354.248 mo
440.513 354.039 li
440.518 349.08 li
439.826 349.079 li
439.826 349.079 li
639.191 349.289 li
639.186 354.248 li
f
639.151 387.306 mo
440.478 387.096 li
440.483 382.138 li
439.791 382.137 li
439.791 382.136 li
638.464 382.346 li
639.157 382.347 li
639.151 387.306 li
f
639.273 271.606 mo
638.581 271.605 li
440.6 271.397 li
440.605 266.438 li
638.586 266.647 li
639.278 266.647 li
639.273 271.606 li
f
639.238 304.664 mo
439.873 304.454 li
439.873 304.454 li
440.565 304.454 li
440.57 299.496 li
439.878 299.495 li
439.878 299.495 li
638.552 299.705 li
639.243 299.705 li
639.238 304.664 li
f
639.203 337.721 mo
638.511 337.721 li
439.838 337.511 li
439.838 337.511 li
440.53 337.512 li
440.536 332.553 li
439.843 332.553 li
439.843 332.552 li
638.516 332.762 li
639.209 332.763 li
639.203 337.721 li
f
639.169 370.777 mo
638.476 370.776 li
439.803 370.567 li
439.803 370.567 li
440.495 370.567 li
440.501 365.609 li
638.481 365.818 li
639.174 365.819 li
639.169 370.777 li
f
639.134 403.835 mo
440.46 403.625 li
440.466 398.667 li
638.446 398.875 li
639.139 398.876 li
639.134 403.835 li
f
440.618 254.87 mo
439.925 254.869 li
439.93 249.91 li
440.623 249.911 li
440.623 249.911 li
440.618 254.87 li
f
440.583 287.926 mo
439.89 287.925 li
439.896 282.966 li
440.588 282.967 li
440.583 287.926 li
f
440.548 320.983 mo
439.856 320.982 li
439.861 316.024 li
440.553 316.024 li
440.548 320.983 li
f
440.513 354.039 mo
439.821 354.038 li
439.826 349.079 li
440.518 349.08 li
440.513 354.039 li
440.513 354.039 li
f
440.478 387.097 mo
439.786 387.096 li
439.791 382.137 li
440.483 382.138 li
440.478 387.096 li
440.478 387.097 li
f
440.6 271.397 mo
439.908 271.396 li
439.913 266.437 li
440.605 266.438 li
440.605 266.438 li
440.6 271.397 li
f
440.565 304.454 mo
439.873 304.454 li
439.878 299.495 li
440.57 299.496 li
440.565 304.454 li
f
440.53 337.512 mo
439.838 337.511 li
439.843 332.553 li
440.536 332.553 li
440.53 337.512 li
f
440.495 370.567 mo
439.803 370.567 li
439.809 365.608 li
440.501 365.608 li
440.501 365.609 li
440.495 370.567 li
f
440.46 403.626 mo
439.768 403.625 li
439.774 398.665 li
440.466 398.666 li
440.466 398.667 li
440.46 403.625 li
440.46 403.626 li
f
grestore
gsave
439.937 244.126 mo
639.302 244.336 li
639.477 79.0527 li
440.111 78.8423 li
439.937 244.126 li
clp
639.325 222.022 mo
638.633 222.022 li
638.633 222.021 li
639.325 222.022 li
639.325 222.022 li
639.331 217.063 mo
638.639 217.063 li
638.639 217.062 li
639.331 217.063 li
639.331 217.063 li
.0889906 .0406806 0 0 cmyk
f
639.343 205.493 mo
638.65 205.493 li
638.65 205.493 li
639.343 205.493 li
639.343 205.493 li
639.076 200.534 mo
638.656 200.534 li
638.656 200.534 li
639.076 200.534 li
639.076 200.534 li
f
639.313 233.592 mo
638.621 233.591 li
638.621 233.591 li
639.313 233.592 li
639.313 233.592 li
f
620.612 188.944 mo
439.995 188.754 li
439.995 188.754 li
440.687 188.755 li
440.692 183.796 li
440 183.795 li
440 183.795 li
610.35 183.975 li
613.848 185.537 617.276 187.19 620.612 188.944 cv
f
639.325 222.022 mo
638.633 222.021 li
440.652 221.812 li
440.658 216.854 li
439.965 216.853 li
439.965 216.853 li
638.639 217.063 li
639.331 217.063 li
639.325 222.022 li
f
578.163 172.373 mo
440.012 172.227 li
440.012 172.227 li
440.705 172.228 li
440.71 167.27 li
440.018 167.269 li
440.018 167.269 li
558.689 167.394 li
565.269 168.85 571.76 170.507 578.163 172.373 cv
f
639.343 205.493 mo
638.65 205.493 li
439.978 205.283 li
439.978 205.283 li
440.67 205.284 li
440.675 200.325 li
439.983 200.324 li
439.983 200.324 li
638.656 200.534 li
639.076 200.534 li
639.167 200.603 639.257 200.671 639.348 200.74 cv
639.343 205.493 li
f
639.308 238.551 mo
440.635 238.341 li
440.64 233.383 li
638.621 233.591 li
639.313 233.592 li
639.308 238.551 li
f
440.687 188.755 mo
439.995 188.754 li
440 183.795 li
440.692 183.796 li
440.687 188.755 li
f
440.652 221.812 mo
439.96 221.812 li
439.965 216.853 li
440.658 216.854 li
440.652 221.812 li
f
440.705 172.228 mo
440.012 172.227 li
440.018 167.269 li
440.71 167.27 li
440.705 172.228 li
f
440.67 205.284 mo
439.978 205.283 li
439.983 200.324 li
440.675 200.325 li
440.67 205.284 li
f
440.635 238.341 mo
439.943 238.341 li
439.948 233.381 li
440.64 233.382 li
440.64 233.383 li
440.635 238.341 li
f
grestore
gsave
240.048 739.767 mo
439.414 739.978 li
439.588 574.693 li
240.223 574.483 li
240.048 739.767 li
clp
368.397 585.362 mo
240.211 585.227 li
240.211 585.227 li
240.904 585.227 li
240.909 580.269 li
389.147 580.425 li
382.298 582.187 375.374 583.838 368.397 585.362 cv
.0889906 .0406806 0 0 cmyk
f
268.694 596.952 mo
265.375 596.952 262.071 596.907 258.784 596.814 cv
278.035 596.835 li
274.912 596.912 271.793 596.952 268.694 596.952 cv
f
240.904 585.227 mo
240.211 585.227 li
240.217 580.268 li
240.909 580.269 li
240.909 580.269 li
240.904 585.227 li
f
grestore
gsave
240.223 574.483 mo
439.588 574.693 li
439.762 409.41 li
240.397 409.199 li
240.223 574.483 li
clp
439.756 415.195 mo
439.064 415.194 li
439.064 415.193 li
439.756 415.194 li
439.756 415.195 li
.0889906 .0406806 0 0 cmyk
f
439.646 519.322 mo
438.954 519.321 li
438.954 519.321 li
439.646 519.321 li
439.646 519.322 li
439.651 514.362 mo
438.959 514.362 li
438.959 514.361 li
439.651 514.362 li
439.651 514.362 li
f
439.611 552.38 mo
438.919 552.379 li
438.919 552.378 li
439.611 552.379 li
439.611 552.38 li
f
439.739 431.721 mo
439.046 431.72 li
439.046 431.72 li
439.739 431.72 li
439.739 431.721 li
f
439.704 464.779 mo
439.012 464.778 li
439.012 464.777 li
439.704 464.778 li
439.704 464.779 li
f
439.669 497.836 mo
438.977 497.836 li
438.977 497.835 li
439.669 497.836 li
439.669 497.836 li
f
439.634 530.892 mo
438.942 530.891 li
438.942 530.891 li
439.634 530.891 li
439.634 530.892 li
f
439.599 563.949 mo
438.907 563.949 li
438.907 563.948 li
439.599 563.949 li
439.599 563.949 li
f
439.751 420.154 mo
241.078 419.944 li
241.083 414.985 li
439.064 415.194 li
439.756 415.195 li
439.751 420.154 li
f
439.716 453.209 mo
240.351 452.999 li
240.351 452.998 li
241.043 452.999 li
241.048 448.04 li
439.721 448.249 li
439.716 453.209 li
f
439.681 486.267 mo
240.316 486.056 li
240.316 486.056 li
241.008 486.057 li
241.014 481.098 li
439.686 481.307 li
439.681 486.267 li
f
439.646 519.321 mo
438.954 519.321 li
240.973 519.112 li
240.979 514.153 li
240.286 514.153 li
240.286 514.152 li
438.959 514.362 li
439.651 514.362 li
439.646 519.321 li
f
439.611 552.379 mo
438.919 552.378 li
240.938 552.169 li
240.944 547.211 li
439.617 547.42 li
439.611 552.379 li
f
439.734 436.68 mo
241.06 436.47 li
241.065 431.512 li
240.373 431.511 li
240.373 431.511 li
439.046 431.72 li
439.739 431.721 li
439.734 436.68 li
f
439.699 469.737 mo
241.025 469.528 li
241.031 464.569 li
439.012 464.778 li
439.704 464.779 li
439.699 469.737 li
f
439.664 502.795 mo
240.991 502.585 li
240.996 497.626 li
438.977 497.836 li
439.669 497.836 li
439.664 502.795 li
f
439.629 535.851 mo
240.264 535.64 li
240.264 535.64 li
240.956 535.641 li
240.961 530.682 li
240.269 530.682 li
240.269 530.681 li
438.942 530.891 li
439.634 530.892 li
439.629 535.851 li
f
428.38 568.897 mo
240.229 568.698 li
240.229 568.698 li
240.921 568.698 li
240.926 563.74 li
240.234 563.74 li
240.234 563.739 li
438.907 563.949 li
439.599 563.949 li
439.598 565.056 li
435.902 566.363 432.166 567.643 428.38 568.897 cv
f
241.078 419.944 mo
240.386 419.944 li
240.391 414.984 li
241.083 414.984 li
241.083 414.985 li
241.078 419.944 li
241.078 419.944 li
f
241.043 452.999 mo
240.351 452.998 li
240.356 448.039 li
241.048 448.04 li
241.048 448.04 li
241.043 452.999 li
f
241.008 486.057 mo
240.316 486.056 li
240.321 481.097 li
241.014 481.098 li
241.014 481.098 li
241.008 486.057 li
f
240.973 519.112 mo
240.281 519.112 li
240.286 514.153 li
240.979 514.153 li
240.973 519.112 li
240.973 519.112 li
f
240.938 552.17 mo
240.246 552.169 li
240.251 547.21 li
240.944 547.211 li
240.944 547.211 li
240.938 552.169 li
240.938 552.17 li
f
241.06 436.471 mo
240.368 436.47 li
240.373 431.511 li
241.065 431.512 li
241.06 436.47 li
241.06 436.471 li
f
241.025 469.528 mo
240.333 469.528 li
240.339 464.568 li
241.031 464.568 li
241.031 464.569 li
241.025 469.528 li
241.025 469.528 li
f
240.991 502.586 mo
240.299 502.585 li
240.304 497.625 li
240.996 497.626 li
240.996 497.626 li
240.991 502.585 li
240.991 502.586 li
f
240.956 535.641 mo
240.264 535.64 li
240.269 530.682 li
240.961 530.682 li
240.956 535.641 li
f
240.921 568.698 mo
240.229 568.698 li
240.234 563.74 li
240.926 563.74 li
240.921 568.698 li
f
grestore
gsave
240.397 409.199 mo
439.762 409.41 li
439.937 244.126 li
240.571 243.916 li
240.397 409.199 li
clp
439.896 282.966 mo
439.204 282.965 li
439.204 282.965 li
439.896 282.966 li
439.896 282.966 li
.0889906 .0406806 0 0 cmyk
f
439.856 320.983 mo
439.164 320.982 li
439.164 320.981 li
439.856 320.982 li
439.856 320.983 li
439.861 316.024 mo
439.169 316.023 li
439.169 316.023 li
439.861 316.024 li
439.861 316.024 li
f
439.826 349.079 mo
439.134 349.079 li
439.134 349.078 li
439.826 349.079 li
439.826 349.079 li
f
439.791 382.137 mo
439.099 382.136 li
439.099 382.136 li
439.791 382.136 li
439.791 382.137 li
f
439.873 304.454 mo
439.181 304.453 li
439.181 304.453 li
439.873 304.454 li
439.873 304.454 li
439.878 299.495 mo
439.186 299.494 li
439.186 299.494 li
439.878 299.495 li
439.878 299.495 li
f
439.838 337.511 mo
439.146 337.511 li
439.146 337.51 li
439.838 337.511 li
439.838 337.511 li
439.843 332.553 mo
439.151 332.552 li
439.151 332.552 li
439.843 332.552 li
439.843 332.553 li
f
439.803 370.567 mo
439.111 370.567 li
439.111 370.566 li
439.803 370.567 li
439.803 370.567 li
f
439.925 254.869 mo
265.808 254.686 li
266.955 253.009 268.127 251.365 269.339 249.731 cv
439.93 249.91 li
439.925 254.869 li
f
439.89 287.925 mo
247.9 287.722 li
248.675 286.07 249.451 284.416 250.233 282.766 cv
439.204 282.965 li
439.896 282.966 li
439.89 287.925 li
f
439.856 320.982 mo
439.164 320.981 li
241.183 320.773 li
241.188 315.814 li
240.495 315.813 li
240.495 315.813 li
439.169 316.023 li
439.861 316.024 li
439.856 320.982 li
f
439.821 354.038 mo
240.455 353.828 li
240.455 353.827 li
241.148 353.828 li
241.153 348.87 li
240.461 348.869 li
240.461 348.869 li
439.134 349.079 li
439.826 349.079 li
439.821 354.038 li
f
439.786 387.096 mo
240.421 386.885 li
240.421 386.885 li
241.113 386.886 li
241.118 381.927 li
439.099 382.136 li
439.791 382.137 li
439.786 387.096 li
f
439.908 271.396 mo
255.944 271.202 li
256.814 269.538 257.706 267.886 258.628 266.246 cv
439.913 266.437 li
439.908 271.396 li
f
439.873 304.454 mo
439.181 304.453 li
240.508 304.243 li
240.508 304.243 li
241.2 304.244 li
241.202 301.642 li
241.599 300.859 241.991 300.074 242.38 299.286 cv
439.186 299.494 li
439.878 299.495 li
439.873 304.454 li
f
439.838 337.511 mo
439.146 337.51 li
241.165 337.302 li
241.17 332.343 li
240.478 332.342 li
240.478 332.342 li
439.151 332.552 li
439.843 332.553 li
439.838 337.511 li
f
439.803 370.567 mo
439.111 370.566 li
240.438 370.356 li
240.438 370.356 li
241.13 370.356 li
241.136 365.399 li
240.443 365.398 li
240.443 365.397 li
439.809 365.608 li
439.803 370.567 li
f
439.768 403.625 mo
240.403 403.415 li
240.403 403.414 li
241.095 403.415 li
241.1 398.456 li
240.408 398.455 li
240.408 398.455 li
439.774 398.665 li
439.768 403.625 li
f
241.183 320.773 mo
240.49 320.772 li
240.495 315.813 li
241.188 315.814 li
241.183 320.773 li
f
241.148 353.828 mo
240.455 353.827 li
240.461 348.869 li
241.153 348.87 li
241.148 353.828 li
f
241.113 386.886 mo
240.421 386.885 li
240.426 381.926 li
241.118 381.927 li
241.118 381.927 li
241.113 386.886 li
f
241.2 304.244 mo
240.508 304.243 li
240.509 303.002 li
240.741 302.55 240.973 302.096 241.202 301.642 cv
241.2 304.244 li
f
241.165 337.302 mo
240.473 337.301 li
240.478 332.342 li
241.17 332.343 li
241.165 337.302 li
f
241.13 370.356 mo
240.438 370.356 li
240.443 365.398 li
241.136 365.399 li
241.13 370.356 li
f
241.095 403.415 mo
240.403 403.414 li
240.408 398.455 li
241.1 398.456 li
241.095 403.415 li
f
grestore
gsave
240.571 243.916 mo
439.937 244.126 li
440.111 78.8423 li
240.745 78.6319 li
240.571 243.916 li
clp
439.995 188.754 mo
439.303 188.753 li
439.303 188.753 li
439.995 188.754 li
439.995 188.754 li
440 183.795 mo
439.308 183.794 li
439.308 183.794 li
440 183.795 li
440 183.795 li
.0889906 .0406806 0 0 cmyk
f
439.965 216.853 mo
439.273 216.852 li
439.273 216.852 li
439.965 216.853 li
439.965 216.853 li
f
440.012 172.227 mo
439.32 172.227 li
439.32 172.227 li
440.012 172.227 li
440.012 172.227 li
440.018 167.269 mo
439.325 167.268 li
439.325 167.268 li
440.018 167.269 li
440.018 167.269 li
f
439.978 205.283 mo
439.285 205.282 li
439.285 205.282 li
439.978 205.283 li
439.978 205.283 li
439.983 200.324 mo
439.291 200.323 li
439.291 200.323 li
439.983 200.324 li
439.983 200.324 li
f
439.995 188.754 mo
439.303 188.753 li
347.302 188.656 li
350.977 186.932 354.713 185.283 358.503 183.709 cv
439.308 183.794 li
440 183.795 li
439.995 188.754 li
f
439.96 221.812 mo
295.595 221.66 li
297.549 219.974 299.537 218.326 301.571 216.707 cv
439.273 216.852 li
439.965 216.853 li
439.96 221.812 li
f
440.012 172.227 mo
439.32 172.227 li
391.874 172.177 li
398.429 170.33 405.083 168.685 411.823 167.239 cv
439.325 167.268 li
440.018 167.269 li
440.012 172.227 li
f
439.978 205.283 mo
439.285 205.282 li
317.589 205.154 li
320.185 203.457 322.826 201.808 325.515 200.203 cv
439.291 200.323 li
439.983 200.324 li
439.978 205.283 li
f
439.943 238.341 mo
278.763 238.17 li
280.26 236.493 281.792 234.842 283.361 233.217 cv
439.948 233.381 li
439.943 238.341 li
f
grestore
gsave
40.6832 739.557 mo
240.048 739.767 li
240.223 574.483 li
40.8574 574.273 li
40.6832 739.557 li
clp
240.211 585.227 mo
239.519 585.227 li
239.519 585.226 li
240.211 585.227 li
240.211 585.227 li
.0889906 .0406806 0 0 cmyk
f
240.211 585.227 mo
239.519 585.226 li
186.305 585.17 li
181.969 583.68 177.744 582.019 173.623 580.198 cv
240.217 580.268 li
240.211 585.227 li
f
grestore
gsave
40.8574 574.273 mo
240.223 574.483 li
240.397 409.199 li
41.0317 408.989 li
40.8574 574.273 li
clp
240.351 452.999 mo
239.659 452.998 li
239.659 452.998 li
240.351 452.998 li
240.351 452.999 li
.0889906 .0406806 0 0 cmyk
f
240.316 486.056 mo
239.624 486.056 li
239.624 486.055 li
240.316 486.056 li
240.316 486.056 li
f
240.286 514.153 mo
239.594 514.152 li
239.594 514.151 li
240.286 514.152 li
240.286 514.153 li
f
240.373 431.511 mo
239.682 431.51 li
239.682 431.51 li
240.373 431.511 li
240.373 431.511 li
f
240.264 535.64 mo
239.571 535.64 li
239.571 535.639 li
240.264 535.64 li
240.264 535.64 li
240.269 530.682 mo
239.577 530.681 li
239.577 530.681 li
240.269 530.681 li
240.269 530.682 li
f
240.229 568.698 mo
239.537 568.697 li
239.537 568.697 li
240.229 568.698 li
240.229 568.698 li
240.234 563.74 mo
239.542 563.739 li
239.542 563.738 li
240.234 563.739 li
240.234 563.74 li
f
240.386 419.944 mo
85.4223 419.78 li
86.5782 418.077 87.8234 416.427 89.1508 414.824 cv
240.391 414.984 li
240.386 419.944 li
f
240.351 452.998 mo
239.659 452.998 li
75.8654 452.825 li
75.8087 451.169 75.8165 449.516 75.8951 447.866 cv
240.356 448.039 li
240.351 452.998 li
f
240.316 486.056 mo
239.624 486.055 li
83.8325 485.891 li
83.8168 485.851 83.8023 485.815 83.7866 485.776 cv
83.1456 484.173 82.5267 482.557 81.936 480.93 cv
240.321 481.097 li
240.316 486.056 li
f
240.281 519.112 mo
101.411 518.965 li
100.303 517.323 99.2296 515.672 98.1822 514.003 cv
239.594 514.152 li
240.286 514.153 li
240.281 519.112 li
f
240.246 552.169 mo
130.203 552.053 li
128.39 550.431 126.618 548.777 124.883 547.088 cv
240.251 547.21 li
240.246 552.169 li
f
240.368 436.47 mo
77.7124 436.298 li
77.7778 436.062 77.845 435.825 77.9141 435.589 cv
78.3374 434.14 78.8159 432.725 79.3474 431.341 cv
239.682 431.51 li
240.373 431.511 li
240.368 436.47 li
f
240.333 469.528 mo
78.3426 469.356 li
77.9263 467.708 77.5532 466.054 77.2299 464.396 cv
240.339 464.568 li
240.333 469.528 li
f
240.299 502.585 mo
91.5048 502.428 li
90.6351 500.782 89.7947 499.129 88.982 497.466 cv
240.304 497.625 li
240.299 502.585 li
f
240.264 535.64 mo
239.571 535.639 li
114.012 535.507 li
112.612 533.876 111.242 532.217 109.908 530.544 cv
239.577 530.681 li
240.269 530.682 li
240.264 535.64 li
f
240.229 568.698 mo
239.537 568.697 li
152.006 568.605 li
149.503 567.01 147.053 565.353 144.656 563.639 cv
239.542 563.739 li
240.234 563.74 li
240.229 568.698 li
f
grestore
gsave
41.0317 408.989 mo
240.397 409.199 li
240.571 243.916 li
41.2062 243.706 li
41.0317 408.989 li
clp
240.495 315.813 mo
239.803 315.813 li
239.803 315.812 li
240.495 315.813 li
240.495 315.813 li
.0889906 .0406806 0 0 cmyk
f
240.455 353.828 mo
239.763 353.827 li
239.763 353.827 li
240.455 353.827 li
240.455 353.828 li
240.461 348.869 mo
239.769 348.868 li
239.769 348.868 li
240.461 348.869 li
240.461 348.869 li
f
240.421 386.885 mo
239.728 386.885 li
239.728 386.884 li
240.421 386.885 li
240.421 386.885 li
f
240.508 304.243 mo
239.867 304.243 li
239.867 304.243 li
240.508 304.243 li
240.508 304.243 li
f
240.478 332.342 mo
239.786 332.342 li
239.786 332.341 li
240.478 332.342 li
240.478 332.342 li
f
240.438 370.356 mo
239.745 370.355 li
239.745 370.355 li
240.438 370.356 li
240.438 370.356 li
240.443 365.398 mo
239.751 365.397 li
239.751 365.396 li
240.443 365.397 li
240.443 365.398 li
f
240.403 403.415 mo
239.711 403.414 li
239.711 403.414 li
240.403 403.414 li
240.403 403.415 li
240.408 398.455 mo
239.716 398.455 li
239.716 398.454 li
240.408 398.455 li
240.408 398.455 li
f
240.49 320.772 mo
229.939 320.761 li
231.092 319.133 232.195 317.479 233.256 315.806 cv
239.803 315.813 li
240.495 315.813 li
240.49 320.772 li
f
240.455 353.827 mo
239.763 353.827 li
191.883 353.776 li
194.607 352.173 197.273 350.526 199.866 348.826 cv
239.769 348.868 li
240.461 348.869 li
240.455 353.827 li
f
240.421 386.885 mo
239.728 386.884 li
126.535 386.765 li
129.648 385.084 132.83 383.439 136.063 381.816 cv
240.426 381.926 li
240.421 386.885 li
f
240.508 304.243 mo
239.867 304.243 li
240.082 303.83 240.296 303.416 240.509 303.002 cv
240.508 304.243 li
f
240.473 337.301 mo
215.157 337.274 li
216.964 335.673 218.702 334.024 220.362 332.321 cv
239.786 332.342 li
240.478 332.342 li
240.473 337.301 li
f
240.438 370.356 mo
239.745 370.355 li
159.985 370.271 li
163.401 368.639 166.816 366.994 170.202 365.324 cv
239.751 365.397 li
240.443 365.398 li
240.438 370.356 li
f
240.403 403.414 mo
239.711 403.414 li
100.984 403.267 li
103.082 401.564 105.276 399.917 107.554 398.315 cv
239.716 398.455 li
240.408 398.455 li
240.403 403.414 li
f
grestore
grestore
865.64 308.422 mo
863.105 302.31 857.885 302.344 852.066 301.674 cv
849.193 301.343 845.3 300.472 847.039 297.405 cv
847.815 296.036 850.449 294.563 851.679 293.538 cv
855.518 290.337 859.354 287.134 863.191 283.933 cv
873.904 274.998 893.385 263.711 892.901 248.019 cv
892.717 242.056 889.484 236.839 883.563 235.211 cv
876.754 233.339 869.551 236.678 862.695 235.518 cv
870.081 222.197 885.527 199.733 870.712 187.893 cv
865.197 183.486 857.815 184.642 852.787 189.798 cv
845.038 197.745 845.363 212.007 835.683 218.182 cv
827.134 223.634 820.3 213.149 811.935 213.609 cv
804.868 213.998 801.325 220.945 801.648 227.228 cv
801.898 232.104 804.445 236.232 806.509 240.459 cv
809.286 246.148 812.261 259.148 801.475 258.992 cv
794.021 258.883 787.165 253.745 780.601 260.425 cv
773.713 267.435 775.754 277.595 778.595 285.442 cv
780.781 291.482 783.279 297.436 781.959 304.119 cv
780.659 310.691 776.497 316.336 771.86 321.15 cv
770.24 322.832 773.05 324.908 774.662 323.234 cv
779.942 317.752 784.426 311.185 785.634 303.681 cv
786.989 295.257 783.045 288.151 780.701 280.47 cv
779.117 275.279 778.577 268.976 782.061 264.085 cv
785.904 258.689 791.58 260.623 796.67 261.807 cv
801.995 263.046 807.606 262.906 810.935 257.625 cv
815.451 250.46 811.658 242.716 808.446 236.3 cv
805.809 231.031 802.915 224.163 808.192 219.219 cv
812.322 215.35 816.763 218.227 820.861 220.3 cv
826.051 222.923 831.463 224.716 837.07 221.371 cv
844.242 217.091 846.627 208.61 849.645 201.543 cv
852.244 195.458 857.753 186.132 865.786 189.137 cv
871.527 191.285 873.783 198.143 873.095 203.83 cv
871.751 214.926 863.581 226.265 858.408 236.09 cv
857.976 236.912 858.469 238.114 859.33 238.38 cv
865.031 240.14 870.496 238.719 876.379 238.309 cv
881.245 237.97 885.972 238.709 888.271 243.43 cv
890.705 248.425 888.843 254.491 885.735 258.94 cv
880.416 266.558 871.726 272.291 864.626 278.21 cv
857.31 284.311 849.998 290.416 842.679 296.513 cv
842.217 296.898 841.826 297.542 841.949 298.151 cv
843.319 304.94 849.423 304.647 855.185 305.354 cv
862.307 306.228 864.97 313.206 861.714 319.611 cv
859.038 324.875 853.138 327.9 847.983 330.154 cv
830.884 337.633 812.03 343.629 793.942 347.854 cv
791.691 348.379 792.033 351.887 794.299 351.358 cv
810.387 347.601 826.674 342.188 842.146 336.262 cv
853.31 331.986 871.855 323.413 865.64 308.422 cv
cp
.61886 .222049 0 0 cmyk
f
835.057 245.852 mo
834.922 243.58 831.355 244.098 831.49 246.359 cv
833.629 282.326 810.425 313.501 782.301 335.13 cv
780.443 336.558 782.547 339.33 784.407 337.899 cv
813.603 315.447 837.272 283.101 835.057 245.852 cv
cp
f
754.223 129.771 mo
754.223 129.771 706.426 159.036 729.044 206.648 cv
729.044 206.648 775.663 195.127 754.223 129.771 cv
cp
0 .628016 .859403 0 cmyk
f
650.845 223.585 mo
650.845 223.585 700.588 249.236 729.413 205.042 cv
729.413 205.042 695.399 171.147 650.845 223.585 cv
cp
f
797.398 199.276 mo
797.398 199.276 742.366 209.6 746.598 262.188 cv
746.598 262.188 794.231 268.036 797.398 199.276 cv
cp
f
667.542 250.145 mo
667.542 250.145 704.902 291.866 747.512 260.818 cv
747.512 260.818 727.77 216.995 667.542 250.145 cv
cp
f
812.436 265.483 mo
812.436 265.483 756.546 262.502 748.274 314.624 cv
748.274 314.624 793.17 331.575 812.436 265.483 cv
cp
f
674.314 284.217 mo
674.314 284.217 700.785 333.612 749.485 313.508 cv
749.485 313.508 740.625 266.238 674.314 284.217 cv
cp
f
811.455 334.252 mo
811.455 334.252 757.206 320.515 739.056 370.071 cv
739.056 370.071 779.831 395.394 811.455 334.252 cv
cp
f
672.362 325.919 mo
672.362 325.919 688.816 379.521 740.459 369.211 cv
740.459 369.211 740.869 321.102 672.362 325.919 cv
cp
f
732.31 209.719 mo
718.331 180.928 700.771 168.508 700.596 168.386 cv
699.653 169.747 li
699.826 169.867 717.092 182.102 730.876 210.549 cv
743.604 236.819 755.885 282.686 742.093 352.005 cv
732.914 398.141 715.247 424.263 698.161 449.525 cv
694.095 455.537 690.105 461.446 686.335 467.501 cv
688.284 467.501 li
691.88 461.768 695.669 456.155 699.526 450.452 cv
715.904 426.237 734.469 398.791 743.713 352.326 cv
757.606 282.488 745.181 236.229 732.31 209.719 cv
cp
f
642.724 104.924 mo
642.724 104.924 647.005 164.265 702.093 171.253 cv
702.093 171.253 713.733 123.088 642.724 104.924 cv
cp
f
191.708 174.708 mo
191.708 174.708 237.112 181.212 235.542 224.323 cv
235.542 224.323 196.774 230.771 191.708 174.708 cv
cp
0 .311009 .78143 0 cmyk
f
299.798 211.712 mo
299.798 211.712 270.728 247.107 234.744 223.236 cv
234.744 223.236 249.322 186.742 299.798 211.712 cv
cp
f
181.784 240.932 mo
181.784 240.932 226.486 230.858 240.348 271.75 cv
240.348 271.75 206.445 291.58 181.784 240.932 cv
cp
f
295.856 237.082 mo
295.856 237.082 281.298 280.542 239.216 271.017 cv
239.216 271.017 239.853 231.686 295.856 237.082 cv
cp
f
191.937 295.56 mo
191.937 295.56 232.973 275.209 256.078 311.7 cv
256.078 311.7 227.831 338.987 191.937 295.56 cv
cp
f
301.807 264.882 mo
301.807 264.882 297.92 310.581 254.806 311.253 cv
254.806 311.253 246.148 272.858 301.807 264.882 cv
cp
f
214.958 346.924 mo
214.958 346.924 251.275 319.021 280.973 350.382 cv
280.973 350.382 258.535 382.625 214.958 346.924 cv
cp
f
316.787 295.59 mo
316.787 295.59 321.791 341.203 279.64 350.189 cv
279.64 350.189 263.742 314.168 316.787 295.59 cv
cp
f
338.607 322.145 mo
338.607 322.145 354.186 365.331 315.354 383.987 cv
315.354 383.987 291.448 352.692 338.607 322.145 cv
cp
f
252.361 395.54 mo
252.361 395.54 280.363 359.146 317.006 381.789 cv
317.006 381.789 303.513 418.786 252.361 395.54 cv
cp
f
376.882 429.961 mo
379.145 430.493 li
366.612 415.491 352.423 406.416 337.453 396.842 cv
316.426 383.393 294.684 369.486 272.836 337.789 cv
240.01 290.164 234.376 251.715 235.429 227.848 cv
236.57 202.003 245.581 187.214 245.672 187.067 cv
244.523 186.351 li
244.43 186.499 235.258 201.522 234.083 227.689 cv
233 251.782 238.652 290.573 271.723 338.555 cv
293.727 370.479 316.571 385.09 336.727 397.979 cv
351.1 407.173 364.746 415.903 376.882 429.961 cv
cp
f
267.451 119.904 mo
267.451 119.904 283.462 165.888 244.327 188.99 cv
244.327 188.99 219.971 156.565 267.451 119.904 cv
cp
f
332.955 417.224 mo
354.086 417.224 li
344.95 417.224 337.952 421.273 333.09 429.383 cv
329.412 435.395 327.576 444.835 327.576 457.705 cv
327.576 473.653 329.771 484.589 334.159 490.501 cv
338.547 496.414 344.713 499.375 352.658 499.375 cv
331.527 499.375 li
323.583 499.375 317.416 496.414 313.028 490.501 cv
308.64 484.589 306.445 473.653 306.445 457.705 cv
306.445 444.836 308.281 435.395 311.959 429.383 cv
316.821 421.273 323.819 417.224 332.955 417.224 cv
cp
.882872 .646418 0 0 cmyk
f
gsave
332.955 417.224 mo
354.086 417.224 li
344.95 417.224 337.952 421.274 333.09 429.383 cv
329.412 435.395 327.576 444.835 327.576 457.705 cv
327.576 473.653 329.771 484.589 334.159 490.501 cv
338.547 496.414 344.713 499.375 352.658 499.375 cv
331.527 499.375 li
323.583 499.375 317.416 496.414 313.028 490.501 cv
308.64 484.589 306.445 473.653 306.445 457.705 cv
306.445 444.836 308.281 435.395 311.959 429.383 cv
316.821 421.274 323.819 417.224 332.955 417.224 cv
clp
332.955 417.224 mo
354.086 417.224 li
347.766 417.224 342.469 419.161 338.195 423.041 cv
317.064 423.041 li
321.338 419.161 326.635 417.224 332.955 417.224 cv
cp
f
317.064 423.041 mo
338.195 423.041 li
337.529 423.645 336.888 424.296 336.272 424.994 cv
315.142 424.994 li
315.757 424.296 316.398 423.645 317.064 423.041 cv
cp
f
315.142 424.994 mo
336.272 424.994 li
335.759 425.576 335.262 426.191 334.783 426.839 cv
313.652 426.839 li
314.131 426.191 314.628 425.576 315.142 424.994 cv
cp
f
313.652 426.839 mo
334.783 426.839 li
334.334 427.445 333.901 428.08 333.483 428.743 cv
312.352 428.743 li
312.771 428.08 313.204 427.445 313.652 426.839 cv
cp
f
312.352 428.743 mo
333.483 428.743 li
333.351 428.953 333.22 429.166 333.09 429.383 cv
332.874 429.736 332.664 430.102 332.46 430.479 cv
311.329 430.479 li
311.533 430.102 311.743 429.736 311.959 429.383 cv
312.089 429.166 312.22 428.953 312.352 428.743 cv
cp
f
311.329 430.479 mo
332.46 430.479 li
332.203 430.956 331.956 431.451 331.719 431.965 cv
310.588 431.965 li
310.825 431.451 311.072 430.956 311.329 430.479 cv
cp
f
310.588 431.965 mo
331.719 431.965 li
331.47 432.506 331.232 433.067 331.006 433.65 cv
309.875 433.65 li
310.102 433.067 310.339 432.506 310.588 431.965 cv
cp
f
309.875 433.65 mo
331.006 433.65 li
330.761 434.28 330.529 434.936 330.311 435.614 cv
309.179 435.614 li
309.398 434.936 309.63 434.28 309.875 433.65 cv
cp
f
309.179 435.614 mo
330.311 435.614 li
330.065 436.375 329.837 437.166 329.625 437.987 cv
308.494 437.987 li
308.706 437.166 308.935 436.375 309.179 435.614 cv
cp
f
308.494 437.987 mo
329.625 437.987 li
329.382 438.931 329.16 439.916 328.96 440.94 cv
307.829 440.94 li
308.029 439.916 308.251 438.931 308.494 437.987 cv
cp
f
307.829 440.94 mo
328.96 440.94 li
328.718 442.179 328.508 443.477 328.33 444.833 cv
307.199 444.833 li
307.377 443.477 307.587 442.179 307.829 440.94 cv
cp
f
307.199 444.833 mo
328.33 444.833 li
328.104 446.546 327.93 448.352 327.806 450.252 cv
306.675 450.252 li
306.799 448.352 306.974 446.546 307.199 444.833 cv
cp
f
306.675 450.252 mo
327.806 450.252 li
327.653 452.594 327.576 455.078 327.576 457.705 cv
327.576 458.089 327.578 458.47 327.58 458.848 cv
306.449 458.848 li
306.447 458.47 306.445 458.089 306.445 457.705 cv
306.445 455.078 306.522 452.594 306.675 450.252 cv
cp
f
306.449 458.848 mo
327.58 458.848 li
327.606 462.774 327.77 466.388 328.071 469.688 cv
306.94 469.688 li
306.639 466.388 306.476 462.774 306.449 458.848 cv
cp
f
306.94 469.688 mo
328.071 469.688 li
328.354 472.803 328.76 475.638 329.289 478.193 cv
308.158 478.193 li
307.629 475.638 307.224 472.803 306.94 469.688 cv
cp
f
308.158 478.193 mo
329.289 478.193 li
330.307 483.123 331.78 487.013 333.707 489.863 cv
312.576 489.863 li
310.649 487.013 309.176 483.123 308.158 478.193 cv
cp
f
312.576 489.863 mo
333.707 489.863 li
333.855 490.082 334.005 490.295 334.159 490.501 cv
334.547 491.025 334.95 491.526 335.367 492.004 cv
314.236 492.004 li
313.819 491.526 313.417 491.025 313.028 490.501 cv
312.875 490.295 312.724 490.082 312.576 489.863 cv
cp
f
314.236 492.004 mo
335.367 492.004 li
335.831 492.535 336.312 493.038 336.811 493.512 cv
315.68 493.512 li
315.181 493.038 314.7 492.535 314.236 492.004 cv
cp
f
315.68 493.512 mo
336.811 493.512 li
337.228 493.909 337.658 494.286 338.1 494.644 cv
316.969 494.644 li
316.527 494.286 316.097 493.909 315.68 493.512 cv
cp
f
316.969 494.644 mo
338.1 494.644 li
338.5 494.966 338.909 495.272 339.329 495.562 cv
318.197 495.562 li
317.778 495.272 317.369 494.966 316.969 494.644 cv
cp
f
318.197 495.562 mo
339.329 495.562 li
339.723 495.834 340.125 496.092 340.537 496.335 cv
319.406 496.335 li
318.994 496.092 318.591 495.834 318.197 495.562 cv
cp
f
319.406 496.335 mo
340.537 496.335 li
340.938 496.572 341.348 496.795 341.766 497.004 cv
320.635 497.004 li
320.217 496.795 319.807 496.572 319.406 496.335 cv
cp
f
320.635 497.004 mo
341.766 497.004 li
342.184 497.214 342.61 497.409 343.045 497.591 cv
321.914 497.591 li
321.479 497.409 321.053 497.214 320.635 497.004 cv
cp
f
321.914 497.591 mo
343.045 497.591 li
343.493 497.778 343.949 497.95 344.415 498.107 cv
323.284 498.107 li
322.818 497.95 322.362 497.778 321.914 497.591 cv
cp
f
323.284 498.107 mo
344.415 498.107 li
344.902 498.273 345.399 498.422 345.907 498.555 cv
324.776 498.555 li
324.269 498.422 323.771 498.273 323.284 498.107 cv
cp
f
324.776 498.555 mo
345.907 498.555 li
346.459 498.7 347.024 498.825 347.6 498.933 cv
326.469 498.933 li
325.893 498.825 325.329 498.7 324.776 498.555 cv
cp
f
326.469 498.933 mo
347.6 498.933 li
348.244 499.052 348.902 499.146 349.575 499.218 cv
328.444 499.218 li
327.771 499.146 327.113 499.052 326.469 498.933 cv
cp
f
328.444 499.218 mo
349.575 499.218 li
350.367 499.301 351.179 499.352 352.012 499.369 cv
330.881 499.369 li
330.048 499.352 329.236 499.301 328.444 499.218 cv
cp
f
330.881 499.369 mo
352.012 499.369 li
352.226 499.373 352.441 499.375 352.658 499.375 cv
331.527 499.375 li
331.311 499.375 331.095 499.373 330.881 499.369 cv
cp
f
grestore
391.659 428.707 mo
412.79 428.707 li
377.21 437.446 li
356.079 437.446 li
391.659 428.707 li
cp
f
331.976 383.95 mo
353.107 383.95 li
369.535 383.95 382.447 387.622 391.843 394.948 cv
401.24 402.274 408.222 413.533 412.79 428.707 cv
391.659 428.707 li
387.091 413.533 380.109 402.274 370.712 394.948 cv
361.316 387.622 348.404 383.95 331.976 383.95 cv
cp
f
gsave
331.976 383.95 mo
353.107 383.95 li
369.535 383.95 382.447 387.622 391.843 394.948 cv
401.24 402.274 408.222 413.533 412.79 428.707 cv
391.659 428.707 li
387.091 413.533 380.109 402.274 370.712 394.948 cv
361.316 387.622 348.404 383.95 331.976 383.95 cv
clp
331.976 383.95 mo
353.107 383.95 li
353.863 383.95 354.612 383.958 355.354 383.974 cv
334.223 383.974 li
333.481 383.958 332.732 383.95 331.976 383.95 cv
cp
f
334.223 383.974 mo
355.354 383.974 li
358.077 384.031 360.699 384.193 363.221 384.46 cv
342.09 384.46 li
339.568 384.193 336.946 384.031 334.223 383.974 cv
cp
f
342.09 384.46 mo
363.221 384.46 li
365.268 384.677 367.248 384.963 369.161 385.317 cv
348.03 385.317 li
346.117 384.963 344.137 384.677 342.09 384.46 cv
cp
f
348.03 385.317 mo
369.161 385.317 li
370.789 385.618 372.368 385.97 373.899 386.371 cv
352.769 386.371 li
351.237 385.97 349.658 385.618 348.03 385.317 cv
cp
f
352.769 386.371 mo
373.899 386.371 li
375.264 386.729 376.59 387.126 377.878 387.563 cv
356.748 387.563 li
355.459 387.126 354.133 386.729 352.769 386.371 cv
cp
f
356.748 387.563 mo
377.878 387.563 li
379.06 387.963 380.21 388.396 381.328 388.863 cv
360.197 388.863 li
359.079 388.396 357.929 387.963 356.748 387.563 cv
cp
f
360.197 388.863 mo
381.328 388.863 li
382.382 389.304 383.408 389.773 384.405 390.272 cv
363.274 390.272 li
362.277 389.773 361.251 389.304 360.197 388.863 cv
cp
f
363.274 390.272 mo
384.405 390.272 li
385.369 390.755 386.306 391.266 387.217 391.803 cv
366.086 391.803 li
365.175 391.266 364.238 390.755 363.274 390.272 cv
cp
f
366.086 391.803 mo
387.217 391.803 li
388.123 392.338 389.003 392.9 389.856 393.49 cv
368.726 393.49 li
367.872 392.9 366.992 392.338 366.086 391.803 cv
cp
f
368.726 393.49 mo
389.856 393.49 li
390.535 393.959 391.198 394.445 391.843 394.948 cv
392.051 395.11 392.258 395.274 392.464 395.44 cv
371.333 395.44 li
371.127 395.274 370.92 395.11 370.712 394.948 cv
370.067 394.445 369.404 393.959 368.726 393.49 cv
cp
f
371.333 395.44 mo
392.464 395.44 li
393.458 396.244 394.426 397.092 395.365 397.985 cv
374.234 397.985 li
373.295 397.092 372.328 396.244 371.333 395.44 cv
cp
f
374.234 397.985 mo
395.365 397.985 li
396.481 399.047 397.559 400.172 398.597 401.361 cv
377.466 401.361 li
376.428 400.172 375.351 399.047 374.234 397.985 cv
cp
f
377.466 401.361 mo
398.597 401.361 li
400.057 403.033 401.44 404.831 402.746 406.756 cv
381.615 406.756 li
380.309 404.831 378.926 403.033 377.466 401.361 cv
cp
f
381.615 406.756 mo
402.746 406.756 li
406.863 412.823 410.211 420.142 412.79 428.707 cv
391.659 428.707 li
389.081 420.142 385.732 412.823 381.615 406.756 cv
cp
f
grestore
357.596 471.403 mo
378.727 471.403 li
414.038 483.176 li
392.907 483.176 li
357.596 471.403 li
cp
f
392.907 483.176 mo
414.038 483.176 li
411.665 494.11 407.929 503.236 402.831 510.563 cv
397.725 517.889 391.395 523.414 383.842 527.149 cv
376.28 530.875 366.655 532.738 354.975 532.738 cv
333.844 532.738 li
345.524 532.738 355.149 530.875 362.71 527.149 cv
370.264 523.414 376.593 517.889 381.7 510.563 cv
386.797 503.236 390.533 494.11 392.907 483.176 cv
cp
f
gsave
392.907 483.176 mo
414.038 483.176 li
411.664 494.11 407.929 503.236 402.831 510.563 cv
397.725 517.889 391.394 523.414 383.842 527.149 cv
376.28 530.875 366.655 532.738 354.975 532.738 cv
333.844 532.738 li
345.524 532.738 355.149 530.875 362.71 527.149 cv
370.264 523.414 376.593 517.889 381.7 510.563 cv
386.797 503.236 390.533 494.11 392.907 483.176 cv
clp
392.907 483.176 mo
414.038 483.176 li
413.747 484.516 413.436 485.829 413.104 487.115 cv
391.973 487.115 li
392.305 485.829 392.616 484.516 392.907 483.176 cv
cp
f
391.973 487.115 mo
413.104 487.115 li
412.636 488.929 412.127 490.688 411.578 492.394 cv
390.447 492.394 li
390.996 490.688 391.505 488.929 391.973 487.115 cv
cp
f
390.447 492.394 mo
411.578 492.394 li
411.07 493.969 410.528 495.498 409.951 496.981 cv
388.82 496.981 li
389.397 495.498 389.939 493.969 390.447 492.394 cv
cp
f
388.82 496.981 mo
409.951 496.981 li
409.403 498.392 408.823 499.759 408.212 501.085 cv
387.082 501.085 li
387.692 499.759 388.272 498.392 388.82 496.981 cv
cp
f
387.082 501.085 mo
408.212 501.085 li
407.616 502.38 406.99 503.635 406.334 504.851 cv
385.203 504.851 li
385.859 503.635 386.485 502.38 387.082 501.085 cv
cp
f
385.203 504.851 mo
406.334 504.851 li
405.674 506.073 404.984 507.256 404.264 508.398 cv
383.133 508.398 li
383.853 507.256 384.543 506.073 385.203 504.851 cv
cp
f
383.133 508.398 mo
404.264 508.398 li
403.798 509.137 403.321 509.858 402.831 510.563 cv
402.519 511.011 402.202 511.451 401.88 511.886 cv
380.749 511.886 li
381.071 511.451 381.387 511.011 381.7 510.563 cv
382.19 509.858 382.667 509.137 383.133 508.398 cv
cp
f
380.749 511.886 mo
401.88 511.886 li
400.932 513.168 399.944 514.392 398.916 515.557 cv
377.785 515.557 li
378.813 514.392 379.801 513.168 380.749 511.886 cv
cp
f
377.785 515.557 mo
398.916 515.557 li
397.66 516.979 396.345 518.315 394.971 519.563 cv
373.84 519.563 li
375.214 518.315 376.529 516.979 377.785 515.557 cv
cp
f
373.84 519.563 mo
394.971 519.563 li
391.615 522.611 387.906 525.14 383.842 527.149 cv
376.28 530.875 366.655 532.738 354.975 532.738 cv
333.844 532.738 li
345.524 532.738 355.149 530.875 362.71 527.149 cv
366.774 525.14 370.484 522.611 373.84 519.563 cv
cp
f
grestore
474.654 417.619 mo
495.785 417.619 li
487.653 417.619 481.135 420.787 476.209 427.142 cv
471.29 433.486 468.827 443.989 468.827 458.642 cv
468.827 473.167 471.274 483.607 476.168 489.952 cv
481.062 496.297 487.718 499.475 496.136 499.475 cv
475.005 499.475 li
466.587 499.475 459.931 496.297 455.037 489.952 cv
450.143 483.607 447.696 473.167 447.696 458.642 cv
447.696 443.989 450.159 433.486 455.078 427.142 cv
460.004 420.787 466.522 417.619 474.654 417.619 cv
cp
f
gsave
474.654 417.619 mo
495.785 417.619 li
487.653 417.619 481.135 420.787 476.209 427.142 cv
471.29 433.486 468.827 443.989 468.827 458.641 cv
468.827 473.167 471.274 483.607 476.168 489.952 cv
481.062 496.297 487.718 499.475 496.136 499.475 cv
475.005 499.475 li
466.587 499.475 459.931 496.297 455.037 489.952 cv
450.143 483.607 447.696 473.167 447.696 458.641 cv
447.696 443.989 450.159 433.486 455.078 427.142 cv
460.004 420.787 466.522 417.619 474.654 417.619 cv
clp
474.654 417.619 mo
495.785 417.619 li
489.302 417.619 483.846 419.633 479.403 423.668 cv
458.272 423.668 li
462.715 419.633 468.171 417.619 474.654 417.619 cv
cp
f
458.272 423.668 mo
479.403 423.668 li
478.705 424.303 478.032 424.986 477.384 425.721 cv
456.253 425.721 li
456.901 424.986 457.574 424.303 458.272 423.668 cv
cp
f
456.253 425.721 mo
477.384 425.721 li
476.982 426.175 476.591 426.648 476.209 427.142 cv
476.109 427.27 476.011 427.399 475.914 427.531 cv
454.783 427.531 li
454.88 427.399 454.979 427.27 455.078 427.142 cv
455.46 426.648 455.852 426.175 456.253 425.721 cv
cp
f
454.783 427.531 mo
475.914 427.531 li
475.575 427.988 475.249 428.467 474.934 428.966 cv
453.803 428.966 li
454.118 428.467 454.444 427.988 454.783 427.531 cv
cp
f
453.803 428.966 mo
474.934 428.966 li
474.627 429.452 474.332 429.958 474.048 430.484 cv
452.917 430.484 li
453.201 429.958 453.497 429.452 453.803 428.966 cv
cp
f
452.917 430.484 mo
474.048 430.484 li
473.761 431.017 473.485 431.569 473.222 432.143 cv
452.09 432.143 li
452.354 431.569 452.63 431.017 452.917 430.484 cv
cp
f
452.09 432.143 mo
473.222 432.143 li
472.947 432.739 472.686 433.356 472.437 433.996 cv
451.306 433.996 li
451.555 433.356 451.816 432.739 452.09 432.143 cv
cp
f
451.306 433.996 mo
472.437 433.996 li
472.167 434.688 471.914 435.405 471.675 436.147 cv
450.544 436.147 li
450.783 435.405 451.037 434.688 451.306 433.996 cv
cp
f
450.544 436.147 mo
471.675 436.147 li
471.412 436.965 471.167 437.813 470.94 438.691 cv
449.81 438.691 li
450.036 437.813 450.281 436.965 450.544 436.147 cv
cp
f
449.81 438.691 mo
470.94 438.691 li
470.682 439.693 470.447 440.736 470.236 441.819 cv
449.105 441.819 li
449.316 440.736 449.551 439.693 449.81 438.691 cv
cp
f
449.105 441.819 mo
470.236 441.819 li
469.985 443.104 469.768 444.446 469.584 445.845 cv
448.453 445.845 li
448.637 444.446 448.854 443.104 449.105 441.819 cv
cp
f
448.453 445.845 mo
469.584 445.845 li
469.355 447.589 469.178 449.421 469.053 451.341 cv
447.922 451.341 li
448.047 449.421 448.224 447.589 448.453 445.845 cv
cp
f
447.922 451.341 mo
469.053 451.341 li
468.902 453.647 468.827 456.081 468.827 458.642 cv
468.827 458.929 468.828 459.215 468.83 459.498 cv
447.699 459.498 li
447.697 459.215 447.696 458.929 447.696 458.642 cv
447.696 456.081 447.771 453.647 447.922 451.341 cv
cp
f
447.699 459.498 mo
468.83 459.498 li
468.851 462.588 468.985 465.487 469.232 468.198 cv
448.101 468.198 li
447.854 465.487 447.72 462.588 447.699 459.498 cv
cp
f
448.101 468.198 mo
469.232 468.198 li
469.486 470.985 469.859 473.572 470.353 475.959 cv
449.222 475.959 li
448.729 473.572 448.355 470.985 448.101 468.198 cv
cp
f
449.222 475.959 mo
470.353 475.959 li
471.44 481.225 473.11 485.518 475.361 488.837 cv
454.23 488.837 li
451.979 485.518 450.31 481.225 449.222 475.959 cv
cp
f
454.23 488.837 mo
475.361 488.837 li
475.623 489.222 475.891 489.594 476.168 489.952 cv
476.515 490.401 476.87 490.835 477.234 491.253 cv
456.104 491.253 li
455.739 490.835 455.384 490.401 455.037 489.952 cv
454.76 489.594 454.492 489.222 454.23 488.837 cv
cp
f
456.104 491.253 mo
477.234 491.253 li
477.767 491.863 478.318 492.439 478.888 492.981 cv
457.757 492.981 li
457.187 492.439 456.636 491.863 456.104 491.253 cv
cp
f
457.757 492.981 mo
478.888 492.981 li
479.363 493.434 479.852 493.862 480.354 494.268 cv
459.223 494.268 li
458.721 493.862 458.232 493.434 457.757 492.981 cv
cp
f
459.223 494.268 mo
480.354 494.268 li
480.803 494.63 481.262 494.974 481.731 495.298 cv
460.6 495.298 li
460.131 494.974 459.672 494.63 459.223 494.268 cv
cp
f
460.6 495.298 mo
481.731 495.298 li
482.172 495.603 482.622 495.891 483.082 496.162 cv
461.951 496.162 li
461.491 495.891 461.041 495.603 460.6 495.298 cv
cp
f
461.951 496.162 mo
483.082 496.162 li
483.527 496.425 483.98 496.672 484.443 496.903 cv
463.312 496.903 li
462.85 496.672 462.396 496.425 461.951 496.162 cv
cp
f
463.312 496.903 mo
484.443 496.903 li
484.903 497.134 485.372 497.349 485.85 497.549 cv
464.719 497.549 li
464.241 497.349 463.772 497.134 463.312 496.903 cv
cp
f
464.719 497.549 mo
485.85 497.549 li
486.339 497.753 486.837 497.941 487.345 498.113 cv
466.214 498.113 li
465.707 497.941 465.208 497.753 464.719 497.549 cv
cp
f
466.214 498.113 mo
487.345 498.113 li
487.874 498.292 488.413 498.454 488.962 498.598 cv
467.831 498.598 li
467.282 498.454 466.743 498.292 466.214 498.113 cv
cp
f
467.831 498.598 mo
488.962 498.598 li
489.557 498.754 490.164 498.889 490.782 499.003 cv
469.651 499.003 li
469.033 498.889 468.426 498.754 467.831 498.598 cv
cp
f
469.651 499.003 mo
490.782 499.003 li
491.47 499.131 492.171 499.231 492.888 499.308 cv
471.757 499.308 li
471.041 499.231 470.339 499.131 469.651 499.003 cv
cp
f
471.757 499.308 mo
492.888 499.308 li
493.725 499.396 494.582 499.449 495.458 499.468 cv
474.327 499.468 li
473.451 499.449 472.594 499.396 471.757 499.308 cv
cp
f
474.327 499.468 mo
495.458 499.468 li
495.683 499.472 495.909 499.475 496.136 499.475 cv
475.005 499.475 li
474.778 499.475 474.552 499.472 474.327 499.468 cv
cp
f
grestore
474.744 383.95 mo
495.875 383.95 li
517.571 383.95 534.293 390.386 546.039 403.237 cv
524.908 403.237 li
513.162 390.386 496.441 383.95 474.744 383.95 cv
cp
f
gsave
474.744 383.95 mo
495.874 383.95 li
517.571 383.95 534.293 390.386 546.039 403.237 cv
524.908 403.237 li
513.162 390.386 496.441 383.95 474.744 383.95 cv
clp
474.744 383.95 mo
495.875 383.95 li
496.623 383.95 497.364 383.958 498.1 383.974 cv
476.969 383.974 li
476.233 383.958 475.492 383.95 474.744 383.95 cv
cp
f
476.969 383.974 mo
498.1 383.974 li
500.886 384.031 503.586 384.198 506.202 384.476 cv
485.071 384.476 li
482.456 384.198 479.755 384.031 476.969 383.974 cv
cp
f
485.071 384.476 mo
506.202 384.476 li
508.37 384.705 510.479 385.009 512.531 385.389 cv
491.4 385.389 li
489.349 385.009 487.239 384.705 485.071 384.476 cv
cp
f
491.4 385.389 mo
512.531 385.389 li
514.323 385.721 516.07 386.109 517.774 386.556 cv
496.643 386.556 li
494.94 386.109 493.192 385.721 491.4 385.389 cv
cp
f
496.643 386.556 mo
517.774 386.556 li
519.318 386.96 520.827 387.412 522.299 387.911 cv
501.168 387.911 li
499.696 387.412 498.188 386.96 496.643 386.556 cv
cp
f
501.168 387.911 mo
522.299 387.911 li
523.665 388.374 525.001 388.878 526.305 389.423 cv
505.174 389.423 li
503.87 388.878 502.534 388.374 501.168 387.911 cv
cp
f
505.174 389.423 mo
526.305 389.423 li
527.557 389.945 528.78 390.506 529.975 391.104 cv
508.844 391.104 li
507.649 390.506 506.426 389.945 505.174 389.423 cv
cp
f
508.844 391.104 mo
529.975 391.104 li
531.147 391.691 532.292 392.314 533.408 392.974 cv
512.277 392.974 li
511.161 392.314 510.017 391.691 508.844 391.104 cv
cp
f
512.277 392.974 mo
533.408 392.974 li
534.535 393.64 535.635 394.342 536.705 395.081 cv
515.574 395.081 li
514.504 394.342 513.404 393.64 512.277 392.974 cv
cp
f
515.574 395.081 mo
536.705 395.081 li
537.821 395.853 538.906 396.663 539.961 397.515 cv
518.83 397.515 li
517.775 396.663 516.69 395.853 515.574 395.081 cv
cp
f
518.83 397.515 mo
539.961 397.515 li
541.111 398.443 542.225 399.42 543.301 400.443 cv
522.17 400.443 li
521.094 399.42 519.98 398.443 518.83 397.515 cv
cp
f
522.17 400.443 mo
543.301 400.443 li
544.242 401.339 545.154 402.27 546.039 403.237 cv
524.908 403.237 li
524.023 402.27 523.111 401.339 522.17 400.443 cv
cp
f
grestore
524.908 403.237 mo
546.039 403.237 li
557.776 416.099 563.649 434.107 563.649 457.265 cv
563.649 474.085 561.088 487.873 555.958 498.638 cv
550.827 509.401 543.412 517.771 533.723 523.766 cv
524.023 529.75 511.943 532.738 497.473 532.738 cv
476.342 532.738 li
490.813 532.738 502.893 529.75 512.591 523.766 cv
522.281 517.771 529.696 509.401 534.826 498.638 cv
539.957 487.873 542.519 474.085 542.519 457.265 cv
542.519 434.107 536.646 416.099 524.908 403.237 cv
cp
f
gsave
524.908 403.237 mo
546.039 403.237 li
557.776 416.099 563.649 434.107 563.649 457.265 cv
563.649 474.085 561.088 487.873 555.958 498.638 cv
550.827 509.401 543.412 517.772 533.723 523.766 cv
524.023 529.75 511.943 532.738 497.473 532.738 cv
476.342 532.738 li
490.813 532.738 502.893 529.75 512.591 523.766 cv
522.281 517.772 529.696 509.401 534.826 498.638 cv
539.957 487.873 542.519 474.085 542.519 457.265 cv
542.519 434.107 536.646 416.099 524.908 403.237 cv
clp
524.908 403.237 mo
546.039 403.237 li
546.331 403.558 546.619 403.881 546.904 404.207 cv
525.773 404.207 li
525.488 403.881 525.2 403.558 524.908 403.237 cv
cp
f
525.773 404.207 mo
546.904 404.207 li
548.463 405.993 549.912 407.875 551.254 409.852 cv
530.123 409.852 li
528.781 407.875 527.332 405.993 525.773 404.207 cv
cp
f
530.123 409.852 mo
551.254 409.852 li
556.118 417.023 559.552 425.451 561.553 435.135 cv
540.422 435.135 li
538.421 425.451 534.987 417.023 530.123 409.852 cv
cp
f
540.422 435.135 mo
561.553 435.135 li
562.275 438.631 562.811 442.291 563.16 446.115 cv
542.029 446.115 li
541.68 442.291 541.145 438.631 540.422 435.135 cv
cp
f
542.029 446.115 mo
563.16 446.115 li
563.46 449.402 563.622 452.812 563.646 456.341 cv
542.516 456.341 li
542.491 452.812 542.329 449.402 542.029 446.115 cv
cp
f
542.516 456.341 mo
563.646 456.341 li
563.648 456.647 563.649 456.956 563.649 457.265 cv
563.649 460.616 563.548 463.848 563.345 466.959 cv
542.213 466.959 li
542.417 463.848 542.519 460.616 542.519 457.265 cv
542.519 456.956 542.518 456.647 542.516 456.341 cv
cp
f
542.213 466.959 mo
563.345 466.959 li
563.166 469.681 562.91 472.31 562.577 474.847 cv
541.445 474.847 li
541.779 472.31 542.035 469.681 542.213 466.959 cv
cp
f
541.445 474.847 mo
562.577 474.847 li
562.296 476.979 561.96 479.048 561.569 481.051 cv
540.438 481.051 li
540.829 479.048 541.165 476.979 541.445 474.847 cv
cp
f
540.438 481.051 mo
561.569 481.051 li
561.227 482.811 560.841 484.519 560.412 486.178 cv
539.281 486.178 li
539.71 484.519 540.096 482.811 540.438 481.051 cv
cp
f
539.281 486.178 mo
560.412 486.178 li
560.025 487.677 559.604 489.136 559.147 490.554 cv
538.017 490.554 li
538.473 489.136 538.895 487.677 539.281 486.178 cv
cp
f
538.017 490.554 mo
559.147 490.554 li
558.721 491.878 558.264 493.168 557.776 494.421 cv
536.646 494.421 li
537.133 493.168 537.59 491.878 538.017 490.554 cv
cp
f
536.646 494.421 mo
557.776 494.421 li
557.309 495.623 556.813 496.791 556.29 497.928 cv
535.159 497.928 li
535.683 496.791 536.178 495.623 536.646 494.421 cv
cp
f
535.159 497.928 mo
556.29 497.928 li
556.181 498.165 556.069 498.402 555.958 498.638 cv
555.471 499.659 554.963 500.659 554.436 501.637 cv
533.305 501.637 li
533.832 500.659 534.34 499.659 534.826 498.638 cv
534.938 498.402 535.05 498.165 535.159 497.928 cv
cp
f
533.305 501.637 mo
554.436 501.637 li
553.749 502.909 553.027 504.146 552.271 505.345 cv
531.141 505.345 li
531.896 504.146 532.618 502.909 533.305 501.637 cv
cp
f
531.141 505.345 mo
552.271 505.345 li
551.469 506.618 550.626 507.851 549.745 509.042 cv
528.614 509.042 li
529.495 507.851 530.338 506.618 531.141 505.345 cv
cp
f
528.614 509.042 mo
549.745 509.042 li
548.75 510.388 547.704 511.682 546.609 512.923 cv
525.479 512.923 li
526.573 511.682 527.619 510.388 528.614 509.042 cv
cp
f
525.479 512.923 mo
546.609 512.923 li
545.224 514.493 543.759 515.979 542.213 517.383 cv
521.082 517.383 li
522.628 515.979 524.093 514.493 525.479 512.923 cv
cp
f
521.082 517.383 mo
542.213 517.383 li
539.609 519.747 536.779 521.874 533.723 523.766 cv
524.023 529.75 511.943 532.738 497.473 532.738 cv
476.342 532.738 li
490.813 532.738 502.893 529.75 512.591 523.766 cv
515.648 521.874 518.479 519.747 521.082 517.383 cv
cp
f
grestore
596.777 420.563 mo
617.908 420.563 li
617.908 530.29 li
596.777 530.29 li
596.777 420.563 li
cp
f
563.775 386.407 mo
584.906 386.407 li
637.9 386.407 li
616.77 386.407 li
563.775 386.407 li
cp
f
616.77 386.407 mo
637.9 386.407 li
658.333 473.95 li
637.202 473.95 li
616.77 386.407 li
cp
f
677.456 420.563 mo
698.587 420.563 li
673.162 530.29 li
652.031 530.29 li
677.456 420.563 li
cp
f
710.458 386.407 mo
731.589 386.407 li
731.589 530.29 li
710.458 530.29 li
710.458 386.407 li
cp
f
657.496 386.407 mo
678.627 386.407 li
731.589 386.407 li
710.458 386.407 li
657.496 386.407 li
cp
f
776.455 469.343 mo
797.586 469.343 li
797.586 497.701 li
776.455 497.701 li
776.455 469.343 li
cp
f
776.455 417.124 mo
797.586 417.124 li
797.586 439.993 li
776.455 439.993 li
776.455 417.124 li
cp
f
776.455 439.993 mo
797.586 439.993 li
860.295 439.993 li
839.164 439.993 li
776.455 439.993 li
cp
f
839.164 439.993 mo
860.295 439.993 li
860.295 469.343 li
839.164 469.343 li
839.164 439.993 li
cp
f
736.07 386.407 mo
757.201 386.407 li
865.188 386.407 li
844.058 386.407 li
736.07 386.407 li
cp
f
844.058 386.407 mo
865.188 386.407 li
865.188 417.124 li
844.058 417.124 li
844.058 386.407 li
cp
f
846.016 497.701 mo
867.146 497.701 li
867.146 530.29 li
846.016 530.29 li
846.016 497.701 li
cp
f
776.455 497.701 mo
797.586 497.701 li
867.146 497.701 li
846.016 497.701 li
776.455 497.701 li
cp
f
255.707 225.916 mo
276.838 225.916 li
315.109 225.916 li
293.979 225.916 li
255.707 225.916 li
cp
f
293.979 225.916 mo
315.109 225.916 li
328.886 306.465 li
307.755 306.465 li
293.979 225.916 li
cp
f
347.014 279.205 mo
368.145 279.205 li
345.363 369.799 li
324.232 369.799 li
347.014 279.205 li
cp
f
327.927 225.916 mo
349.058 225.916 li
387.191 225.916 li
366.06 225.916 li
327.927 225.916 li
cp
f
366.06 225.916 mo
387.191 225.916 li
407.403 306.357 li
386.272 306.357 li
366.06 225.916 li
cp
f
438.141 225.916 mo
459.272 225.916 li
430.528 369.799 li
409.397 369.799 li
438.141 225.916 li
cp
f
400.074 225.916 mo
421.205 225.916 li
459.272 225.916 li
438.141 225.916 li
400.074 225.916 li
cp
f
491.601 308.851 mo
512.731 308.851 li
512.731 337.209 li
491.601 337.209 li
491.601 308.851 li
cp
f
491.601 256.632 mo
512.731 256.632 li
512.731 279.501 li
491.601 279.501 li
491.601 256.632 li
cp
f
491.601 279.501 mo
512.731 279.501 li
575.44 279.501 li
554.31 279.501 li
491.601 279.501 li
cp
f
554.31 279.501 mo
575.44 279.501 li
575.44 308.851 li
554.31 308.851 li
554.31 279.501 li
cp
f
451.217 225.916 mo
472.348 225.916 li
580.335 225.916 li
559.204 225.916 li
451.217 225.916 li
cp
f
559.204 225.916 mo
580.335 225.916 li
580.335 256.632 li
559.204 256.632 li
559.204 225.916 li
cp
f
561.162 337.209 mo
582.293 337.209 li
582.293 369.799 li
561.162 369.799 li
561.162 337.209 li
cp
f
491.601 337.209 mo
512.731 337.209 li
582.293 337.209 li
561.162 337.209 li
491.601 337.209 li
cp
f
623.161 225.916 mo
644.292 225.916 li
644.292 334.365 li
623.161 334.365 li
623.161 225.916 li
cp
f
582.867 225.916 mo
603.998 225.916 li
644.292 225.916 li
623.161 225.916 li
582.867 225.916 li
cp
f
686.05 334.365 mo
707.181 334.365 li
707.181 369.799 li
686.05 369.799 li
686.05 334.365 li
cp
f
623.161 334.365 mo
644.292 334.365 li
707.181 334.365 li
686.05 334.365 li
623.161 334.365 li
cp
f
438.141 225.916 mo
409.397 369.799 li
369.885 369.799 li
347.014 279.205 li
324.232 369.799 li
284.721 369.799 li
255.707 225.916 li
293.979 225.916 li
307.755 306.465 li
327.927 225.916 li
366.06 225.916 li
386.272 306.357 li
400.074 225.916 li
438.141 225.916 li
cp
.61886 .222049 0 0 cmyk
f
559.204 225.916 mo
559.204 256.632 li
491.601 256.632 li
491.601 279.501 li
554.31 279.501 li
554.31 308.851 li
491.601 308.851 li
491.601 337.209 li
561.162 337.209 li
561.162 369.799 li
451.217 369.799 li
451.217 225.916 li
559.204 225.916 li
cp
f
623.161 225.916 mo
623.161 334.365 li
686.05 334.365 li
686.05 369.799 li
582.867 369.799 li
582.867 225.916 li
623.161 225.916 li
cp
f
331.976 383.95 mo
348.404 383.95 361.316 387.622 370.712 394.948 cv
380.109 402.274 387.091 413.533 391.659 428.707 cv
356.079 437.446 li
354.831 433.063 353.534 429.851 352.164 427.825 cv
349.913 424.424 347.156 421.805 343.893 419.978 cv
340.63 418.142 336.984 417.224 332.955 417.224 cv
323.819 417.224 316.821 421.273 311.959 429.383 cv
308.281 435.395 306.445 444.836 306.445 457.705 cv
306.445 473.653 308.64 484.589 313.028 490.501 cv
317.416 496.414 323.583 499.375 331.527 499.375 cv
339.235 499.375 345.067 496.981 349.007 492.212 cv
352.955 487.433 355.81 480.493 357.596 471.403 cv
392.907 483.176 li
390.533 494.11 386.797 503.236 381.7 510.563 cv
376.593 517.889 370.264 523.414 362.71 527.149 cv
355.149 530.875 345.524 532.738 333.844 532.738 cv
319.667 532.738 308.093 530.471 299.104 525.926 cv
290.124 521.381 282.367 513.389 275.849 501.949 cv
269.324 490.501 266.061 475.858 266.061 458.003 cv
266.061 434.206 271.803 415.909 283.272 403.13 cv
294.749 390.35 310.98 383.95 331.976 383.95 cv
cp
f
495.111 490.15 mo
499.85 483.932 502.224 472.771 502.224 456.68 cv
502.224 443.135 499.752 433.243 494.801 426.988 cv
489.842 420.742 483.129 417.619 474.654 417.619 cv
466.522 417.619 460.004 420.787 455.078 427.142 cv
450.159 433.486 447.696 443.989 447.696 458.642 cv
447.696 473.167 450.143 483.607 455.037 489.952 cv
459.931 496.297 466.587 499.475 475.005 499.475 cv
483.667 499.475 490.364 496.36 495.111 490.15 cv
cp
524.908 403.237 mo
536.646 416.099 542.519 434.107 542.519 457.265 cv
542.519 474.085 539.957 487.873 534.826 498.638 cv
529.696 509.401 522.281 517.771 512.591 523.766 cv
502.893 529.75 490.813 532.738 476.342 532.738 cv
461.636 532.738 449.466 530.155 439.825 524.989 cv
430.191 519.823 422.377 511.643 416.39 500.455 cv
410.395 489.26 407.401 475.265 407.401 458.443 cv
407.401 434.953 413.332 416.665 425.191 403.579 cv
437.051 390.493 453.569 383.95 474.744 383.95 cv
496.441 383.95 513.162 390.386 524.908 403.237 cv
cp
f
710.458 386.407 mo
710.458 530.29 li
677.456 530.29 li
677.456 420.563 li
652.031 530.29 li
622.161 530.29 li
596.777 420.563 li
596.777 530.29 li
563.775 530.29 li
563.775 386.407 li
616.77 386.407 li
637.202 473.95 li
657.496 386.407 li
710.458 386.407 li
cp
f
844.058 386.407 mo
844.058 417.124 li
776.455 417.124 li
776.455 439.993 li
839.164 439.993 li
839.164 469.343 li
776.455 469.343 li
776.455 497.701 li
846.016 497.701 li
846.016 530.29 li
736.07 530.29 li
736.07 386.407 li
844.058 386.407 li
cp
f
883.654 329.051 mo
881.011 326.716 870.299 329.659 870.299 329.659 cv
869.574 335.24 li
871.806 338.035 876.748 332.459 880.373 335.495 cv
883.999 338.53 888.134 337.759 888.543 336.711 cv
888.952 335.663 886.299 331.386 883.654 329.051 cv
cp
0 .479194 .451911 0 cmyk
f
872.896 329.54 mo
862.769 328.109 860.899 328.442 850.702 327.767 cv
840.505 327.091 829.998 324.858 821.827 318.389 cv
815.155 313.106 812.198 301.761 808.85 294.1 cv
804.894 285.053 801.73 275.457 793.941 269.144 cv
792.419 267.91 790.255 267.479 788.289 266.842 cv
787.182 266.482 783.865 264.679 782.739 265.043 cv
782.525 265.112 774.302 267.827 768.523 278.277 cv
762.669 288.866 758.486 332.985 758.486 332.985 cv
758.486 332.985 769.897 346.173 782.743 337.397 cv
782.743 337.397 783.58 312.69 789.435 310.925 cv
791.438 310.322 793.439 309.821 795.208 308.894 cv
803.669 316.903 812.937 336.513 823.846 339.398 cv
842.603 344.359 853.645 337.22 872.919 335.575 cv
872.911 333.563 872.903 331.552 872.896 329.54 cv
cp
0 .311009 .78143 0 cmyk
f
795.327 307.97 mo
795.697 308.32 li
798.756 311.216 801.866 315.529 805.157 320.095 cv
810.822 327.952 817.241 336.855 824.024 338.65 cv
836.134 341.853 844.915 339.959 855.079 337.767 cv
860.34 336.632 865.774 335.46 872.185 334.865 cv
872.166 330.217 li
865.638 329.31 862.656 329.168 858.213 328.956 cv
856.162 328.858 853.805 328.746 850.656 328.537 cv
838.003 327.699 828.429 324.582 821.389 319.006 cv
816.088 314.809 813.103 307.016 810.47 300.14 cv
809.687 298.097 808.948 296.168 808.185 294.423 cv
807.607 293.102 807.046 291.769 806.486 290.436 cv
803.299 282.862 800.003 275.029 793.495 269.756 cv
792.408 268.874 790.858 268.415 789.359 267.971 cv
788.927 267.844 788.496 267.716 788.073 267.579 cv
787.749 267.473 787.24 267.25 786.652 266.991 cv
785.714 266.575 783.508 265.595 782.953 265.781 cv
782.622 265.888 774.763 268.526 769.155 278.666 cv
763.721 288.495 759.662 328.522 759.249 332.71 cv
760.888 334.477 770.798 344.32 782.027 336.962 cv
782.185 332.988 783.295 311.973 789.233 310.183 cv
790.278 309.875 li
791.927 309.392 793.482 308.937 794.883 308.203 cv
795.327 307.97 li
cp
836.758 341.907 mo
832.728 341.907 828.458 341.413 823.668 340.146 cv
816.389 338.221 810.087 329.481 803.993 321.029 cv
800.874 316.704 797.923 312.61 795.077 309.813 cv
793.674 310.482 792.149 310.929 790.67 311.361 cv
789.637 311.667 li
785.743 312.84 783.791 328.088 783.475 337.425 cv
783.461 337.826 li
783.141 338.044 li
769.931 347.07 758.064 333.641 757.947 333.504 cv
757.728 333.25 li
757.76 332.908 li
757.932 331.1 762.024 288.5 767.893 277.888 cv
773.784 267.233 782.17 264.42 782.524 264.305 cv
783.506 263.985 785.16 264.656 787.22 265.567 cv
787.751 265.803 788.209 266.008 788.505 266.104 cv
788.915 266.237 789.334 266.362 789.754 266.486 cv
791.387 266.969 793.075 267.469 794.387 268.532 cv
801.188 274.044 804.562 282.06 807.822 289.811 cv
808.381 291.136 808.939 292.462 809.514 293.777 cv
810.291 295.555 811.037 297.501 811.825 299.562 cv
814.389 306.25 817.291 313.833 822.266 317.771 cv
829.072 323.161 838.389 326.178 850.748 326.997 cv
853.887 327.205 856.235 327.317 858.278 327.414 cv
862.901 327.635 865.956 327.781 872.992 328.775 cv
873.623 328.864 li
873.653 336.286 li
872.978 336.344 li
866.36 336.908 860.774 338.113 855.372 339.279 cv
849.017 340.65 843.191 341.907 836.758 341.907 cv
cp
f
860.439 369.182 mo
860.441 369.18 li
860.439 369.182 li
cp
795.448 342.529 mo
792.928 343.159 790.384 343.832 787.841 344.563 cv
786.024 342.227 784.722 339.935 784.117 337.744 cv
784.117 337.744 772.205 344.883 758.528 332.985 cv
758.528 332.985 729.403 375.067 758.199 386.462 cv
758.418 386.551 li
758.623 386.63 758.834 386.707 759.045 386.783 cv
759.381 386.906 759.72 387.023 760.061 387.135 cv
760.306 387.213 li
760.771 387.359 761.239 387.497 761.711 387.623 cv
761.825 387.655 li
762.378 387.801 762.933 387.938 763.488 388.059 cv
800.883 396.281 838.943 379.575 838.943 379.575 cv
838.928 379.567 li
842.104 378.571 845.213 377.394 848.088 375.843 cv
858.495 370.229 860.135 369.346 860.393 369.206 cv
859.525 369.679 846.571 377.024 841.029 397.259 cv
835.294 418.199 826.47 455.32 826.47 455.32 cv
834.668 455.32 li
834.668 455.32 890.442 375.843 886.913 361.565 cv
883.383 347.288 829.725 333.962 795.448 342.529 cv
cp
.886778 .710994 .0776074 .202701 cmyk
f
844.413 462.208 mo
840.59 461.481 836.472 460.847 836.178 459.577 cv
835.884 458.309 834.668 455.32 834.668 455.32 cv
826.47 455.32 li
826.47 455.32 824.707 462.433 825.001 469.096 cv
847.061 469.096 li
852.354 469.096 li
852.354 469.096 848.237 462.935 844.413 462.208 cv
cp
.846067 .413092 .314244 .520836 cmyk
f
804.771 242.507 mo
795.939 242.507 793.615 246.691 793.615 246.691 cv
791.757 249.945 789.896 255.988 790.361 257.847 cv
790.498 258.393 790.835 259.179 791.406 260.04 cv
792.784 262.114 795.525 264.628 800.123 265.285 cv
806.631 266.214 811.744 255.058 812.209 252.269 cv
812.674 249.48 813.604 242.507 804.771 242.507 cv
cp
0 .479194 .451911 0 cmyk
f
786.366 265.842 mo
786.366 265.842 793.733 270.531 795.073 268.521 cv
796.413 266.512 801.102 259.814 801.102 259.814 cv
794.403 252.446 li
786.366 265.842 li
cp
f
811.436 238.524 mo
805.175 235.678 805.175 229.987 798.346 232.264 cv
791.517 234.54 780.703 240.8 771.028 236.247 cv
761.353 231.694 751.108 230.556 744.849 234.54 cv
738.588 238.524 731.759 244.215 722.653 242.507 cv
713.547 240.8 709.563 238.524 707.287 245.354 cv
705.011 252.183 705.011 269.256 728.913 270.963 cv
752.816 272.671 761.353 261.857 768.752 257.874 cv
776.15 253.89 783.365 262.439 791.406 260.04 cv
791.406 260.04 792.085 251.613 794.361 249.906 cv
796.639 248.199 796.069 252.183 798.915 252.752 cv
801.761 253.321 806.313 249.337 808.021 248.199 cv
809.729 247.061 810.866 248.199 811.436 251.044 cv
812.005 253.89 809.917 257.821 809.917 257.821 cv
809.917 257.821 815.988 252.752 815.419 246.491 cv
814.85 240.231 817.695 241.369 811.436 238.524 cv
cp
.886778 .710994 .0776074 .202701 cmyk
f
920.217 289.212 mo
911.243 305.083 902.269 320.953 893.295 336.823 cv
892.928 337.472 892.417 338.178 892.068 338.892 cv
892.187 338.905 li
892.572 338.644 892.951 338.985 892.187 338.905 cv
892.099 338.964 892.012 339.051 891.938 339.185 cv
891.854 339.371 li
891.938 339.185 li
891.978 339.087 892.021 338.989 892.068 338.892 cv
891.992 338.881 891.909 338.867 891.814 338.849 cv
888.975 338.292 885.506 338.849 882.629 338.849 cv
871.52 338.849 860.409 338.849 849.3 338.849 cv
841.33 338.849 833.359 338.849 825.39 338.849 cv
823.775 338.849 823.772 341.496 825.39 341.496 cv
843.614 341.496 861.838 341.496 880.062 341.496 cv
883.719 341.496 887.375 341.496 891.032 341.496 cv
892.617 341.496 893.207 341.601 894.24 340.319 cv
896.31 337.75 897.754 334.104 899.386 331.22 cv
902.312 326.044 905.238 320.869 908.165 315.694 cv
912.904 307.313 917.645 298.93 922.384 290.548 cv
923.213 289.082 921.045 287.749 920.217 289.212 cv
cp
.863218 .500298 .41416 .709956 cmyk
f
892.187 338.905 mo
892.068 338.892 li
892.021 338.989 891.978 339.087 891.938 339.185 cv
892.012 339.051 892.099 338.964 892.187 338.905 cv
cp
f
532.764 158.383 mo
530.738 157.656 525.987 151.431 524.057 151.579 cv
521.794 151.753 525.002 155.803 523.248 155.972 cv
519.742 156.308 511.096 152.872 511.047 155.186 cv
510.999 157.499 517.074 162.416 520.133 162.864 cv
523.191 163.312 529.615 163.074 531.993 163.437 cv
534.371 163.799 534.529 159.018 532.764 158.383 cv
cp
0 .479194 .451911 0 cmyk
f
597.947 138.489 mo
597.706 138.646 597.468 138.81 597.231 138.984 cv
591.593 143.144 590.273 150.24 585.011 154.626 cv
581.998 157.138 578.591 158.859 574.83 159.962 cv
561.986 163.727 547.383 160.398 534.946 156.714 cv
530.167 155.299 526.821 163.354 529.643 165.029 cv
578.354 193.974 593.115 181.007 604.315 166.91 cv
609.072 160.924 614.909 152.922 613.734 144.777 cv
612.568 136.696 604.449 134.282 597.947 138.489 cv
cp
.260319 .123964 0 0 cmyk
f
533.834 157.05 mo
531.975 157.05 530.435 158.641 529.649 160.439 cv
528.957 162.022 528.82 163.959 529.897 164.6 cv
551.772 177.598 568.478 183.167 580.984 181.614 cv
592.254 180.217 598.734 173.131 603.924 166.599 cv
609.398 159.71 614.315 152.307 613.239 144.848 cv
612.757 141.501 610.994 138.978 608.278 137.743 cv
605.241 136.362 601.481 136.798 598.219 138.909 cv
597.986 139.06 597.756 139.219 597.528 139.387 cv
594.666 141.498 592.897 144.474 591.187 147.351 cv
589.577 150.059 587.912 152.859 585.331 155.011 cv
582.351 157.495 578.962 159.271 574.971 160.442 cv
562.039 164.231 547.409 160.927 534.805 157.194 cv
534.473 157.096 534.148 157.05 533.834 157.05 cv
cp
576.654 182.819 mo
565.634 182.819 550.718 178.134 529.387 165.459 cv
527.974 164.62 527.705 162.391 528.732 160.039 cv
529.828 157.533 532.223 155.388 535.088 156.235 cv
547.554 159.927 562.005 163.201 574.689 159.482 cv
578.547 158.352 581.818 156.637 584.69 154.242 cv
587.141 152.2 588.761 149.475 590.327 146.84 cv
592.089 143.877 593.91 140.813 596.935 138.582 cv
597.18 138.401 597.426 138.231 597.676 138.07 cv
597.676 138.069 li
601.224 135.772 605.344 135.31 608.692 136.833 cv
611.729 138.213 613.696 141.009 614.229 144.706 cv
615.359 152.54 610.32 160.157 604.707 167.221 cv
598.174 175.444 590.479 182.819 576.654 182.819 cv
cp
.705684 .446235 .101137 .0979934 cmyk
f
619.347 115.043 mo
619.709 116.492 618.397 122.69 618.793 127.596 cv
618.904 128.984 619.152 130.269 619.614 131.313 cv
619.82 131.781 620.069 132.2 620.368 132.559 cv
623.693 136.556 609.743 144.674 608.05 144.602 cv
606.355 144.528 603.874 139.201 604.458 137.084 cv
604.905 135.462 607.644 138.385 608.233 133.823 cv
608.354 132.889 608.385 131.641 608.288 129.976 cv
608.24 129.164 608.162 128.253 608.05 127.231 cv
606.574 113.875 619.347 115.043 619.347 115.043 cv
cp
0 .481147 .459907 0 cmyk
f
606.608 88.8188 mo
612.45 87.4282 623.639 94.2114 625.313 101.245 cv
626.987 108.278 622.942 118.022 618.955 122.157 cv
615.221 126.03 608.982 129.02 605.69 128.418 cv
602.397 127.817 595.167 116.851 599.916 91.9243 cv
601.035 86.0518 606.608 88.8188 606.608 88.8188 cv
cp
0 .479194 .451911 0 cmyk
f
624.848 86.6274 mo
631.761 90.876 637.37 98.8384 630.25 105.035 cv
628.257 106.771 628.896 109.949 627.446 112.278 cv
625.903 114.759 623.28 116.711 620.743 118.059 cv
624.866 115.869 624.901 109.162 619.804 108.219 cv
620.871 108.416 618.049 96.4473 618.004 95.209 cv
615.478 95.5342 611.698 96.9692 609.526 94.9897 cv
607.491 96.23 602.3 96.647 600.842 94.2231 cv
599.147 96.5361 591.915 97.7344 590.297 90.9395 cv
588.679 84.1445 594.646 84.8657 596.791 84.3545 cv
598.937 83.8438 603.137 81.9956 606.977 81.6304 cv
611.567 81.1943 619.052 83.0649 624.848 86.6274 cv
cp
.90985 .665553 0 0 cmyk
f
584.165 170.363 mo
584.165 188.861 584.707 217.711 586.144 226.114 cv
638.436 226.114 li
640.457 217.553 640.933 191.833 646.06 173.286 cv
651.539 153.466 640.037 143.718 636.615 141.221 cv
634.375 139.589 622.702 135.041 620.954 132.557 cv
618.616 136.356 605.19 146.354 605.769 136.064 cv
600.514 136.064 598.035 137.812 598.035 137.812 cv
593.804 140.88 584.165 149.782 584.165 170.363 cv
cp
.260319 .123964 0 0 cmyk
f
586.568 225.614 mo
638.036 225.614 li
638.741 222.377 639.272 216.858 639.884 210.508 cv
640.986 199.053 642.359 184.796 645.578 173.152 cv
650.722 154.546 640.817 144.906 636.32 141.625 cv
635.53 141.049 633.339 140.013 631.02 138.916 cv
627.096 137.059 622.699 134.979 621.004 133.362 cv
618.687 136.417 611.356 142.104 607.548 140.913 cv
605.996 140.426 605.225 138.966 605.251 136.57 cv
600.598 136.677 598.345 138.205 598.322 138.221 cv
593.226 141.917 584.665 151.015 584.665 170.363 cv
584.665 187.825 585.174 216.644 586.568 225.614 cv
cp
638.831 226.614 mo
585.722 226.614 li
585.65 226.198 li
584.194 217.676 583.665 188.138 583.665 170.363 cv
583.665 150.571 592.484 141.22 597.741 137.407 cv
597.854 137.328 600.417 135.564 605.769 135.564 cv
606.298 135.564 li
606.268 136.092 li
606.145 138.29 606.676 139.591 607.848 139.958 cv
611.27 141.033 618.893 134.952 620.528 132.294 cv
620.926 131.648 li
621.363 132.269 li
622.389 133.726 627.624 136.203 631.447 138.012 cv
633.913 139.178 636.043 140.186 636.909 140.817 cv
641.575 144.221 651.852 154.211 646.541 173.419 cv
643.346 184.979 641.979 199.188 640.879 210.604 cv
640.239 217.25 639.687 222.99 638.922 226.229 cv
638.831 226.614 li
cp
.705684 .446235 .101137 .0979934 cmyk
f
608.728 152.271 mo
610.833 208.496 li
604.37 217.733 li
600.655 209.439 li
605.145 152.152 li
608.062 148.062 li
608.728 152.271 li
cp
0 .311009 .78143 0 cmyk
f
611.318 140.922 mo
612.267 141.689 613.079 145.631 612.893 146.542 cv
612.705 147.455 609.713 152.089 608.728 152.271 cv
607.742 151.669 605.856 151.532 605.145 152.152 cv
604.561 151.385 603.362 147.312 603.673 145.777 cv
603.983 144.243 604.896 141.47 605.917 140.922 cv
606.939 140.375 611.318 140.922 611.318 140.922 cv
cp
f
619.614 131.313 mo
621.489 131.89 624.248 133.802 625.478 134.603 cv
627.062 135.634 614.676 147.01 613.653 148.98 cv
612.194 145.696 608.842 141.63 609.058 140.562 cv
610.114 140.259 618.346 135.41 619.614 131.313 cv
cp
0 0 0 0 cmyk
f
607.213 133.891 mo
607.86 134.934 608.51 139.976 608.835 140.572 cv
609.16 141.169 603.071 147.01 602.305 147.083 cv
601.538 147.156 600.448 137.675 600.689 136.705 cv
600.932 135.735 606.904 133.394 607.213 133.891 cv
cp
f
613.716 223.425 mo
612.847 223.274 603.03 228.569 602.04 229.41 cv
600.852 230.418 600.106 232.436 601.503 232.591 cv
610.283 233.565 610.368 231.488 618.157 228.72 cv
626.347 225.809 613.716 223.425 613.716 223.425 cv
cp
0 .479194 .451911 0 cmyk
f
626.987 166.087 mo
623.991 161.249 635.344 140.092 637.436 141.847 cv
670.392 169.502 660.697 218.966 613.504 231.671 cv
611.952 232.088 608.262 225.062 609.131 224.542 cv
611.372 223.203 651.542 205.746 626.987 166.087 cv
cp
.260319 .123964 0 0 cmyk
f
636.347 142.415 mo
632.739 145.537 624.711 161.976 627.182 165.967 cv
626.987 166.087 li
627.182 165.967 li
634.458 177.72 636.758 188.679 634.016 198.538 cv
632.02 205.714 626.228 216.019 609.966 224.36 cv
609.618 224.538 609.373 224.664 609.255 224.733 cv
609.029 225.019 609.833 227.238 611.211 229.33 cv
612.336 231.037 613.118 231.539 613.444 231.45 cv
635.56 225.497 651.284 210.536 655.509 191.428 cv
659.492 173.408 652.682 154.939 637.288 142.022 cv
637.142 141.974 li
636.958 141.974 636.68 142.126 636.347 142.415 cv
cp
609.288 226.722 mo
608.43 224.695 608.869 224.433 609.014 224.346 cv
609.144 224.269 609.397 224.138 609.757 223.954 cv
625.872 215.688 631.604 205.503 633.575 198.417 cv
636.282 188.684 634 177.848 626.794 166.208 cv
624.162 161.958 632.279 145.332 636.048 142.069 cv
636.704 141.502 637.22 141.368 637.582 141.672 cv
653.107 154.701 659.976 173.338 655.954 191.527 cv
651.692 210.804 635.846 225.893 613.563 231.892 cv
613.371 231.917 li
612.044 231.917 610.087 228.606 609.288 226.722 cv
cp
.705684 .446235 .101137 .0979934 cmyk
f
530.142 497.614 mo
530.142 497.614 473.998 499.656 471.691 508.842 cv
469.384 518.027 566.35 544.255 593.966 533.822 cv
621.582 523.389 628.989 516.924 628.989 516.924 cv
628.989 516.924 631.065 506.384 586.74 500.771 cv
542.415 495.159 530.142 497.614 530.142 497.614 cv
cp
.882872 .646418 0 0 cmyk
f
549.735 381.703 mo
545.036 381.848 541.095 385.627 539.478 389.94 cv
536.917 396.768 538.624 412.555 544.598 414.688 cv
550.571 416.821 557.398 416.694 559.959 411.211 cv
563.819 402.941 562.974 383.423 551.283 381.788 cv
550.76 381.715 550.243 381.688 549.735 381.703 cv
cp
0 .479194 .451911 0 cmyk
f
570.727 521.057 mo
570.727 521.057 601.944 510.852 604.346 503.008 cv
606.747 495.165 595.341 439.41 589.337 434.007 cv
583.523 428.774 552.243 424.105 550.272 423.815 cv
550.272 423.802 li
550.224 423.809 li
550.175 423.802 li
550.175 423.815 li
548.204 424.105 516.924 428.774 511.11 434.007 cv
505.106 439.41 493.7 495.165 496.102 503.008 cv
498.503 510.852 529.721 521.057 529.721 521.057 cv
532.723 513.553 li
510.661 495.852 li
510.661 495.852 519.929 465.226 523.023 472.43 cv
526.119 479.634 532.122 503.947 532.122 503.947 cv
550.175 503.947 li
550.272 503.947 li
568.325 503.947 li
568.325 503.947 574.328 479.634 577.424 472.43 cv
580.519 465.226 589.885 495.852 589.885 495.852 cv
569.243 513.937 li
570.727 521.057 li
cp
0 .628016 .859403 0 cmyk
f
519.505 521.057 mo
550.272 521.057 li
581.04 521.057 li
593.047 486.838 li
550.272 486.838 li
507.498 486.838 li
519.505 521.057 li
cp
0 0 0 0 cmyk
f
555.044 425.51 mo
555.044 411.06 li
545.501 411.06 li
545.501 425.51 li
545.501 425.51 550.37 430.146 555.044 425.51 cv
cp
0 .479194 .451911 0 cmyk
f
555.044 406.166 mo
549.396 404.813 545.93 406.842 543.229 408.103 cv
542.027 408.664 540.929 406.893 540.078 404.753 cv
540.118 402.386 540.323 399.491 540.978 397.14 cv
542.328 392.283 545.029 392.803 551.702 392.594 cv
558.375 392.385 558.764 388.453 559.663 394.057 cv
560.157 397.137 560.431 401.403 560.577 404.623 cv
559.064 406.166 559.644 407.269 555.044 406.166 cv
cp
564.391 404.295 mo
565.741 401.787 567.772 397.17 569.568 392.176 cv
571.364 387.182 567.993 386.325 566.417 383.676 cv
564.841 381.026 564.616 381.729 567.092 379.848 cv
569.568 377.968 569.118 375.251 564.391 373.579 cv
559.663 371.908 557.412 374.833 550.272 375.669 cv
543.134 376.505 547.281 374.415 541.428 376.296 cv
535.574 378.177 533.323 384.235 533.323 389.877 cv
533.323 395.519 534.901 397.144 535.574 401.996 cv
535.765 403.371 536.221 404.537 536.771 405.514 cv
535.843 414.149 538.248 423.742 541.428 423.802 cv
545.479 423.876 546.831 421.476 550.174 423.802 cv
553.518 426.128 564.841 422.826 562.023 418.099 cv
560.43 415.425 561.755 410.468 562.576 407.029 cv
563.198 406.223 563.866 405.269 564.391 404.295 cv
cp
.846067 .413092 .314244 .520836 cmyk
f
547.187 408.755 mo
547.187 409.563 548.568 410.219 550.272 410.219 cv
551.978 410.219 553.359 409.563 553.359 408.755 cv
553.359 407.947 551.978 407.292 550.272 407.292 cv
548.568 407.292 547.187 407.947 547.187 408.755 cv
cp
0 .479194 .451911 0 cmyk
f
476.874 506.829 mo
474.973 507.139 473.066 507.717 471.691 508.842 cv
466.811 512.834 469.117 519.717 472.869 525.018 cv
474.467 527.276 476.327 529.248 478.007 530.587 cv
484.881 536.068 494.503 538.809 503.618 540.586 cv
513.988 542.608 524.707 543.339 535.331 543.681 cv
538.5 543.782 558.552 545.716 560.212 543.864 cv
565.426 538.055 li
565.554 537.912 537.148 524.098 535.357 523.303 cv
519.912 516.445 495.191 503.842 476.874 506.829 cv
cp
.886778 .710994 .0776074 .202701 cmyk
f
572.095 541.446 mo
569.175 539.927 li
566.881 547.256 li
570.895 549.949 591.405 555.302 589.871 548.055 cv
588.337 540.808 572.095 541.446 572.095 541.446 cv
cp
.882872 .646418 0 0 cmyk
f
621.127 510.221 mo
602.81 507.233 578.088 519.837 562.644 526.694 cv
560.852 527.489 532.446 541.304 532.574 541.446 cv
537.788 547.256 li
539.449 549.107 559.501 547.174 562.67 547.072 cv
573.294 546.73 584.012 546 594.382 543.978 cv
603.498 542.2 613.119 539.46 619.994 533.979 cv
621.673 532.64 623.534 530.668 625.132 528.409 cv
628.884 523.108 631.189 516.226 626.31 512.233 cv
624.935 511.108 623.027 510.53 621.127 510.221 cv
cp
.886778 .710994 .0776074 .202701 cmyk
f
514.799 548.055 mo
513.265 555.302 533.775 549.949 537.788 547.256 cv
535.494 539.927 li
532.574 541.446 li
532.574 541.446 516.333 540.808 514.799 548.055 cv
cp
.882872 .646418 0 0 cmyk
f
185.292 457.573 mo
184.404 450.462 179.423 378.145 212.581 342.302 cv
244.436 342.302 li
244.436 342.302 260.85 352.683 265.294 382.905 cv
269.739 413.128 244.436 534.908 244.436 534.908 cv
234.183 534.908 li
234.183 534.908 234.39 401.572 228.508 401.572 cv
222.627 401.572 216.404 451.351 206.626 468.24 cv
196.849 485.129 164.793 529.574 163.487 529.574 cv
162.181 529.574 153.949 525.379 153.949 525.379 cv
153.949 525.379 186.182 464.685 185.292 457.573 cv
cp
.742214 .5841 0 0 cmyk
f
189.117 380.318 mo
178.38 387.031 li
177.807 387.391 177.051 387.216 176.692 386.643 cv
162.503 363.871 li
175.771 358.974 li
176.344 358.615 177.1 358.789 177.458 359.363 cv
189.506 378.631 li
189.864 379.204 189.69 379.96 189.117 380.318 cv
cp
.886778 .710994 .0776074 .202701 cmyk
f
174.692 356.139 mo
174.732 360.798 174.992 363.878 174.992 363.878 cv
180.702 366.599 li
182.072 364.298 183.262 362.158 184.302 360.179 cv
190.042 349.268 191.592 342.658 195.842 335.758 cv
197.572 332.958 206.302 320.058 208.062 320.229 cv
210.902 320.499 212.542 341.888 212.582 342.298 cv
224.672 351.519 244.432 342.298 244.432 342.298 cv
248.152 320.729 li
248.462 319.688 249.872 319.538 250.392 320.488 cv
253.772 326.688 260.662 346.078 266.842 349.618 cv
275.972 354.858 297.072 350.768 307.432 347.418 cv
307.762 347.308 308.082 347.208 308.382 347.108 cv
310.522 346.378 312.092 345.708 312.862 345.188 cv
315.012 343.448 314.412 340.648 314.972 336.988 cv
314.992 336.868 314.922 336.758 314.762 336.668 cv
313.942 336.328 312.272 336.148 310.062 336.058 cv
309.332 336.028 308.512 336.008 307.622 335.999 cv
296.922 335.878 278.622 337.038 276.282 334.368 cv
272.892 330.488 269.282 307.028 256.202 292.499 cv
249.662 285.229 236.882 281.658 228.552 281.548 cv
220.212 281.438 205.472 285.708 195.052 297.318 cv
188.502 304.618 179.842 322.508 178.692 325.668 cv
175.142 335.428 174.602 348.128 174.692 356.139 cv
cp
0 0 0 0 cmyk
f
314.478 336.913 mo
314.477 336.919 li
314.478 336.913 li
cp
175.468 363.551 mo
180.504 365.951 li
181.694 363.938 182.822 361.921 183.859 359.946 cv
186.603 354.73 188.392 350.487 189.97 346.744 cv
191.695 342.652 193.185 339.118 195.416 335.496 cv
195.515 335.336 205.513 319.728 208.055 319.728 cv
208.11 319.731 li
210.692 319.977 212.228 331.982 213.062 342.033 cv
224.082 350.218 241.738 342.932 243.984 341.951 cv
247.659 320.644 li
247.875 319.907 248.438 319.439 249.142 319.365 cv
249.844 319.29 250.491 319.628 250.83 320.248 cv
251.753 321.942 252.921 324.576 254.273 327.625 cv
257.839 335.667 262.722 346.682 267.09 349.184 cv
275.819 354.194 296.373 350.468 307.278 346.943 cv
308.224 346.634 li
310.313 345.921 311.862 345.261 312.582 344.774 cv
313.924 343.685 314.036 342.067 314.189 339.828 cv
314.246 339 314.31 338.069 314.452 337.084 cv
313.75 336.826 312.295 336.65 310.042 336.558 cv
309.316 336.528 308.501 336.508 307.616 336.499 cv
305 336.469 301.962 336.515 298.744 336.565 cv
286.108 336.761 277.691 336.735 275.906 334.698 cv
274.702 333.32 273.558 329.868 271.973 325.091 cv
268.979 316.06 264.454 302.412 255.83 292.833 cv
249.666 285.98 237.171 282.162 228.545 282.048 cv
228.435 282.047 228.324 282.046 228.213 282.046 cv
219.102 282.046 205.082 286.892 195.424 297.652 cv
189.116 304.683 180.437 322.335 179.162 325.839 cv
175.706 335.341 175.095 347.558 175.192 356.133 cv
175.192 356.135 li
175.225 359.921 175.405 362.687 175.468 363.551 cv
cp
180.898 367.246 mo
174.518 364.206 li
174.494 363.92 li
174.491 363.889 174.231 360.768 174.192 356.143 cv
174.094 347.484 174.714 335.14 178.222 325.498 cv
179.273 322.608 187.883 304.56 194.68 296.984 cv
204.664 285.86 219.216 280.941 228.559 281.048 cv
237.618 281.168 250.15 285.024 256.573 292.164 cv
265.337 301.899 269.902 315.666 272.922 324.776 cv
274.412 329.267 275.588 332.814 276.658 334.039 cv
278.272 335.88 289.614 335.706 298.729 335.565 cv
301.953 335.517 305 335.469 307.627 335.499 cv
308.522 335.508 309.348 335.528 310.083 335.559 cv
312.587 335.661 314.135 335.867 314.954 336.207 cv
315.349 336.424 315.521 336.738 315.465 337.07 cv
315.312 338.07 315.248 338.999 315.187 339.896 cv
315.029 342.199 314.892 344.188 313.176 345.577 cv
312.127 346.288 310.081 347.057 308.543 347.582 cv
307.59 347.893 li
299.624 350.469 276.74 355.876 266.593 350.052 cv
261.94 347.387 256.98 336.199 253.359 328.031 cv
252.016 325.001 250.856 322.384 249.953 320.728 cv
249.809 320.465 249.549 320.324 249.247 320.359 cv
248.947 320.391 248.717 320.583 248.631 320.872 cv
244.88 342.641 li
244.643 342.751 li
243.826 343.134 224.47 351.995 212.279 342.696 cv
212.105 342.564 li
212.069 342.165 li
210.916 328.233 209.156 320.835 208.015 320.726 cv
206.591 320.895 199.032 331.546 196.267 336.021 cv
194.077 339.578 192.601 343.079 190.892 347.132 cv
189.306 350.894 187.508 355.158 184.744 360.411 cv
183.631 362.53 182.416 364.697 181.131 366.854 cv
180.898 367.246 li
cp
.846067 .413092 .314244 .520836 cmyk
f
231.308 253.69 mo
234.926 254.851 238.154 258.418 237.995 262.323 cv
237.846 265.977 237.365 270.835 235.874 274.183 cv
235.104 275.909 233.806 277.472 232.244 278.551 cv
232.244 281.448 li
232.244 283.311 230.733 284.033 228.871 284.033 cv
227.007 284.033 225.497 283.311 225.497 281.448 cv
225.497 279.64 li
222.632 278.559 220.785 275.626 219.602 272.75 cv
217.544 267.75 216.838 261.587 220.084 257.263 cv
222.599 253.914 227.32 252.411 231.308 253.69 cv
cp
0 .479194 .451911 0 cmyk
f
146.034 269.281 mo
160.278 267.032 176.531 280.827 187.14 266.333 cv
193.264 257.968 199.134 263.335 203.779 261.086 cv
208.423 258.837 208.505 258.712 219.796 251.591 cv
231.088 244.469 241.677 253.09 240.74 261.336 cv
239.803 269.582 235.874 274.183 235.874 274.183 cv
235.874 274.183 239.801 265.178 235.088 263.979 cv
230.374 262.779 221.954 259.656 221.579 264.154 cv
221.205 268.652 220.897 275.372 221.966 276.927 cv
223.035 278.481 212.503 299.318 186.608 293.696 cv
174.101 290.98 173.646 305.315 162.027 313.562 cv
150.407 321.808 134.585 311.188 129.189 302.567 cv
123.793 293.946 131.791 271.53 146.034 269.281 cv
cp
.846067 .413092 .314244 .520836 cmyk
f
244.464 534.62 mo
244.464 534.62 256.775 537.874 261.805 544.383 cv
232.813 544.383 li
234.228 534.62 li
244.464 534.62 li
cp
.886778 .710994 .0776074 .202701 cmyk
f
163.676 528.788 mo
163.676 528.788 173.994 536.252 176.346 544.134 cv
149.294 533.707 li
154.125 525.107 li
163.676 528.788 li
cp
f
179.33 370.813 mo
170.384 373.261 170.954 380.912 168.549 377.554 cv
166.144 374.196 174.994 363.88 174.994 363.88 cv
180.701 366.603 li
186.407 369.326 188.275 368.366 179.33 370.813 cv
cp
0 .479194 .451911 0 cmyk
f
314.431 336.975 mo
314.431 336.975 327.806 334.051 329.528 337.806 cv
331.25 341.56 324.89 337.269 318.326 343.821 cv
311.763 350.373 313.523 349.227 313.99 342.921 cv
314.431 336.975 li
cp
f
228.802 283.965 mo
231.469 288.322 li
231.469 288.322 234.922 286.078 235.445 282.283 cv
232.244 279.822 li
232.244 279.822 231.717 283.484 228.802 283.965 cv
cp
.260319 .123964 0 0 cmyk
f
228.908 283.965 mo
226.241 288.322 li
226.241 288.322 222.787 286.078 222.264 282.283 cv
225.466 279.822 li
225.466 279.822 225.992 283.484 228.908 283.965 cv
cp
f
307.432 347.418 mo
307.762 347.308 308.082 347.208 308.382 347.108 cv
310.532 346.398 312.142 345.778 312.862 345.188 cv
315.012 343.448 314.412 340.648 314.972 336.988 cv
314.992 336.868 314.922 336.758 314.762 336.668 cv
314.212 336.328 312.612 336.138 310.062 336.058 cv
309.332 336.028 308.512 336.008 307.622 335.999 cv
308.442 339.928 307.872 344.758 307.432 347.418 cv
cp
f
174.692 356.139 mo
174.732 360.798 174.992 363.878 174.992 363.878 cv
180.702 366.599 li
182.072 364.298 183.262 362.158 184.302 360.179 cv
180.722 359.708 176.672 357.389 174.692 356.139 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.0.1
%%For: (User) ()
%%Title: (97_1_47_01.eps)
%%CreationDate: 6/10/2019 4:02 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Bj9=OpGi)`^9;=d6b:_JWAds<d$Cbt(((4K\l4e08BKF6mI^/4s4O#cNbh>u#r+6bM3BZ22He5VF>h83]mI`DY[)1Sc\n>Y
%f5d0kk#NMOb3AOm2m#=DGOOD[`e!#C:p8ZR%9n:.Yi"crr-lE1Bm+h$[9Vs_f?Wc0kA\D`^%\#@cHfb#l.%D[9jsN^<#\QHg?H#X
%6-dbk<+qk"j#;C""WcOqTR=@WCC]\05.((MgF]qlV^q[uIN83:!<<G$l3L7$p\d`"R^JZOkF;Y4>2JD%jVmWB3Mn3E/Q4ILgsX5=
%gsA9*Aq/g+!M:-TZ;7"Vifi=o_sa3>iZNql>C_(aGJ0S,BQVr.#!`1gQJc5Tm%8R@k!7jePI9?7i*d,-=O-;VZ(t0tm$pP)Fnc[N
%`%Tr'$Gq:n3rYJrY(":W7aB4\@\!Dq16,e!$FZ8,(gJtN#5XScY[iT@,d-c#h3Q[)lq\/nXE3I3\kR,$PG#F_R:j'1bH]tmr=N'7
%hGZjTR!I0%X`CT+9d^2%)0u!kBLZ=7K?@*+r#ZCJk?@;an(%AC+@_(Ai3;a$+>17&BfW>162A@$l1a&A)Zp(Do]-@&m<7cD;[?"B
%^=r3UFArn$HVibDl^dnTQj]JI&@o37F.uN<%9kpN0>H*L4*49l\pjOTo9LLV/>SEEF*c\^F#nO#S?)1AUD=O]QGVmj=6ouM#eT6?
%`-ma=]jBa3d9\UKkgjpY?j^`C)Ke%B\<1jN)^1>fPa<?'!a#Kp_8'uE_!B!3Bik#(C&-T&@#Uk=@I(;f23;j5PCjb6+AbKKi$j!T
%%uPKsGC_]&k)-nX1d-C5RVCcnD<&7oid7X=QC9.LRO2>u9tY50ibGknbsaGC`bMrA^MFjifeum;m:nNFe9/$VlXCkNri!Bn@PucV
%CA87qZ!+,[eOh-(=t8Kr;@2YgX*D$U[;BYbX^[!!<AY=R$]kN[@SCbVRtfNh':Rqd<^XOh*NL>i+h$AK,),Jf#EclI_EB0"BT.2p
%48qRBn/]+R`"H?#;YX"sitj79]Pph9;ZQo"6e(TGlVsoe(357^(R,]B'VrTid8XL,&.mb-kf!6!I)r=lMYP)(La0WD=+ZP9F)`d>
%*.G_=Lh"M?5oS,fEQ!)!Ka8#G_"RhR/AcV4L,e2)@&=JO6!OEkNZ#t@!?Xp3a>s?rTKQ<h`!^9(YSRQVn,bF$ZKOA\S#?u!@3%`i
%PYji1RL@?YA],2<Z'pbs`)4lM1raa@K*Xg8:s-\D,fh@Q&<\)lF!rl=g_'$BA;!d4P9f4kTY>qPcsDY^Le#79N!]"fi+'06I*oXk
%5[5+T!UsQm$HX'r(Bb@V<9[27ZCLlf%5\T.YFK5KZ/e"YOrhmL.>cPZ8lI_@-+?6F95YkG+ZZO4,Y88Z#]_o1kZB[ld9OL0IKlfM
%&,lu)>`t`=ca(K-q'l<93FedSIYp?DX7Rc(`Ll1Hhi8A0mKA#nK"*'j`F#kuI`kOW#L1G';'\BF?_nrqb>7Z+7=Tl[7ip[%i32nr
%rXtiZULBE=<\7C8WY=9,]ioQ[Jm0hu&q8:hr^2sLnHosGWmu^E.mS`m<]2h8#\Bi!aXA#r<@d*R.!("rPF2mor&'ANP)C-YP,MoI
%8g[MY$cl<]kYWbm,m3F?VbRPQ1^]tf$Pa$N)sBi5(KGRU+tksN_ZIOPM1S*H@MH(-<eglU?*gL\ph!Rj)i&;2$,aTV"ba'_W&fl=
%#WA4j'T<7H1^f6+(D+b86st+"(n]iu%W`I0"CuL'_O^N1E.aK#O=4+e"bN`cFB$4S7)ukU]hfid_A0S6I2Ap92o*9A=.kF'kRhoP
%88(^PYDG@I,)i<BLt/01i"O+MGbs=BhslEXJJ'XfND@GLQ671K>n+nCY7QBp%>3^u;0YKM"P=H]80eYU6dd(Ye6sLG.=mIa#p,ei
%Plf1gVd@fF8X28?eeq@QJ1<f;3VXP%V1101:5rY7P)83#M976>83E%uUcA>e6QcJ&]EP):I$Hs.pk#B5E-;Q;!_EJh&Vg==!(F2d
%$\aNp?5.o*S,bei!E]f.#`t97Kkpm_''\mY+V7CX+t#AqiIPSUU9lKT[X]&AKS0i(@l;[iP#\1e'1p/j!:YiH&RA5u!g.JZniV.W
%KT[3C8amja#Be1NTS2@!Qki4lW^;pW_70N'@_O)_*&0L&%59CR9E5ok&B.-W0+].pd&N8QbDCfA9e\"9OYAC,@e.)iC-glk#/\8.
%7!Vg@"_8/pLkb[D^LKW8a5=0r>aM)0*5@AGU'_HfjqmstjbKL`J4J;nl0]2K!]<8g8hq!PO?pg50T+Z:`Cm7F*3YcA';pd;L;JhI
%WR\eo=2OE9?5e!>\/4Z_&qUil[!7/-.Zqk#oiV9(RETW4SHaJNcnaNYUFAPC0'8OgI0L!TTP75EE'tP_"t7TL3)'5[J2_<SJ9<F<
%DMtOiRt.kW;u%m-LWuS@>(oDN-Hq\>Egtee#L&F7fnKkf#QE*uYFsMZ(1PPo@VH!8!rqKgcGZN1l@NgX",m_B7[.OSKE=\GAjuV=
%r\cWZ4XpuA:D"6o5W41b2<8NY^6!AqJ627EJ6*2HJ;6p2S7srB/HkH.6io!V6uo=t7:T0-!l'8u$Kju\Q;rJABWae@@n/Wm^BnP;
%#F#n-ENGfk%]GH(lU(VR,q'LY,LA'!&G4:oa[!,YEP@R$[3Lq:J2>g8!4L,\%PQ<u]G/bK,NT#q&#h#!-HIU>'53'66/liiPVoiB
%1cs'ni<m8P\oNM9$@tX];9+7edF#!D"Y)(/1;ZHCA>G1lrW=MS-7_t6?ed9%"V%k6_3%t]2=dh<,TEVTp`0VQ@B'6<K`K8)T^0tW
%,#b4=`C&<3<2H/EA`/_%8.?kMk]nOt8]W/]6H9-"d>PB>'"o-2+s0X7GSqE`%MEZ/,W<I0U+4jk%E0fk4]!2r,lEY3"(n3A6NukO
%h>nQ:WN?c8'Zb)jKc_^jRt@m#A2#u'+%#B!<JmU:2&%=q6\l5"8&i@MEs'&6TF\kD8S:Wd0kGrV#hjN_8lGpAF90K$;$cfbQkomQ
%JYknISqV&2"I;hcgsA;eKb4u)#WZK>D(aeD0F+]s1XZ"1oA?YWBbNNUUc`@\BS+k[ZN@h`'K%f>M96aI'ht+3Y"/c]dN#"g,Q"LA
%VS#_7_LY$]cO_1Q*aKpu'"q+4Gr_7j0^FG45nPKL&N%Lq5&(XZl7h['KYm;id\>kICLjWK_'i-=61.C%NZgLniKONV&SbOON#eV/
%6CRL$:*[G#,u1BJ\EX9GG:[m"7-;<,V73\CKrS=;-ncp+Gi=;ViN5_q'(NjLJcWhZ'#9FI,+Pcm?sMXK1-oupN7reYW=!!*TFgBL
%<7TP7M76uP.^T=i5upG'$BZJP7QMV/1S+i*C>bh[$UGXC$j+=c$cF6V,(\G\T;ZsBcKf!I*=A5hQjhe;Lrh3a[&X[uC+,kq8,](\
%+8Jrp%>h&6nHZ:_!gu:o7@I81G9X[2JL>1gA7(G_TUB1)Ul.eliO)5.JJUo:2)o2+]nCcs8H@"A]]p2nACqOi^j6^33&u5_`WOIs
%+CHfiN)6(?e8^4?8e@8>^Pk9'BOhOn4`[TV&?$lHV?'-n_%;l.f+B@gPi3pW5(T.(O0XA3&cg,j%VUEj`G0DT`*Xi.B`&X\4t:[i
%c7-RpLiDu:9_9l@(W(<aZjhZFAX*)m!Aa^^JBi`70MVXT(1<1t!n2^<OH9m00W!&*I9J3Vajp.hOV9#t&(9W=RZG[j?reL*!Z,hB
%b7NASF97*Zi%jf6:futg5Y>116,HfblZn&PR%BL9KP3!8ZsmUL<2hQ-$qNA`:n>Cs<F4$7q!'&u$Gk47X^+E$j]19q0hZm\5`/JG
%UO5P,_pjsE3m)n:j,/YZ">=_g@(H+O=W(mZVO6U?(%Fl\ap:^$\`Ren0FH`D[>7"hN0Q)K#)%(4+(c*<_A?_$BYFT7:j7K\_oO[U
%fsjmW_F:F;W`%K$0Nh7l_a'/e(j#sB*2Q9odhO;r<*@EVP]rl6,@ZH72$?DT%@@_E5s\c!";f!(9itGT4;h,I=t-]GNWlRX#sETs
%`BeX@:^K1Yd7"YG"]L@m"A&S]"o02GE:=_R,I.P6Ik^p>?B#6-#sU&T-jn6s7A)-\n64a>0u=q;+X;4tH1>*ulqmuW)o*i?QDTUq
%I6%WK`G.pn[&Cj"'DX0.HU;O9i?e%<l%CC+9Mj;O.?ICTTS78E0X_g)%6nRD@\kbfdd5>ldQd#i7-7TgMDG<V!B)ThYu%3qrf\3h
%bQL*USQmVR6AS)(5V#-N.Dj9UfoPT4Q@e<LVWhY38$43&;2gjONGp;n17@4(3_6;>PRi+@NIe>'6I1bWMDQ^m'(L]7"?]9EA0i71
%2sk@NX,7hT<gZOF\-jd6**sLsD?nPlaAm6HW:5inbb9;IDA,=ZOI.l^9qAWrHI9"YK&C^/HsDJIN:N.`@>pl,57*%nmV(iajq@)+
%2A"@S^(Y[HP3t"Y4a?%'_L-<5qO*RJ0K"Fg&l&g.pPJ.NX3t,eD?6CrZW)(kb/bRA%2.;s,V29c(D&j/UU@#a;i[RYOW-!SG!$VN
%6b\M*<Y=i6@Q63fX782FIN/`\<+L9B5XeM+J/9(2C_eEMS9kG3m,PgV0Zo2-YD@]sq"$rlUP-H@!ZO2\Z1tF6k><pEZuY@jUR`.1
%=GMV,<U`@L/Wk2_WB`HoiR*M$PONoYo0OZ>)D;lLfL?6!R"/!n)nA43qi&aY5hk35Tp19-Q.^0X?Pg)0'GWuTOl!fC\0:!gWZ#=i
%4Xu"&K!1k;:\#f2AJ>l7kpD'R\k8tTMC89&$]Abd-:9L737:?"P4lam(\9u;GA.h%!ZAsPQlHqfZri>E:5ah8d>Jm)_9eo)]+PQA
%I%UnY1.B]c,;<"!7m]N@V_T'?5V08aTdH,]^Q'ZcOtt%.?7`[A."\e#VKOAIa:Zk-EOI9`6.C/C,a:$^N&VEu9d1Q"ctPpJfJ-);
%%Ro\54:sk?/cZ%!M(Kt&_N]]=`f\-qXrA^Z'Lf."oBgPH_mIh_a(uZ81$sa"0M&i)Cs`?a@]U,u%lWS#WhQ;BNX2*&Kehp/dO"1K
%+ul<M4(bND&NU(n<k-G,?O`:4Ji1!,:*YK=cql]5m'qF5E\<;>3,&O\!YGcn=SVKmpa)<+A^t<6s2C-pai+[SX[?%g0eQ$</lgpM
%Crn5[*>.F"iZ@3$a-[8R>u&1tR3''j;^oqDSH"/C'DP1n"V$M2k";dU#/QOQXe:o9V+a%nQ&&FaRcuSVVXQ\<[,Qfa=BGlC*8,93
%Cn)Fg."b)CNHs_#$Rq,u6Y>DNWl@BMW<VTNoMKl_=EP?OAIoZs(:8\kNG://#)[c#3^TNN)5FN(JFA5lM86"u=VVb-\8;rgDCUME
%n.[[hY#sMVoi2gfG'-60oDk58.Pr4:74#o!["E13YiMJ<E\O5]P[gBLh8l?@7d1s?m2:<Z'(TuC8"Pu:YbL.q/t##d=r$9jn=beS
%+Y@Z'A.Bgs)l]>s%7[__Ja;k@:DOqu5%X:;K_Y.H3D3)B/(:u%8nBD3_S.PjWo6:'!`9:oDA9?EEG^fD'Ii!MfJ0LaW=h)V(#qR[
%"3b%6>YMNA=^H',6Fb/Z\P!Wo#%8o`_Etbk)C]D00X1sRP*=<V'Gb@CF%+`=h*bs!;';1h6taXiVKbr[#'>X9>i_mO+QXmNE8#.p
%k)dDD,TSAU.)cl(^'MBJ/&2C73cQGHZeH+i0O?AG'Cbt#Q7o1S;,oUAQls0j%tohkm)tWo'Z:BX)6AWt_TE)[SA^\nRQ,=_Y$MIk
%ZKjDF&`9cui`^lc]h5nsgO4^XV+qDBB&dK1Yn_Muf4fERK<+PJ>s%Z`_sSUULGK[8]]qb77N8fUs7*j*igOqoh]0MPX^5Ymh/8j-
%rqPAKU#%g&F$#AiT+`#^FS0'[l'&)^T1ijS(UlVs[LOqm?;POUbD%bVT:Agbct9oXHh-<O][u@2S20ZoV*Cnar2m4m(Op/k[si2@
%kr&IdYNPUS^VLF!gJGr<`='`'1'ZcBE1Ikk4XVja4Lh'-L)0c#:sMBmU$l[-,f!EL?8(@H[&'DRB9Mt"rsT/V488q*9u)C#ED=<i
%F@=%SOFU+gUqDs+I9"ucr+;jbj,7f=!3kAQg0RQ`l<bY52DbWtEq?:VJ-6,f=J<fL.Z82^a9[SdGaA\J^XqoUQPr)k9SfY_PY6jf
%ncfo@@af8IqgY5!3Yr6^.eq-&qFH,W!(i-6"L+'@Cc9Rc?MC0kb8#BAr^H7RdqSd`5T0ur6;ErkA@$lE(*]N/>R]8D5F<d/J.m)U
%]EBiRRn3AQC7TO:NIFO#*#9>E_SVHlfaaYu<?TX(?,9T?!]`[Ok^j`&L>`;!-^>#2C5<d!$S*W8)G61E)`2;(s6s*>i$Y"0Gdg8J
%^"4#toa`h&0VsB-6fr'F'\>%9cl37@DT%eD67$C>cVC7Ne8QWD9LD';*G/tYT'eJ!XAL88:a2-L:VXGj"c\O-.%IG@384Oo".t+!
%;qhjS6LVaPM[3oK9llSG"+6OD`q%hELHdq@giaU6;lgTeqQ/)I"&08\NI`aQ1d+SD/%#-R.>5^K'I+8.)K&#XbDm)Z"RH9hCXmo@
%?(L7`l^G>.pi[#bciMuhq)J5B>D$;OG'@88l99VL2emTDUY#B#jjJHml-ED:%2W)sOM/ZuE8ZAPYQ>OI]q./dVfpI$epDk8C)FM%
%g[0R)Li7oQkeY*S-10R,guCccZ@*dto##5QK0$ao<,$\2;$2RP-(pY0$G)N+M4]e(i$&1G6+pDEP6@.8';4l.gA,aI2pO&\#quZ9
%c3g,Zp'KA1/MpZuQWVsu4rq[54TU"6Bi_`d.+VDD+./);)6#C&krSodZ.^_M:e@48b\M#U>u&)I?g[[HLOQk$6t),*T9TPd4,8Fm
%APK$FfVa%?W^%3:a(ip-\\YLo3ZYJsh]Fb?BVM`j/C>>%n6Y^a,:-Mf74IML-3tL<nRrG;HaSG!,E^?PPnPX:8V$-Y!Bsd\qFB"Z
%V8.LBq.IP^bS*`=ZIAJn*dI8_(aH*,9%4>4_d:UF'"O\=Q?s8D1!ABJ]4u,g-V^j**lcFe9<$D*G5;p%-($="#mt]RV??=tm%<Cj
%ZcFaFO[Ku<V2HF:+5'e"AG9Gflk0Hk=^[R"G/"ocZ^qD19Cl/]d9i-b/qFMW6G"eUb<ihUWnao,m_9^p0eJ0m6]rU@O@[,9F_C$#
%O6ipP_S%qK8[+#Q"WIU:@'`,.I43mf&aTa5fa>uR`fKTa>s,K?3bc6Q]n*fd'$s'JSJCJfh'R!9SVC+gCY&!jjTJ,rW\\^=Vs#Ck
%=lIH*#_V@]Mq=S(SgOPRVuCrc2^G=\Z[>PD?T5?^cJW!O_.t(*_rj'%Ucf_kqO0eWKb\6SB?tL=-7X_ZAo/knWQj*>KA2d=)XYZG
%<\-T*qVIl-9]G7dF_@&i8>6X.>&Dn1i]6g+P_N(]<bQd'TAHaS>,19T#@9&l6:97mRH@&7"m_$+Xr^-hlp;Pmh.S*tVA)Ms4A#OU
%?M8k*kd_Rf&qF`i=UE_pF/&0J@g4V)3iS0@6n5(\ls=r:Ca*JWq26hCf^Cc3G&]9ud]EUd@01%Z3,("hj.'8^6tSb3OS8V6NUsE5
%RE/'k(.aMr]/11?!\;O>X\=74&o"p6AsaZ2JA\25ZPX0Q\oF+UWu)?Clu5e'@KO*/)mec$)M<s65=hMqkK5pDb`/#(1RZlsrm)J(
%H!H08Th_#B#\_iYSbkt%=g$Zi.'b_kC^p3t>XM8*Mb<9@1>*Rd![95Y)D\H<HO5iBfc'ER[YF_WljU$@)qoU)S!0rnBC!Rj\oE<m
%5?g(ler>.m,I2IP\OcF*lc/26R`t`AnLqZ1m/3C!O=&i(#o-KVSS"U$nn<ZD=du4Ui"1L3,[Nd<G)EQ)2pT^'ID=9GK=u1N;05lC
%bUf>V@$l\^1C3*+1+cg\<d4cN?6J!e(o,TMVgj/*7[>3%aYIDA'<)*M3D5R4-qu%9XnD:Wn$gn7htZMsG.hnP=oZn52#Y7:c`aNr
%H<tsX$<WTYbOT:Krp2kA5@[jq//?HnmNbounG]W=)C@MW.]PKZ_6O`Ij#>pu_JGlCGK+?cEe>RiSRdLVXo(pZ-skU6I(/ncqZLA[
%O%'/phn)2JiG+S0.G3\e<rVH;iOfbSZH;H\Z:WI=6=g!0216/GcskhjP9jP@`(QD@aV$8A2f-MkMb(J`=W#;rA;QX(nWG2)ZG]D%
%GaY`@1eYL:+Rq3K-g@7/(=!O`!6AR["3u#nBe]_CKfc?p7Vp68`LW!#RdU>/OrQ6=p&ch.i/es]Obu;aWB[V]fbj(&NJYgbo4SmU
%p8j-?4-Ml(?I$bSVFI8Uh)K#E3MjVQ0#D<tTlJ:OEgd*rR,!ls]j\Q^*;lEbNq9d;IKNk20D?Z&-TJ7+Z"PLEXm1i6Lf_#MO*FC=
%OgI@62%`@@lliRP-^36"6!q&[r!Q:'@l@T!/9+W+SciXCiY,)lA&5EYHr:qA:U`#iB7M9N;M'[)Aqs^:4t^$;6SEm]Nc:;ek1h&*
%O['<(PB^+#)7ig>E(JuDe7\!$FO&2.rW'p9kLUBMc-D:Y'?DbU(7WParSOHap9%mu]%,A7ZdYn3IHPCD9s8`NSeFP`Y#fBII][>[
%7/kH7A9Y_CHF&dGK\PhU7NEbmB3r$b<Di8JEY^76dHP"_p!1n35;-g*T"9DM$)DuDjKHe$s5;>H9R-1#,11foo6Z+.;K\NNl'EFT
%Q^1?EF5oMr8,E1tYVg:K5W9A#^$K@1RGTRg%mPb[QL7[dmZq%4j)u&;cFH,Uk6As5c/iY$MscTYWb])2G:@-!;<AS;O&M;=7/o4h
%fcB.Qe]eJgmEY,Bc][,!R46f0jOm7JfcB/,*TZg**j[rL1ZLH9KpHoBR,('"%cb&iGE?IW1&]*H]7KlE@iOScKDa=Z^s0n0q4$23
%Si4ml*lTiur:mBjbb[_g[03NnVdA8apAFAH^KjKQldn]+=kT*akA\cbe0_:q`GYRgH:Ns,U>tQL[:b3KdBIgUC]]/$`0>?'Z(:R#
%g;%L<l84ZWb+d]kUn[9U]8*.ED!_8[58$P[>'X.>/`[$"Vp;5_CN;S9"olSjMb9l<CMk3RYm%9,fBeup7h+,ATXt?);p9s`]8;N9
%(G.q^O6p8oV0&bp76T^A617r]84u&=B4S(j#b"Y@8B0p=S<C.da>YY'AdWC8&"15?/i!SNRg"t]L"fjVK?,2..jTU5_u0fV8nJ`X
%kEF][0otb0Wp(/OIQ'3cmUdAb?;0Y>44M?;G@uB.g?:+d2Wm$PTm9lW2KB*:i</PUl+]r]IuMpL'oNBSIm.3u95RQI[VH+hWCHG@
%Vr]ZgRiaB>RSPZe1M&I?;HB=Pjq%l>n36`ET%ED&-$]PZ$=t9`&BX,>o?e=+q/J2t3q`<0)rCsbV*=kf[a:>L6F6K71r2:D3&fBL
%o9*@G[k3o\$%dkWGS3.T7d%VJ@'&:c0DJ)*"HI?a:UeN=p6'qs>*@Z`[duG+4+D%(P`O.6r6E?Ch]tOTHFm"C_':Pp;XL+L3isZ>
%OK-Q_Rp)C2ckr<!qP#c-/:)cSkp>"*ldb<\6/tHJr?nYk$EId6m<]-Le#Rc=g2890BVACr'iIVn+dHKpkcY8Ml!0.uT:J6U3YS>@
%mP.KEr^U5Tk3S1D[-R]oURgV5;4*3S2^g%V6!*BtcGscLd2KFHYVg6C8[;$pb-OFXC]<sT:%F2$*q$i0-$4,qbupaY&ti0!,^/iG
%i+A;co%K((,%:=rM3rS';/>,+*"p3po<HO/+5^FnV,!or$DgK,HsekH\4E64o93l-ih>$@_aeU6U4R6>VeP27dS:G1Eq)qtg7("s
%r<kQWc#U\WGUmAakC3#m99:H%oJr7g"PK<gk1o#XLJs%F@]nCQ=>",8RX:5.9)K2oYll?9H1f028]!]n3%J@GhRFn@0X"?rD`gm?
%VRnWF^$\=eff;j44I^'!IpDTuRH@.-JkYcIRP3-;l.:<`L3@LHJ0`eR1rIR&\s3DTT8e/kk>qi[Aq`o6N[-W]@tob\,ict"TBlST
%;8l\3,Q%Z5$^`(q:ib)>@)?j?r'[>._@,-[8[A;*_4?9K4anm6ZNKB&>@)L>e.g?/Fn2@-e>YkrF@mTn^-GVG2GZR9?#tFS&"1S3
%C-C`U[>mJ"H7e)CY5<iYadrJalHK[H7=M'*@QcJ(H^o3i5f;K$3rE=d1Ap#<o)O(l1fBp7=_3Go8=n.pV2qn=Bk1#AcID:cN#$<#
%B4;WfHTc#:O66=)M<oe`$4b_k3Ia+#f`O87Fd*[8JXhYl[-ATtqZ!(*SAucI-40!`am`n<igaY1r)P5OrBUDH:5@`<M'4r'.]l/b
%_-NVb<fPcoe_*u_1tq\?X%(gOC+S<7_6PX3M\_m9hUC?D4%rl.>:6^YD;es3<Lqs8qu$PRFmhdDNhlX1%<DR=h2#]#(?&rU/>J>X
%8."]`bq^3D%r8J07N,Q@B)sb+8T;a+)HfNSb@kE(N@^j0\4k"")Y9'<=G4"/Zj"Tb/AasmM>/fTfaKq4&l54J`HPq:%#8\Xe#GD-
%VpFVN1*(*%^U1Y>4l'm+TC+QRp.cDPTGpQdX'^9U&%.j`;Uftq;[@m9iEik_TsNo3V!G18A?$dF2\T_GgL]n](@Pi)?@)FPYjl%O
%(a+b2(*h[/YZWmmpTec,2l!^0O)n&MZ*Jm5$i%#X0+7Q\JF@*%ZC5I9Dq[QBI=X`!eOA,q]SNK11NCi*`d.>n=i'N;r12Z+r?$me
%oR)7ml>uQuSOM8AR)IBDq\3;nB-/_Z%`Fi"q']0O^D!)*9&CnN4u5'^;YuV+YC@p3?%Df[:(r9ho:rZ.+o_:mo7"$9i,eh['eP8T
%OtEH*D].q!M+9QZ$>fe[d1U7`pcFCIWKk$dgRTV0F&!.iS1eM%\2g=VoT;bPI?r;q!`\;O)^dr65<$j9X)N!aS338ESHMTWV$jK_
%p7$hde#t(@;-[rn/,TkiX<?@>^T1(@Ci.=SI^eRlr0H4]m!@Ku1c\_lr0P%d<KDR!c;XS.`-2S>c:j3CaPb:%F_Z3K?%U&D\VLl]
%E$kO\2Mo1&-Q[C:+(2[,SVX+H^En/imT^h.PouZi)\nYARIni%,c^/PT(R.agWk,9<g(]g<,G[K9H]CK:(h'jR2lc#T:FBpR!A:M
%A'k"5`&WoZB8'?ldIt6V#DCX?Ao5#@j=h^QlE$(>@"D:+KnI,a,c3@L?@Q!HC6KhDF^`6R:S]1eHF#s"XQTK\QXFEr24Dd#)\\^I
%6`/[R-W(Mag9<HIAm[u#ifqTl6Ha0DoR8(t3UhG$?8&"=,\kWK.O@?XT&a]b;/<%kL"C4L&dd%0mt+pJ%V/jNKG.L(MmO-D#r:b+
%A/6P@1"SKaZ3.c%F"9j7gPV0Z,dX(M/S"5BU*L>^e6AM4k&X9kc^aGm8`3dta^14c,4.fjK$8^^R\s6GAp[C\]dWo<[9:Sa./JF$
%01mhNMiuLB+UMf0DecVl.&kU4Mn0_$[RbaBOs#tf=[.PP..aZ81QQlt&ddWhn8c5bS<[cW>/lEc0SJ?(Lu/QY/0S,o;[r!,2Nrt"
%]'6FWrjs5e1liD(8Nq<(cMm?\PGdi]*]::&%u@mOYqqfBqg42Q_5#Qt?-sr@6)Nj$7@,Ga:iuF=gU_Q+C"FS`7qE*e:0r(sqp<Ld
%3a,eub)<b7>eT^Ks'Bj4RNo!&2i$n:8&rcHY,Z\@rEQTdlsJgs]s`+p.Wqpr#8j@Eb_`AHYM!`^$Xj@A*d'Nga7)9o?&Z>lpgGcs
%!!Gj2_>+P=9n3a/QinR=drW)ds##dBb.iEIITKc)oEL)'?VS9Ge)=lMo<V0+E)%s4r5<aWM).6fM;'A)Z1&"2i4BF7/.K<LGekc:
%5D+LFD%/>,%NDNfduV)gEdRQs/fN]`G93%i^g!CODH]%PDf`s>%J[d[;j=eXW>T<pmTfitki&^Pq!/*2qZ^UrJR5nCgrI`EY5SZ2
%4MWrZK@BpfI1J#%\Q/mh7>`P(:FG/9fCT:M?f82=H3:sFOG5B$B,Q;](=8',i\RC(`IN]!iOf+'e5+f^O8nV!`mK"p'A(+d^b_!5
%eAL!saY#V0\EM!DQlbR0l/7DagO`MsM)H6?K-pk5:^u<?pb"k[R-ihQQ=V!^K.jg5lR%B?R`etQ@*+m![k0/9D"tn$2KKkU$N#!g
%kZZSDkZYHd>R9&4;)1(>iQ\7>:8:&K$e+(7S;E:*id:op9G\4h[8&eXm-=UL<V8oIU_*[Xb+75tf;HgK!2t,1jDe:PZP@u0bWZ^h
%5/EW0P>*T-Nf<>>e]g<8as:JEn)RYRk2+5.rHA5%LY(jq:N^3@11$@5F[jaMj$2^u<2U0d@t+9#*7P.T*r:L7\(VE^CA!ik+IhTo
%/u[Cge1U^!!?"09<rFD"ipRQ?>(?5%8MXU2][I!Fbn5m[gmpIsDlsf*IO%u&=>q6eNd0-0rB[?H!ql:l7<G[#TpLZq'GO8^8c:U1
%c/J;!D>nBs(2GDoc[M`V^?7bFpR@/rii)BILKf%.F.h6<mkq;bHYUQUT_Ocb[1.\NP;`KHWH]_8GSWRh+.kE;r![K*D$V;_U,R3Z
%RfFWYBL1"59H'*X@>c7*T!:/""@<&%4.Y[k47*Hlf@]W>#(+$QJhnn_R&c3Ej&V8U'^9R_!nTZ63Ys)QI'I&3Wci\?Dj!*#aEc?M
%qUa;Y$\hhJ'b`hOF#f!5_!@Qg"7WKJbL>?$-URE>UIE<T@.&CLe\2R-An-qH7RqT"+V<*[@]);$Zl8t20S?%J:'H+#<*OP"*;0^k
%d#H/EZs#UE(f'$t]<_l4Md?%5E/Z`C'.gc/c?[b)pCeNk7W?<2VZOo84&u,M@Ye2Hj(N6-q!#7_rVC]:[,:2B),5eHPr>W3_kt!_
%s)'#,DR!+@;IDNKQBtPOej'&"$925g^oMg78R&!/!f[#cJ[n\iQM;*;9;V@'!/58qcUH$2_"V7r=)F\?CAY^"4t()oOAf1c,(!YK
%G&t9Eruu[Fo`oq!&=hO,hsWCWd;;f,%JGO/mVjk^M=(N-)$erWf01:&kC.<`diEU%[2H@XOj.1?4136A%!^Xp7!4o+)0,^9kOf%W
%*NrPjePJElN81BXo+eqY%Fjii6=QCGIp2;!nmS44ina:mohdDI?N5&Q%(t"b.9]#e!)ZNIZ*9cL$jW>ZH;QFc6"\L8gAS2+_aB4[
%lUF%hQPFAW9K!c0*?+^%q^P1n>hA:n2"V`/p7T:$M4IquQNf/!)u)[4T@OC6E^kb$C?8d_"&Hm?iV:p6Z<KJH*)2^T%mP:!s#J/#
%lA^@=g/%h[h)690l8TLCP1T]loa`@0U?PQlqL8ACF#S$&GoseKeENtL=a4qeffA_o#C^mLm#RQke/#A:C1@ttSi[p8]BGdHN\;<d
%W4a:%YDZTq7KaDS'PIm(-EfjOQ.thYprtN;T]OHCeH424O.=Jf#JJEZF9erOT5jnhcu2,B#!b<ghX><JqfI+r0+lajl.!?mlEFB-
%[Die2C>dI4H8UYoQ<0EX0+6Ob@C$jBmB,85b/2[`B\Ef^?@1&?!EHd]6@'&*Hq'8&:t%Ba"GJ)ge*YX0L-#uCpApqi?c+[Q[p[p^
%+F>Vg%]%7.F2(6`Z^C5UmYdkpf%E$42;3]bQQB6-lum[WUhZS6(8UuYs#!9k<;aAer98m?f"Xf][6]l'i9Ch6-6`]cma6kVf+PXF
%Cij)4j#Z(i0U'f`Ke[s8X<-O-!kG($Y&nnJ;)h&R<4e%$4?qQUaVDMC,oWG"4h'5kbN20LoT<"MrgUVD<%R[,``I9M\,f,eEef;:
%KNQ_cS9%&1e!m>&Am?YH'TT*2(s'Q@\YJ^M/g!2WPL8)AoaeZ@%A^5Vl4/9.r+:$"11&E6VWONP'E5#E?#?n'Xu1uW#g?I#\J%@S
%hIN[n"7lRtFMST]7PRX>^n,bcBQr/4YF0n@,QPG_pIJHZ85L=,?/57E$l//pN+YYY$Fg\go?dAcdU%W0O.=-.d\YD^)ioO4GR1m#
%ULm9R9Y4.XII%Z9ek-;T],>@,kV1ejPr4kodomW=%7Cu[_nAo'F!O;Eed=f:qCh.@l;*SO;=nhlA29OE1l[LX_5)6/5]8cP3J!Vt
%)sUo\j-4^1Pg0^CRj9I^)d6;[30B/0nL5!\ciCb*fqdh=J.tD;AOI8+4*NYH4mOrpVLYod9:bLSX+kRbg^ln57c=eS]!tnc_AE2`
%:sQqIVB1b$k)k5F&9jXQ;o+<hi=0gGg5S>;>7J!kY#cR'R9JjbdB7\Bp.*f/<,'8PMNRE1;jMd>]0G!Q0dN-I,=_T7;[3_ocHl@>
%3hmMA?sTlgb#.fK^pbcrd8e[*GbDH>YO:#_YTii:<G)lXXtqB;TGolsOgjh//qh"BQUN/J7e7!%YfBu8T^*'6:b.F]Y%AthA*LPH
%ro)*,'?u]!G2jQul<"]pHU1&>(lPWX+ZVk&eiT%WLH_t@]JEhf'!saKGL&/#jC`]5NQ;c=qRGkC)oItnm-!$6'OY:7ICb"T#uW3k
%kRT"#oFR-nncV=b!et/>je,<lRR2ttE!m:a#<6?G40c68i]MZ?_O"^_I$l>TU#pbSe*2q.F\_P+NBtb*5\`Um:9ED:DdDL$0c',G
%S`Rg#$>E6_e8KWGbPme'qA=22h%0BHLbM8h+aYI88$PlgQc9.r8]FMXr=fo:;X8LQH-1qK;[L(:qu+N[H^s+9l`Spaf/da[nH!8%
%VKGKbWllNKqMZcGBbP=<PfbQqrTeddE5o0jcu,M)b;]C+_0&G'MKSsC$dXO<GN+un?6@MnW7)UP*D=_j`hWgDbsu0GFYM$u#DO.U
%ZXj;pg/JJ=]K#h$H;7EFXZ?OlD],9YG[!"'cXRk6>nNm;;h3prh:@mBU4Z3";@A!c3?J7!N<!/`9^pm#!R.5B@XjsLBW]b%P:f/n
%i`Yu[bS!"BYFRuX5r7Eceko22m?m%KdN_d%fMD&Sq-T>4('$W"$+l0H?3@8G\pZa8d>[Ym6Hb's/+2PtaD4S660>Jc3Dj$]=VreH
%]fJm>VUs)m86YQC\g\*]#2n%2#&.nMI]_A+rL,4\(S0Kp%+D"9@D1:rf!U@EdRhq#8Z#OY:?:9Bltmq<C@2#n-j2\e_m'M2Ode*p
%q*VPGE&K=0^&OR"Xj]Y(E1/X-"51^7bdB6[Wejk;c'5U+@1K\$\56\7l`/N>^I",?cIbHXS=MG,^U/F!#7_QgH1fr',7!)m^"fN^
%8nn1O_at1F#?1$JphIKgY92A7'-L@-i&*ZCm<1uSI91!4C5&)7rcQ5NCAMd@B%Nq\3ubWG:_2rGTuV!jRKNE3E_<^=(dtOG,?MI5
%GV#/1G,I>m:no*`j8?hqS5/eskb3$pgV6LtW()1pX[]F6I>u$p)RIXBhL,e_jUF,q/HopB::mO?YF/*m8d:9k[<"p`]&'h/UH5o>
%cj(@Ca^jjl0l")AY+q$p(R+Be?E\jLC5_u@]m*_/>'7e99Mes)4:)(A)c]qs85QoWB'hjcIF]J#lcj>9X<Vdcj)g*UVl12K*%1R_
%SQs,RlTOtci5-=J$;CEWC&_@>#JC@+(%$^e?AeUT[X[]SjGpd-h*L,LNmJ_`NM0\Y_Q3Pss#T7sFO4ffIMrZ,7jdqp'tA73J^8m.
%=4+NfQ#g$*Au1sOA2,iUmn1)_M4/Eac`^B_<_&"Cl0Hk;Y4$],SAM's_0_P-p#B(b4ka(i)3mNj2lA3+?VT$TP7a4O9tT!FDDoDG
%&D'W/[Jgka^44i"6HIoq0''ut4d_#<^>J1s"S&:f(ei&JccIVj&<i^;5+c.#'t7@&cBf?<dr!Is.Tb,9%qV$/9D7QoFn\AW^Qf-l
%/oJl?\WZ6p.cYPTHDp"M!1GV5)Vls;An\k"r[pTW%?R9f?GFhqT#krj#m-LYPfnAJS7.W!*=B>3/,k<@YBtWtNo2&`!O;GUEdbEL
%\`sjT3>YaPNDZNmchj-'';.2Wm/*>56-%UEqrb(Q$WLWu$[Ht6m%]n[-iq(7&etg^>&Lt**0Q?_X;C,^hiTZ22]5J%p<2!ME,Um@
%$#WRkN_<\[Cf>(:<a`"X^VScbnX;KAA[g.Ve1Q'<Q='(XCl;N#Y9q$)G@4e`@LF>ss(N!qD8o,#rD'[r]?V$:fU$Xgr?t+>$_GF:
%m+./Q:st)U&t'=gl7qMB\iSeHijjqH+:uc0T:Oj#NqAIR91(]"JT+&-.5GmkK<jA>&b(t*d:eFT7b<\G3!R="a+EXa%Xgm(UL'^L
%"@#pC&Cst4Y0*&p.U(d]S9B?,R3BL%g%JuEm^HV7]r.[\?[m,2(r@pbiJFrIKq\2sZqJjC*6!86_l]O)lfJj?iE!$!M:6Vg'LCc\
%&buViRpH>7Id73&H6'VUbV1@lbq[/J,*u=SFZG"G$+,-^!ngLjYiG]QUR:Ua6op3W]'BqKR71129u>O5RQZ4.$>S$&p_@q@5ShE/
%7@bS$;`8J2D!H\kVl2(,;/XC3ij=t0<U(n<m"Cbq#(,u\B]BbAQ4Y"G\t4@fgT0'SVNGOSLtDJWLChf7:E[_B5jBV(4:X6cpBa3K
%7)/!`jE)A9>8nD6!(Y32s!._4.>EB;k[N1*D0q7S5Cq3!&Zk6NLbLk0GjW)tl7kU&`!F`pp$;L_a<q;FPnO]DLst`dX!rb,-rY*:
%d;X2Gr,m,c@Z>.jhM@p\!K[3.[gi@MkY$^87p>f>E['qekeUlR+t8G^%\f[D=&<V1FYkMON1^r/Vhr1l>>SG>Job,i*tf:LC/4Cq
%j)Z*SE%>m;n@L7j@i`j9!FV?)QD,+!4UREk'HH5.Q9GHX7UnRiBLhKVALSW'/'W0E3d`Hg@-otI,!h0-*]FgGi'&tA:?^<7OGX&n
%XK\uC.9]n-mNPh<#W7WZ)mW8m7$NW/@LN_a)QpGG'2t#*.pt&0`F("MC4r#r!#U\j=9uEW$ILG^S6D0X,CI^cWJQ/2c!5Xa5O(1:
%6HH1*.ntQrC2CB&^&ShUFV*:5T.iYl_B"6g(ok`Bb#;d?F],Cu7W(=.5Pp[j)DN0-Y`'/tP(_sF49&_k<pMWSdrtZ-PYcD8="&Ca
%4qd'1Ld<b-]6<9[#"Hh+R9ojUg(g$snHHCCqtc#4d3qrHa9]a/L+5W+Q7sC[CkT?l_I7/*gL4[.L:JqLC-C=`s)E>EprS/2n(l+o
%oD[T]EO3.)\l_%4hg//5[BfFteF<&-]Cq`W(&Q;1k*rKN]@O<rSPKc>2g`F\Y?$TfkFQQoG;QF/r`23idI(nTJ&sq/gfWh72u>7f
%a"Ya"qTc3L=R3r!GlIX6cK9lC+-mg@T%;'[r.FSkA*qe'_goC)]sl!GC^nPE4r:=3X"/m)B;]+h4rdfY5IKqgX(CVbEUd9)_(c?s
%51<i.NpZ3dGL-'=f,m3lN_9,VP=JX=XaT']\?(/9>jLQWbN5"9_s5ZNr="E(H<%_3lX)jQI*@Mnc/uXGZf8rsFMU3*0oC@l?`rWT
%h`!Kc4ZF2t!RUenQh)jNpic[aH+Ue=X17GB]3@7"^!d`^]^tDU(rlN_Zs9Z]f^#B^Kls]8;7L8q?S9&rq7=4AHLRe8nqW9t^3t"a
%@_Gh60(E.U\T5-"+bnRU`ua\,mXAGWI!JRB2X`eUYhE=\1b@u5hZ&TA4PX1kEFH^<pA3OiRtZ%Q6#6;<meUGMqXgT"q;_IB=m4DE
%p#X@S4mK=RIaNWQPiE:%IV`cl[79Dc#>E]mT.I+Ipr+T;D[@E?n(cYKD/\2iY,o,AcaGHEJ$eZ,je^7hjc-bBO))c"S^5gSe+Ppi
%l)FXF%^P2kI;HZ9,H77M0-AoKJUkJ:mqDR\41jUphT#NZXlU'V*6,u+?`4d@!lJ]L\$mscZ2Cu?&U`=mY.PJA9.Q:2U,V,GYmh?D
%:0W2D['F/*T:J1Q3]__qZ!RJ(l3hSfJf+@=/$a+2W)\3WJacfoTJ&Gg^fnH@AaEI&HpZluFna+c5M4k.Kqn4Jjmq*bQes<bpY]r:
%5(3%Vh7r^P9jt5)gb59?2SO*Ys1ELb_\B6I7jin]+7/iZb)*k1[V3?)lrD6dN_`9,Dt`5aZduh]C?b)I%Q&S0Q1KWS7h4`&IW)nN
%m-Qo]=Y2k>^D,0(Be?1^MSPmSJ%bdHXnQ+oo[J&sc1RjJmD@8/_=/pp,K*S1&MiBPmoJ)k+j?Um&tV*hq,"hMDLC8b<n=:C2GK?e
%NNX;O1<@P3Q/uJqrA)O!3,qs\L<L4goB`29,W[),.]Hb@C_]]OkTi)+bMDipeYTU=q1?%poYGcspWJ;A,YequGi8GKV>K)(V$m1Y
%ZEh-,Y=a(oH18O8b3#p+7mYsag"!YEaPD,D3kqWcq0MGQ6%OM>N^roLs1J.cf(n^8b3I-K4,to\V>mh(_\A,SlcYr;T"=%CcMPe)
%n5<8_hU[%&#*YroBZ?@GHW>FtqpgK!c1Ph>I5$tZDLKK&\Ku!@=7*(m.5P;;=81R7m`Fe@hlb>)ji:`?O,Dg!oiA?NIbQ:k?+dcW
%ICrgF3p9UF3j4M-rDij%E,^!j!1J>M?aQ/D/csT!Y^H0&\IJ%O/qciu]RBN:eEAU'bKi[jFn>OQ44O"3bGWq1ET,0U>!H?^Ic95K
%A(18)>hpOi-LCjE,:dkBBH+q6V/E'>Z)'*&WrBoP,>TTnfG6nule:U-ZLm5TZ*ZV<=&GWW#5fG@oFJ-)E5!s.DthRCJ(O+mU-<CB
%/0'+e;$sJ;Ks-sbcV&P^o(=TuK:Vm.rPS-#E&]tcjAi4=3Xn\bS%[P0IDI[]U:tKHIr=RHc<kmAo[A`]#C:6poh;RFHW8O%]RSqX
%cgE.XI!qsFndimZe[t!?U$NLn^3?VGhd@:9UpeM)/VR2+\)?ZL55h:Xg5F.#=aTtkh%/B7D^BY/(Z=\n#]JRsp2]ERe)9E,iZXR1
%2PTfTX\EpT!`2/]noZYOC;3"6L'-j[5aPe#k\]SE1O,r:K<'X<%B/j[)8(AKaC,?#6%Yl,?l23Uru/.l:k<PoMXYe:'F[Nto,lhB
%*?^UM3-[_g+ZNgN$DJ,L.XNZ,_QcE9E<O-O)1T%4ird.)5\Mf74Er0@SY#T!1o_DT>4;iS(qlU6IPE_^^?&_8<ia0#UL@X,>s[nr
%Xdu[Bb)N&EJg4+t^="]:V!m_1+dQRS.>?8K!-q-6f*ASC"?uL0SVJC+_MQMO>S1*%:C=JI->X_3.#5>_kuX[Fkc]*Y'm-0Y6qcP.
%981*0EK7uY9Jc88IY^](0@")_AVbA[At8aU]EBpf&hI6X,!Zlo%AG2'G:Ep%i"$I"$A006l\4@,CrT%H,`g)M6ir34l^;Q$;Y\pr
%R/<Zi"GN2R-u&2H/Z^(M;'ZE=+Q_bBh/\I/PCu&q:kV*Sj]kQ2":Ag12ALWOBd"$a7FJ>Pj-VSLH==Pqod/W#/V&00;qsfi<&f4$
%Z44]N2]qfb&=K%+W^Ut:D6W3d44UOHn(4SK*p#%3s)cKl*Knsbi*M[%2imF?3A38(S8;5@Qf%6>;ldDjCp6]q$T_,E!\i.d>!<uD
%J.\aAo@8WBKT!FVrU?#X_6NK+6gM;Yp;)nr\elK9.)10*]r7Z)4RidamIK,riKrCMKQ/S,50PcN3btq+k/kX.f4nsjlJpV05=40'
%(*AQ7WN@.'0%qhqWY4[``RFFas/>KnE<;2-$scGo^fgTrlm]HENXg`k(lu;RC'S7p$%9ImT]KqOna=5k!lDAQT`t>_(Lnobdmi-[
%h[iG7_q[5;,32.^*t-`9>fqT>C$'cgV$$DQhIYWd]mEU%T0#fJTXVZJ#@.WC-\k$<-Oq'8RgGc"L&YQ]q#"(dA^Pr,,<S(?^>Ae_
%W;-5Gk5fkrg5@PR#P&e]M.4eUn3drJWVnSZhYtO.&]t8..(#W<\':J=_VUcK+S.9]7j3_E5VS.UJco)Gg@h:T.VoihpA)akBOq<G
%JCEC+DdD5k@?S=\^hc[R^9%gP]!kI@GBr"j,pEDehjk'Ne]%\0[;adR>__D(ht>^>ZTVgibq1l1Y)aY"5d*gr>cpEUdqDX,\@bbO
%piL9\J3Gt"7Gr5.&C/$A?LBF5gpDQC72'5A_jE*r9B4,GGp/>rD6;Z0C<3CkW&iJ]hC_hf.\H9/8%e][o:nCt8pg?`\EC:?+^ZaD
%++JBWD<F@Xp&=*fnaLtm<<24OrOp)6=,1]K6P*Q`ras<GY]F13Qc%:#D5WkADY<c%hENtVL:C__+$4R(K<(KThSgFLD>3fCNNfQK
%>Q9TNBLt:,9A9e[Hem]QU,=K:BK]GRoP__DnF9/f?%9C'>r].(k8OT7>$9PFh1"n,qWQmq"fgl*ij"bp)f4%j[<hE5eck&JDJktn
%Bl>'-?G=0tZ$b1(CZp5"@7]BL>u+#*4C9\TkWSc'<\GE$.SiLHBH"q&$DoQ3S*O^m@2J>:<cQhM2J(TaA/Z\2i\O^<#%o^0YFW!t
%UYi<!B<*,ja/XM?NHCR23J"_9g$e62@*c`YD!G6$QVFKfVE;7n<?Js4*u&%qfB\$N:L:c8Qg65I,o"1lgZ>aHca7`Wq&Q.W=$*m_
%jsbe2>!U`Aj!SZfs*EQ58G.B1ENtord%T@7[e*#>?G1>B=&-KbqZu,PhqJ!7r3@$)Y_u'K5QTV`mf=`iD6uTr:TL!Lrm6IJ2Pe2S
%;UQ^BiB-3F=M*D,\1nfmpkDrA.pr!F:V^7=8)87[YYn]V4r(.FpGJnd@g@9H/j]PiH"V3Yfphm#m8i7WOhH100>)b@IpP)o>-;c!
%g\T-PQ[6?C3\\Fd4F(2grj_P*4cfcG!kN^<:r47ZZiJ90\psIYH?/3JqskVdXOqX_Y*<9E4^=.&:Z,QLhn'#rE,VqPh*&Cf1TCUj
%oq5YpIUo(5]p$/1ZE/CNr3H.lmU-S8]`Xcg^L[q!WWtt9P[BDUG]6=1rj]?JF:d,08i,pb4$-Y^4F"OINnt*I*nBiYkE!XQ-<?B`
%YCGtfr,c50[u^<bgA9YsQ$*,M_b2h%QjI#EFhZ_2XE6YiTI-(53+URc>HP`:#?^Yg:c;BcktW=:bO1('8=nN'[S!_qDkE!p#VF$2
%0O%>"[m#CFrVZ^U^%kt(*/!+T4:q=u9?T>*plL8fqU2gE<51ZT-oZ@;oSs#CI^sMmj>t&!8r_SL)2Pf1=(jhSmYm>U+aA@)>1_Rn
%H`S%Weg`=3f8Eqb/Iqj9=PE,D\jOuoRg&f%recGM^HSfJn-A\XW9Sit4ZELMi62!ak@3nBl67C9Tbg-^5=t>FVJ"Y@W'#K;Ro7[D
%K&U)P.Rs[1*fs$?;EfH`Ijq[p!PHbI<(hqkkLJ#Cq8)[7:\=%+qtRHN^.RA32[V[-[_:rqH([D*HMPkRc*_']I+.?R:6ah>m%\#P
%Hpml6=k^X#*nSb0/,ingUQ)D<DJT%shg3$4rPSL/LfGd8bt9'Z*+"8JI(R/hp?ZIkFT0d=0eDJulDpCiYJ-\q/'^5h*SIp&m8C0U
%'[>D$"_4I_!dbbo_1Un1$ieE%OOh.BP2lApYl+Dl^L(;-XeHukG^/u>)\C0dhi"VMVsLG=]Y4gjmIEX7Ea<#RNG%&L#O^eqq<Y$b
%nXt'V;PrGss7=jEHdu=R2g]b_%*E4R?Clfc[6RE'?*L*e%ro/F?+"eJbe,ur5'+pp^EC:lHM?7)L1[[5Mt5HJHTq3FXt::.[C77S
%;5`_:b]`q%"40iB0]&)nN@u,A%$sI!VYOoiTu23Ba5ALcI4O[K72)EcB:#),:V1i#8K#*/n?)[L*YE)aPn3T;2cccj<aWR1XeCdc
%6WFEA03.%GXG+5kh.]r*X:7P#jr]VbHNpE3..G.1.e)EqI\B\"];#:E(ngk$B;CTeK-bK:[.C]]AJ8nGdJ[:S-+n6(2Sipb8Un++
%TFG9]+12KFnZ;R*jQ`dHWP.b/lri1mhYeMH?g45eB+':EHGA./"]9;#QCkhbn3S90fV$R0-JuI/O[cQ=CZ@_fIl'R,ENllt[aA$X
%M5;_GT0Lh_c"?_9BW-F2Nh9?I[>bEkLE2K&()I<Pcc7>t4(<'oN`J.'ljV#eHf+._"*HV_+IDeVL:LZjh6oO8UiWS<XZ-R37m2t&
%cOY1IS6eEqh7jKJrAP[$NgP_]iYCg3riY<0nN:hKerM?)HOlEnL0n!%eJ!k[<;#K.bf?&o@J"=6g7aQd2k&9PWe3JrlJ^snMlBIA
%cJM9u.dgAH@%R'V\5HB@8l(aZ5CAM(bcAdD4)5ddY8^NAShqPDTJ5cq-@^5G.6(Q1!NtalOqr;IqR337C%^*V[JMO@r8=80o[E92
%^r(P#oAcil=E%$IkDFs9h>?0=pDf^=NjaBpoR!Bfiso&O;>IKF.*C&$nCZW@pCNkb_eO>c*$kK%GZ;FaN2[[``b<qb(`4[fJf#LI
%i2:DX((OD(JN)bQg*8@VW=<d<'V*_OD=eM/&Kq8:eFngOA\DurIIm9:_k33cQS(JQDi9.ZEdMlf[J?Zso&[mYBI/&5ja,Ih?eJ]a
%r!(qRrd%^'<kd0Nl$p2G1ORb**&Q?R<6:eo]m#tEL[T,I?bS3Kb>C73;s]NCYi3$Dr=AhiACuW_V'kAGB&DHI)1H>Q:VT,o5a_3-
%HZc)e$R@K*<0<4;,W0\:e+uASZ%%9!aX4c.VX4rqbi]U'XEQS2\p(oj.Nq?r?9;=H]LVk<k,Nm;p$T`02Xk<TPfZ-ejjb/NOK<p0
%4M8Hm,nDDK>&CG_=]]jN%6VIhZcB,e_#62bL%abV5LOUFQdr9HN#%gL\W$`HM>-l_r7WekT],cpT]08gj&_9L7rS0b,bKFoq/$?j
%D]QmHS4MeGa'c-_>/-_Id.=-"6n6TbpgE-\r2B.q[^#E&A[10pCh&h+)^@Q*#k\pR+rD$hI227VMDY`\?TuMqi:H\6$mPu-le>f"
%r/^1#ET^R%ETPrgC;oQs.UV%<]E-ipqL2-"YP+I!O5C"MZW$fj4d2[ImC`:7YhlA/m"_[Pqs\$H\$o]t?VP%F#%(cIq>d>fmYAsM
%Hfr%T*Lj*e#W08sS/74.rC=BpiVQ::fb917QQQ:_d,P3t*Be_SI_'^uV#7dnrf/1?;+D?"K+2RTm/R6LHWBZ[l!h!5>2F._N^qk)
%c$93O:3Gf4d4+F3=Qq6PNFgJ5NbDgZass;Z'de&Kc5Uou&*QeOY>_;[9W!2V.0DrLOlH2)[>O_OgIe1<m+-XYldBDJB>g_=Md'h_
%!hJ+"E:RRgHggc]^%Um=.:D1;"8<B1/l3QAZubm>*l82Te0MfBG3<pu9iPYAR!Z,Dfj/c0!\U[lF?8\gC/:HhDf>&fn%*Ee+7Hf(
%a$"t?3@=Ci?OB:>[/iVis.93%h8=$dh7L3\g,dp5Q0I6;nQSCOcbd\+7`-/k*J^]im]'PAg\dCi)o)lm]p;m]Np:X"O/(op<hkH/
%W?%#0'*`C+(c`G;la<K4$i\9lEfKd(ZTlO_PfG;.2`kre06?nRHM'I7D9>#Z@r>1W''0#2T7.I;HfgCTd*SZ?$u\>\/TK6$hY0.r
%6mq[un6\V4SPhZ>8Yo^R:+Z_-UKg(sOcjI`PG3Q`B[`MNJ,E*gM16HA_bYoi*-^qfQ=F%,F8ErWQCd-)N^"J8Md6".c=#:='/tFi
%;pH*eNZ=tEEc2nF4C*9o!:k?G4)_RN^ePg1"G\uDL(Sg]:10SN@rLWR*?iui;WQo"s(T"F^:jF>a8^mME1r1Sp[Cn8nCD[L4=nm4
%Z?O(Qf*hBI%Ea.^F=jtkqtO=;ec1/X#LJNCR^lG=ZuW95rYL"?$,5`b]70EC;!Vp1rMCZ<*UP9K)Ja+2!s>`ThXoFN8tB;Cmi?ZG
%`j!4d(*:i7[,(`?2&kh5f#G/9H[s`![*`1&,BXCh&_(fB=.]VQO1,n>T@-j^?m@DA#C&]^>S&#*Dl4doh?Z%209$Q1`jJC5`/]k=
%jEe2VAuBhJZdBjXfk$u5G.W='G.\lBGQPgKUN!BT:J8jYGCPG\a^m3Pg:u>o3n7E'8GQcW=J_L1Y=U6rp$h2C_[@!Ym!Cn!'j?E<
%-R504NDSpurLRI,7luas1JhQ<8ZRC`"4^lB*S\#CX1%HY/QZG\O.b.NRgcY`'_B!*3\1MI4O7m#`\K'jF\Bb12m73P1%LcAj_EH!
%f(,+-eo?s8:>SHq5R.[hB2BJgCcu^*Xoi5^oZ*WCFRtOWR\DNYAEl,[dhiLp_'"Kmjr&66Wo][pn.TmGTJgVEM\=W"ChdcO'A'Zu
%/@P+1dpNmG2Y+Eh'ilp,c<K)4TaXCK1b&T0%>,SbRZfZN"%P'G+A9bpLa^lJ6dn>c!>>omE<-%f@Xte^Mq/e*!*'47RF'Z0/H`"V
%:rX%d;eL%a_1DF_3TtH]Zh(WK*,P$#!K8YXF4GeYF;(Ut!CQ;=QDhk5a3*)<Sp)1k]5uf@XheDlf&jb+VBIRHT!p_adY:Lj=%>"g
%)`?QQc%$kj[1HgP<%qQlWrql/7o!b\mqBKGB%T?[)qdQ:B5Wao)IR@omsl"16c=^&Jb+nY>daZFbFsfj!LU(ERYf@,[\:bH1i,[<
%([!^8b=mZ;?n"?NS$%l`*/Z9dkf85b)FJmH/^I.!_^[TqO9Qs"i[C[a#r$FYjW2D&3=m5sK8OV-'3l)M#A.]tb,V5uR;EV(!*<i,
%;@QM)ZJakMf>r"L%4_nnJdKl%!I+gt$mGPa,=esT\E"RL&mGI;5sl(/V1EaQ1]r8oXoT/E!/)\sH"&a`F"f0S(m6m!S!thP-k1]4
%?ILK\!!0A@9$N_@$-aWP3<%rf'>:9><FD;+)4(,DSmns$"%VdP'0CD8C4YT`n7M1CkU&h0?t>WW!'m+a1<fk4dIIdrE8$JMUI.o8
%ZuJi]ODQ#AT\_B4#+WOs5f*[smt?D+Ko?.n*#,oRW!a:UDJ4;)'STF)lhNSkkN8/H&Y@ah3_Y(Zd_jkPj1e"c:mEGe:0tDt&J9RS
%$k]gBIS:N>JKYUjDh&$H,dmn*5:AF(9N`A(3R'rG>Sf\Ki0saG+<gm9/5`Lb,`tL!Lc,`:-QZ]3\2XpWl4WS1Pi>fkW@!4Vp'l+e
%hV`E40V+W+<3nmZ7l13=JAkn[%44N[?pG>S2GAf_Z(BE<"-Y][Jg&!X<[3Ts)3-*LaLJ$sb>I\%YYe.L8#Qq+9dUX.bu\LKXQrh!
%60ANRD1R7nq&DtXc+,72*(,hkoNn1-FM4M$RSc"3WQe,50\1<6M-r:IK'K(k#IZ<1!h*:D"g:^*#A,)m*"@k4X-`ni/Mn2`E3Nkm
%]^+HNKf9=$(&N7*7'D$Eh*9Tc)XS2c50HO\libWKgJXWM3PNUdht?O7i"LB/EKklB$B0AB:"V1\h<CJdk:SZ@!RjfAFs>8+;kMr%
%d]D5;Sa?6e)?aq*@in]0;ZE]E4TWL%]hT8)EarSIGj`V/)F[Bg(_=:sm?p[8G/*5?B_Xg^[#0=\\d.d<1XdHf+*!@<*DjB,pD)+^
%_bjL'E.?Ik@htGl<<eSRA&sK3cG(f#_%i0fLH@-"rt$5*DG"K`9ZIpfgp*Y4Nd%%+o`OWiK;",&+bD?&1<qQX_I<caD+On#`,Rar
%YE#tXN$8NYFtCm9MIV(4R1'kM)rO5uVB^L%N`MO)\\Y+L#2VAk#%u_7lj-f'*HN]i*;Z^!Vj[f,?`r,@8%U_c,,`AQ!#1=$C6!-9
%!u3N$&<>u^'hf$dYo*Ca6Re&gSSBon(30hZ<b$kN#)9jg%1[P,j&Bj*'Ke`F%8j6L5[78)2TuG$f;,)]kr[.#@$H(J2WhIW925dg
%Bb2]D/PWgT:l80lg1d]?V1BNJSMB]VFL=*ZGFHW]\X:HG/pNq;R3[E=Xq_`<Y+o)*P>X@Y-IoVJ7kFu9`F9,*Pt;SV44RkLQu]K,
%E'/!?(eY>:Cb.I]PAVkJS.I"X0q/cKb:"_@`KjqRV)[%KWi9B&[`W2)_5<_92Q!XU(o1D6%5prr)ns-A72U-j)IbFS2mP9sFdf90
%/e;\`f?#fR!jROg-75^s3"g7/Cg\N`R<d7X&m#R;Mkq!BE2>PFFV_5m&PEnEaI*9&edtJ*%.ltFo3CiKZ.LlJf>P'O#Vd>9k)!Pi
%\8JgNQta-8*:#]2$HRBE3F_4m1LniM\`A'GZ&&i^&K)"4(4D.SBdqWSk)M'O)7*nu1=CBHaaj(peRIa3.N*A4q8-%Q18Pn4>TsYf
%i+j/:\eZn'@Blr8V6QUj9a':J,tenM?SZYCBY=P,UI5t71F.S4JCD?24)/Pa/hY#@mb(._Br1sl%d"^L<=]47;Sf"S*f;0[(WAob
%nBFDM4n?`UMEVesK.Ee'Y1$&JY0lgCVMdmK82$(^Bkc5:Q;4GqfdQ\8b<%bKn[e*C>h[1t>=4O8OhT:<#&kb`b"W..$sS%W0);%L
%T>NT\Y-baNNXF*Snd\&@Opj8-CV"f9;&0s;qG&mc8@-u3Y6,>V8cZ3&fZq*6a_!LP=(AM'CFVg$2@*UDCg\-<N5W;&1D(IA9NYl9
%%WApP;Ls!&?u[IQU)8a)+AR&">=n:o)@uS13(dndlVpg!VHl)&qM*1ihrIUS!_Pbsjb.S0U('d%c*ERE-6mW+fRWC#EP1Tg@`]g[
%/7O_t%g!9g.(IaHJ;?CVGrfV;E)!<6Zg;Yrl+!Jr8e!;SBhXs>a2'#7()siJ<#b'_c2%[^&Psn\__$54/ZGC'Q71<ASP(GG(n_b*
%K<(\;UZ5b%R#2>j0Vpb[GH/bmi:[Am@CY]_7:acdn&/])_sE0fi+M"<58Q8=.;MY<%L.iK+kW'GHDL!dP5uY<%+fV,o:V*hK8J$,
%`J2Z[8Hoj-@iAr#KO7ni:-1/73!siLoUT_Pi-lc3@<UG3,S`..=tna]?mn=R9>k6=ZDfB#E/W(s@L..Bi`OfH-A'-T<QQp4Xrg;>
%d.)B(<6Vl29$LaWW:DLp*hr"ZF)9V?KuMhFG!h8]SSBo^\B>7*(;:ZDAoKUt'\fK3c%JR`LCJ.`RA2$g*SNH3`K$f@1Ih492&S4`
%>R3)jQj8c_-k'2bOf'Y-^sFU0mErG`*20DV\le;!Fd1lff4h)`kI;JZKGY@hECC]Q?'KBQP!mZ:Vl0o1.bBmbNSDYi`NHcR2:?QG
%M."aQGoQK@Rkg`@E>`A&D;9iJbJ;AFB^\+&WSCN4?uWK7<:"Wm/WTLp`@P09Z:H^npF++5aUUcoDrQ59((!3-:(;DZ?nnL+GCj9C
%Dc9d"RYuB%85fV^PUVK4h(kcLNci&,:Yp7KR3kA+G)6`u,s!*g]3/W&.V-":A@Est[jYdr-tKe8A@Est[j_/\=*0Tins:p_hUSW?
%A1G[a"tMSMBbT9ZN5`6C"oYBe[\'9G[Op6jr"I[.1INQN$5p&>SQ;.'$uA7hN,F^o+aaAbbUjF:LdIYG"1FS4dRSpe=D4C&Kf&=[
%;b[?dBF((HCr&P^0cLIr\5F&X/Z)G6]##)$k/q5?CS2CT#$R@Bm7>iCV?2RR'3\\e,o+KEEHDjqod(>(7^gsk4(7&#qES0p-JITS
%ENJJ*;ZR^'*KXI\#[C:p=(bKKUPqjJT]:4T<JOumd#],fLCq+B42.K.3:X0#9E`t`*OWc[Y]ZoZn4Y)W2Y8+N,`7Ss-dfK(kQQ`Z
%Pp]X%ag7'#SSBo69SEfA,?R\bHo3-f8jM!$=`AZEI2JiYW'Q?g-!/&^e4%%9<)Z*GU&SQcVOS8WDF;EQLrC(I@&#EKs'[mIU'GhZ
%(Q4]Y=\<\8mkg6ETnOW06m(3Mrdp0BXf9q]DbQp8K2ZUkY.8!U_54A(0k3o)O7BsIb<,UUM8IkIU2\s&Ko&SC]/HQ(5M.M\092h4
%_u/M]7&!+3:H@5C$Ef,[/7hs:Y4XRY]GOT;?*C+Gk<6YKh/(9@Rr/2HDRRf-[`r]uc#0t\,RrGO[KL>gZRsL@[`r]urRZ,Z3[Z#,
%gefCsN>=,2@^2aY=Z.O\E(<Vag8'LpQn3>cUD2dS^=+QQ"KE3JUKj"^G<2dgMCmu5jLaZd_Afn)a,nrB_AhUHF&/.AZ(=lg"-%[V
%njXXf<\_]ra'tq#1APfC3mA>n;2[s?'C:DM1\+hHgMF%bSRsWj*+KQ=Ns=pBKWfq78Qa3H\62oJlSqaX3l>!b_P#S"ke&D:A>JNj
%;o'`^P<5d;.N$$*GB>:pU=]gc<9?.I^8@`b@Rl>3!*B"l1Dt;(D@[t9e<&p=9.+r5`i(CQN/BJ3j&EVQcF'J;j5!YpV<XL%QR56!
%:,Np-Z+o@[\ha5%dL%o8EuM3.Mc)V.(2U0i.>ksgc-UT56tE+V1_W/rO^GsCjYH^N,4ha8Z]o#]dj,Y.hC'sA8$Yo`:Vq=`Ppm=6
%44Rl7A#k;BW_e8,qR1CeRk@cO5Y&?$(Y*?@->JL0;=[t7Xq[p"Vj[f,SWPG&\dJ`!?;&8"Lf:Q<]%YBo3`hEnBqGt4Xfc+m@Qi&(
%K:4AVABPLuF896TjWIfW(phM<Z(>RUN<%mP.Ed&L1Rk,'=gm*4E-4lahA79>F*"X.F0]k.Z?()mF*"X.F0]k.VNE#`2^^[G-Ta9M
%?XJ17l$`uuNTr9Z[V<>Y(@-]%P6hY!6HL1s\4e%(e"q`\l=rq*]]ZXo*.b-M3=itC<ROL`7Uq=p3bNJg0=*C76!mSM/X\gYF]/f6
%='Ja`@st8C%.qoJ^_p/?IK2RcU=`:[IpfdB5ea2b)A6>.$YP^G<N@i[Vj[r.E?-#jg70,DRpF&L`J3Eo*2DVa>^3#5GTMJ#"IJ/%
%n*6?6ENJV.PC\`_'&KRO"j<dn7js@MS;J2d`u17^PV^1LPD4bRC.lMWmlAWL0MQR9a;8up-nl!*2;B'[91`N5)?P5`o^KV/rgUb>
%7E:[_8o^ru<)Wg91_lU\Er,rK_@qWJ9=#<?@G/L^[;Aj)H[M&ei3lgHM2:hpAf;Mp*VuJPJgAFA-&U(nNC]`.JTo7:`Fu#N-@Ak3
%<f5Ff;b[=WHmeJO?$S5fjcCIlY*<iSk-X'Di=e7hR9MTY'EmC$3XTldIA`JA\k=!sa:GZn`G!XCRV@;*/$"eW*s\$N4=3VPOPgIQ
%(7eK;JNhr^Ho\+X_F(d$n2hF-7TKt%P?&Oap21<e'"AgPKhQcqSVWW;fWaIg<`bV4k'c&/48k=-btc#!:p\V(aV2im^EcX^dkA&V
%01/RBdk;$Wm.<rBSUQutIeg1N4>;DX$M$\-R9/C<UIN)+<(nU;_U1,i6Ybbob@I30)0fMKE*p.R)XBGd15DN+Y/*JTe<ET:S9B2q
%Ga=5fbG>G]&oea<)GOfR/;IH'pM.c[b=LNi-3N:Z/#h:79J1>0+ZC.#LS`f)_)7sI"0+gh%[s[?747<4)Oa!IGi,JIK0d,_a<+EB
%eZ_&f\PTAAb-;ir\mfNo^s-@Em;D1LTTSuK9U1aSdnBtpU"sSHONOrB/Y$s<@>Z5kKP_?A(iB@O[e?1#ThF7CBdgr8f4cR`38d[/
%UR%,J0K,dV2Jkga5&f<R7K06"kVC'$2"Ju6HSlPG)=KZ3A?[Jd&H8W%BEePtra<!BBSpCULcXITJu2LXT+es&]t1eX'Z^&F2&U@?
%X`-hmqLe/BG8/NnNa.RMEJ"D)UR&1gCXMsE_KT#JreP]eC'nXu$Ct&U0J]+;FXRCoQZl$T_GLPN'TA\o.+&P9>ZYM$I\c9d;o.P)
%S1'n)kq:TmY+K)NaL@ZK[SFcW$-s<<B\F^RjLHb:Z(C.%6-WFPZIO`f[JD#?&)=XF8$D4gk=S?pj?Rm:_WgI?LFZ-&eJrO3:$KTU
%FM.\?&)!rM4?M(V44QJUeNH"E4Zh1W44X::nmMJu/iGfj?-eO\%m\C"J*5MTmfBB?naG0$mieX_naAS%r]Qdbg%"P2dRq%S*gCO$
%8[H8CF%PR8U6?NUB,2:V=eZUO;Wrd:VB'PBa"FI?@uD*0Y&p17M'Gj]=C'm>M:F;sQ<AcG`Ir"rKbiN8O$8rml9%D!iShJ$_e.Vc
%#4[`&9EQWi?fZlsV(b4PDtBf'k)'UPU6I&./f:p"9+jPcVs(A<d32@gH;6=0k\a>XJr.HTL\>+2;$cqW+UpCISsG"&Q5jP9U'#U6
%R3EjrVjRaT9<K%U@$VbZJ5P_?9"?9]"",I\iGJ\6N0(I&Yh7p#TbPO.:,<>q>ilOo06)UgM*3eLFH@9nPt%UY80'G?-m<4eSu!=7
%C6g*&iuP%c#0[DF4pEsB@5,faYVEp)qG3=oJP2jXRNhEbc9kCP;"R/gk>W+G"^)qre0>T>7c9?l\gsZ[,o4nsd^UO`J70'XG\O=X
%kX;i9<"jefJ&:NW,8+s"GZPeU[iLS2pP4mWV44>+"hG:,BM9"iGfONqJL-gUgVj!4,8/poQ;e^D2O,1K(u)m]n>%]?:6ZoZX`.A-
%eW/h9)9l4$ZW6PQ\LKeKU)gCo:O%3]R"l/cFS[QVe\u"p]!_*S?PLhX7)ZDZ&cIhTM(!]`;>)90lq'U/U`k't&V6B6M25e?,0HKF
%Phu?_fcuFIm#a^;UtHuNZ:>[AO"AEp=d2(T.!oK%p;iupO[Z8%1?40HB#t]t_9+1[=47n\@"3e4+VZ&>_&2GS6gbb1ZnU6Lg6Ptn
%)sKAbnqNfp>Kb)"[5A^3_4]kpK;T<n&If.AGbITOYd`hH4EU-s>t6?(op]\/=QESI)sTgqAmCZb$n*tj4'ESGd0UsDe?G?O3&_FR
%iNdL73',K/WemBGIZU'rP=J#KDW"Qa[N=h(E>amnTn8DbUKe0?XirV<V)[%GRV?.;-^n::ESh(2CZ%)f/.DcQ8p(J&^]?='U[/]$
%h7t[Tl99c]T$p@9mc$s._?&2X80NeaCMf$91aCESQH5q4`lV4+JWpC&U.?kpop]\/fHLc^cDPGH,f#'fQ#b/q6imgYG=Ip`;QUP>
%%'^P=Wh\d7GgE?9!hDA(S56*p\4DV=<Zr7GQ>eiE?)B4).O/J`0YIf]16c7Uj"ut8(9TI(Sjp)8bS=HpNV=o:DF=Sj]PlQDXej00
%0o*]"gf.PtL68'+9a!p9#j?S(%K[\P-h<uOjZD0\k%\uCK4_nXY&#Y$Lop/F?)9C/nU*?mfs[;bgW]-@2D_Z!-/:=5Ap;IPLLjp2
%,!s:Ye$Pt:);RqAn!dpp-YR*fd*/)SR6<hlH\,l'"O69>Ra]?>4[ClNJnF]Zc1GnBaW@k3ZU\j:TOs8=bT=0[4_cd"e7SEQc0S;s
%fqUGQm2sLm[J@"CQm!=R]MLcF.q4m_#mI^Kgb^3I9r\RN`cgEt):pSEk>ZLZ>:GU*S5t1c:`6g5jG!/\"rd;9?pe4(*8T_<"Hi:e
%clN8!!:!a4@\n$GR9V5#GFWC\k`dD@&(ImP)X+UCpn_/5go`%?SgJ1hAb"(m/OeNrBdom`NmgZ(7sNDEJ)WqYO9T<a*n@b6D3N<U
%ME,&sa?(G>0ngKG_ifZjkr7-<^mtpco-pShjuS&TWLHTL*HPq]R";a,.HdWhQ>)&5Wj6_(dW:k6i,Xg2hP[,=qS9lOjC,#&S2a3=
%\k&U%]]gn9BXm\21uYD`RPN`>WbGiJG7o="k!jDX/1d0ug^rkJe/^.14=qn(MU5Du^eM3N'#aZA2$l*s2TYPJUUd&HR425Fm^X"Y
%^_-rQFA3L)4"fQeT;nEu1t$H6M;[%)0Ch7H.0ho1OeFTCDc'%X(HA#1Ar?;W%(gIWs*sb!A]M)]`tJ:bs+0L_q_:d_1hojNRMWUU
%h$G(E7\d!\qb(^e'"&hLiV0ofei&0jo"pT!RhC#==HZ4X]"-t%psD8:kY0o;f&#V8_[boNi0<dY5,*3dgjC63S00\-4ub%k=E*mg
%>imhIjupUn:9cE-@-/dkk+:X>ME@(G;O<#%P\V,\7us&5jF1`C5Io\)ePGUW6EX,PGBWYCqu)`UI<P:Iqjh$kjF4;)h!^ljn'?u]
%q':gs,`2OHM>niXs!3I$,`2OHM>p4-I$2EtP/PsJP5,'a\=!V[Y;DAT>pU5KQb1Zm)&;upPT19;^c=I%R2Af7ePF[uWele*T/ti]
%<>'Zc&<6"L4BB!A`EM;'^dJ;c+OOmpCJBNj\SVL`%@d!_prP^=>qSNbehn6h?7c[rNIAbUNA[X?1+fPs!$]g(/+IB#-9gXAZj1h3
%/c`8[YaO\lroGX;8<i3;dKTc<ef8N@\1G+j@DuF+Bn!E&"@*WM`jHir:]VqSHk=k.#XrW0&[1O[CH\dG<aABE(X5a!Jk+gO_Tua;
%Tk=P*?L*`3<1rFDJ.6fH;<V88C>>,-UY\MQ^e`nQ=0tB6>nNpLecI$p0)'cMeBq)8eE1S(3%03\or\X\"Qo&$A0qL).-G1&:CdT+
%O>DQ,qjWqS.BXAHMr$t9+:3o.k"KOrK^KP2`aBPF6CZT)TnR>@'JN:0RVZr51dB\#EXPX`)-4[LaDrA[4>"<[6HDoABUg(3U4W.*
%KVs:R/WZ>b()$QSRJ@8ZH)H`A3ITg[[uFP=lZP-4AK+iJ?[\tu$GLO45t>h#MmW,dU=rA2s8:LM1T[,3aHPmdnZ1CJg=WCiAB*GQ
%'hH+a4M#+a[I,H>#]\&B<V&fV;\s1P:q@;(p:TL^Otr3M\6D"/nFR0HF>nqq@@#/ss5.(&<;^DOn3+BA]Q+4G2@,%7C>9!3L:$ZW
%7(TpI<9Ab-bX:/C/ET_#PJ&Z).VWk<*a4QW_.R.W@E710c;XG#8iPFahLo/M:MUWlh5Ge0(Q`+W`i/Q=]12E$neZW-m2jY:ZK@<D
%2f,1DRHA+7#U^Q!8(CCY6>sB$!Y]GY><6MT\Af/5ggj236+BueV]3*fTm:5&NGT'03pD+#)_rT\^kJ7]Znh?+<u=8dCJW<kf.d#B
%h6m_=RQJG:Kl+@[Wd_;k4B[C8!8M:hi9j6<VVN*c[P35J=u^Y/gX\Y$HQetPq00EBm"Qj7YRt^;gZ,=>hiLatDNCuAIjr=IgSWW'
%E:[[@=kVBHU[GnMRHBja<su04'sDai_JWXVgaq85;NU2EXeiPt^GD9TTO%/YoUtuY6^(e%hk.]l[&UYpQ3i'u)_$/%g(qM.lJD).
%10=\pfu:)_ohk7CI?7*/BJ$<3mgXE0.*Z&W)F[9E%'5aPMbR1_a9($0+#`XTo:qkl.RA[:Wj-!A/AbiQ.Wo'u5dH+dfm`IM[9R_-
%2FUAuTBq3[M9-%Rk4KYp+E3_OBlu<Q.a]a&WQLNsQhhDW,BMMU#K9L46,>F`!k#[U>Ruc37-_.J#c36n,%F:2>M`$SGF)dM/[b>K
%prP_@:%/ur>-s84&o\PT7/SNSh-s4Ik(;>WIIhSJ]!/:M8'R*<!q)2-dH9aG!gJ<=2t+@QKjGM'\_:j>ADD>6SD1"R%XK5a!0?#0
%i)s28W't*]_rtD`+;N:d"D9p<D%ub!Okc8[I8]uR+!a.=-)*$EEWHO.:cQKRV1FXU%HULs$OmX^7%@MdUt2=#O+gbe2]0NaBY\eb
%W09;=iJsA$#Xa`cM3O0;"J@Q(=\Aa_M^\*A!-Q#>S^foGUp6\>dM9PHbhe&+ADRDXc%$TZ]omA/oP%GH(H@E:P_7O7S*t#(_5:SS
%J!(3$L5!L4rJ;?2aJ+SU9N1o&>0O>0bXLiMmJ!HT#rJLR-nY*tTjrtC$6iBY-u:##>sG`00l$fd`Op6@qd^51^l>'^iE%H:.OKB]
%d\O-APZAuFjNckkIVmCtecJG'=ohBE+7+PDRVfm.P#B6Kc3]pZ+*KYNMNmT;BleRN(4la_-6A_)o0r,34V2l*8V@su('nHhq+6l6
%$4G[AKK8MPE"=#Ol3*("^c8<AYQI#@[>?Ph/'@sU*p<bnDJKk=42!YE6>Wm4XG.kF=aKG/ouZpj0X52t?%>%a/Tcs:[0so*+>SB4
%)XTorXB@,7eFnHgg*bYDET8Xl;?GfjW^-!hE42tj:j=Qs.MD&`"HY6;:oGrS-bUT0DLMe=Hj5&4A)PBVBOa5$>U)B/*Eu@(=T9eT
%jSB5\\-@S5oWSj5S$KO>T?U:`oJjru[g-4V19"Y?@WjEsW'd*@HMtSAIcq\%>tmnH>g(D`*'<so_!d`$KZ_BQdj0Q_Q4`+$XW?E?
%m=*U`BHK4>I<s7I2LEi0R<8&]G:aU)&MneZCp7..BeKUg6X3gNlHC;l5M6K@BM;A%>2*)%3<l!6K]4jkp/pr4O!PsNhfu)Xd_s_D
%c'+@V7scEM=)TW8AR5WOVcVi%FlnD*e"Vf*D9J5d0e#t9F'FXtPO9g1_&(\0.g8$h(AX)KaFra,D5ERrhc!'SgQkY"1[@pp5\A3M
%4m@F&)ZhNaGOU<1Mu8AG_d&R8\!6uioL]M'/IY0/*n"TcmPgT,li\\`V@aEo)e2APW`2m0D@p;3EX<jClrJ)[1$T))R9+j8qpB<&
%1i/-L\:q[cUaZT$X1'2oW@K@?YhPc51:_L^3)j6DnZM]85/>>I=C'qs(BTDhK^<gkEJf$A6Xn]Z)=)QuGMj;+gW"6[r&6^erDM]L
%'8d;eef7agdLs/_B+]#R1U1-'@MH9AUCPhf"l:SQnN(B5lG+\6[#jt^Yq@51$n@F*[kOk%M_GHB%?jjb'G/D#ghmhP-bYRa5p?@V
%?>V4`V0>7g+e;'3.0Wlu=q)cr%-A/Q$F[)1`d-#1BID_9;:0,8B(OdmJ&^JLkY'6D9u]f4;:u>=-a4%k'-@oQf`ssm2R088b6J&$
%/We6Y:+>'BJQ-,r>JO>)$=NK)gjdcMA1,le\m9nerCXtM_AlHm*-:Gk_^3m7*nt_7I2`Jt4@gd1$P.P*m/eus.SB)B\\J<"5WYrb
%;sHnb5Bc-,bI7=[==]KAD<o,;o:qjAdN:cS[N8C5P;.ehKmNtdoLa3@$PLuAoOXP=dfd$(CuSajP?guf@hYVl'a<.l^),iW\\<G&
%$.DO;K]j3?eMo[IB>&-j-d@]q6H0r`1$SfG.*Y<Dh(-M>$3TUSDeopVq<Je<S7/N"g:g,hME_ksI?3TYPfQ6_jLJTGLOXR!N"mS?
%B:mVo&<a<2KGFGO)K,eY()(Xdqp;%VNfli#TJO1pr_`l[2r"JV8>DFAG2n&V:93]C4-?+=+DNk";=B-#5U`=ndfQ1]EDE4V!)jKh
%L]PHYP^$IJi4VJ8C%Wf9W-trR'!3A7N+k^FnFeNoPjC!sU#ABD\EU\2Dk&Q1<'o'<VSGdjP9&S+^&ZdoIa*G6"`4#mY!ksu4m%8J
%D(Ph:d8g7rB!R'?#MYjpb/4S3oX5#`_PSL$8u>'l--u/7>E]]%;aWg,"Cfekj5Qm/_&aGCj!W(;/,Z4hdd@QY/p.>KQ%Z^q5abb8
%ejT[U;%"Xd2@#7gTBlS(O!r(#/,lAi\aUlpqMKc2QlD`3hPL:VcNTBl'``;Qqd]pSU/_e;YSaT:gg#q:j_PO-??'UTDKX@b'oZaC
%S&8+jK,kLa:C]XV)\U66/*<q<XVe8^)=?McMQ4XGZ21gMd:T(l8%fuPEdgKnHq(oa@g(")Ic]rYTe?>9r<F8%#Rm]a`:Wr:R#`9h
%',_Je>1TW2A:1d68GlGq<bF'hA&jSOm92GHl(j!9615BQ1d?)9QEGP>GC!5_g>4`/+a6'5>-h3gaFu1J,^8&O_a]^HILn0,p)Dg`
%G!cgMdd3(3@q-Yij!cE]/IX$PP"#1PGLC?%4<<Dr3d%4od9]BAeQ\9t"=r]0j4HZKf%02]4!>53.:0%Y4bSKD,`#Oge;`ld]0W%e
%4GYRJdd=m_37>5NMh"Be6")$a[2BQIZit1;`>43'jsU$K7acNBr24-oJ_)bGgKJD=A<MKLa6OKR(8EB(?>T!fWZUU3,YNca[JR*(
%9?uUB-?EtVFpNaf$-d8@`dQ1U#toH;5ArDDfa#1P#=E:1>?'Ap_eBamDD!(%.2cLdKb;h5PkMUe)*]U"ZjVPXe:IP0>;;r'3"AL7
%>&AUWPp^\%]P`G@K.rq/,^f*2hWoWr)gpi177=!7Z7V%+VF^.+/L1gKCm=-@D,IR/:Q8jFm(lOHc%!&%h(M43E%i_GodfMV6p[jc
%=[jq4,=E;U*a<\9D.B;X5uF`4)i6Z$:E>kiC*kPZ>[><lK-Tk(S*_c'9lB)gPSP)I?q6n#.X"7hg"u[fMBD3eO'bPQC0H='I;'$r
%>mTc$gD>F:=GjPR][#VtYVpA%mRP5lp-B@j%A8TWNTgNGnI<I$gPU:GJVTFD(G*l5.i:b]1$qG6IFS.-(EcC;;6!=of:1bp+,u8r
%FbY8IclR)49j3Eg,2,pQnNlc1S^8n.=p1_277@ahmaE=REL%LC,gTUYC@#/-MbZH#J[F0(GuX]T+%3r9!3+Z8l5R#&OD;TZ&NYWE
%.9kF0"5FX;VTf97]oR>fj0=7S26OLJ=iUZn=\bI77)okVDEiC3\P>E%<CT#`I^0VjiU93sg2%aRgoEeGS8AX%mm*h^jDFQ?35u8r
%Xda*dMBD3f_:V/SAaPJ;q:1SP!DY*48I'&`@ET@$!oAcGoB(\#ifAdth]qik"G)^qf@mi\WsV<h[qG.Vg`L%,/_cb%nYd6qLg&V\
%oK9+$kZDW]#=bGdJBkH`^0;ka(t+l%HMD@i&Ku\!e]7?sR9QU'T]T_3KAIu&5Thj+VcCKGW&FC2Pd">Ep#oH\N+X[nI_C'i<6Krm
%ECIX4oKLq1JsZj(q\fQ:TQoM<?Xo`EqPB1*712PBL,cGPZQX9eqd9Z)`W.p6c+4t1CF$(TGn"R^"&>jV+E]<=+[D?96)GD/EDl[A
%#8D3"#h5ra$KS:tV]j\JR-,cpDcYqn9Lrp[5Ya?^CjdYp[=CrOIFEdHkS]i>^);9:&sPCOj3-#)5N5),('/^/qd^5!mohEB`P9qm
%`)L]-ngjL5[WsqQojL6FJDs&fW40J!W;"CTE3;ocfiIT<bo?gQ3_)*)C#4e</I'JQhK,)u[$k?^H6;L)<#ED?GZiT]=:)V`*@'>4
%6%P.u@U,f5&5K?(1u$/t<;WpCk@a/)BC*f'`kIre=(^gB29\LIH"&6-:X[4ajq<uYi,R^e,^%_+R#`<eOr4fF^egbLA6p[IC7h#s
%gV[@"30X\9lUI23!uY90qW_>AU^,E\?)*,%\C7V)qBZpV;A1*DKQYgLpe-Tg%OkT;7[MoOC7?^jfBpECV#/PWaH[I?)7:nOp2C7Q
%:?L*6Q,+=CF$FqR2mT>LlI+%M"]!n;I^C&I@+7-7dBFh3^uhBPWuJH8_(e]a>3!Vcm<PliVTK7:]$^Ie2oLGL3I"TB7\3WlXK1]g
%_</Zq^P9k\]%&cs9t4@7*Z[35m"=RN4!Ar=BRjeSf48Bb()J>!CTn)3b!P#QfBOs1,@eA_S7C??c(j\S]-10Pes84Ckch/tJZPta
%@WgGJ&Ek.s.W'<I;Ph'Wn$AJVNUB<K+T[LRG-tE\9^+mkMNEm2&RhMu2kJ6q[OEPs13I"'hTFar'L1:R:)I.JNb^Na8hQ<aFXn80
%1-J"]eh,l/3T4iB#b9ULbbOGNHQcEf[$HRW9liY:q+[ei^!2;kF.'tKgP-OQ`s49t2X*O!hs=J>$P>'@MbOaTaBDZAKB.kY:dR7r
%PBV&#C&o.9)nii/.&e]cG%4oDBn#?_A66mZ-&=F]-guir4%`0;/+b!:UQ7+;UpYG7"X<jJh/5X98&\9tJa9!Y>g;C4eD[1,`bqU4
%O[kW:@EZga8+7C5-*ZdV`I?>6BFeYOhL\^bdEXfXEqtU(%V<2$m!XDf2+JShN[S41m5@=,RNLo"6.uIAENKHJID?.,++uKdJilA3
%KIH`B>#/o?C)>4:7Iu_6i/qfJ3&TA[kZQ<6cXDOC7)c+]HQ2T@U+F&%g:/^>8%jt,JY*4uYIK?in:Ue@h<dTs=lEH7%!=B@:prAg
%+q@5;CqZm$2ZZ\N$@[h_:s4,%q9oF*Y7mC[Y\elAD?46Kf#L5JUKrraD???*2$?6i$<^lC_Jl1T#4:GX@9X0E[1gV.)]U6MO*1Ss
%%0`5U(&JX5cpDG_Ia*P]\&cYhZ#@gW_spH?XP\3EUZRU@=l1J!"nP"lB@S@_$l-;]*D;.<_A4T*<kq!]Xh3a'@N.b6-(B!Xqp;Uf
%NYVYW5b"H!#C(i6n@MZOQNJ3E*rn3_ee=p8>UM5ulQPbnp;mdeCDa>=3,$M`^Kq(Z-6s)(au@#^/H]dc<m=Z!SL?*J3i%tr#CBkF
%TP6a;p$1:q>^]WeG?C,KHE7H1[jV/A8jNKSBg$eb[6E:A9Uc;Cj,/6JK"j+9LAd#-kmjUF5gSGKntT`a8jI-U+"+`4p-=nnM?l#?
%-%MXE8]eBN!!E=c3,;Z6Mol*Z!_,O9l)s[#egGF,$,!XN2]]rY+g'd3(B4YtZbR9=Aqm&RLLANpC]cY3IBrfB2H"eQ=56G%`",3r
%:6B-Q-91Olo@ml4@Y+qUS*^SR]asg%WVES!>oN<;%g"!)(tMadXU"\KU83;O>SZ$b-k`qdd$*<6HQ_i46"h,erj23f]-*6YXiR-c
%kSL,V=J<2:Zf94I-Zu3YA&6F9^mEB_QZidaOlHQcl3/`*DHGaEci@d`Fe*WX<(>4GO<-r,C,+Brje2@oNudr2C8JEC-AQDOh:SqN
%!/<2N:/=._$6N]Mh)O>\4:18r!P;;.cimUal=a8!5SgC7Ch*DFiKmhdfF;P(b!bPImj31`p1@>5hl:91'gL@V\H$>p9t%U:MT%Mp
%ZjOk?`*\VS1SCMnX>s:CZA<;d@1s_>5M?Dp?N`^KQE)`L[ldf*o;\!\X0C3-OZ(lGScd)=nNuBI.<8>aA07TWBF.;amcPl>i]."`
%KP8qK6R>ee3GGs5^bI08h!12&IT$)S*u%slP>jI8]F&21bp#i]fbE"J.&8L>/ZniAGTjLI+HkX)AfhaPfa#%o1Mt!%O_kL=WGB@/
%4)^o;V.[kClaB[JaQ#A#P=kgLo:qk<K5f#Rq1e7@MIe*(p"cK3LLZ"-[b3VWHUnfifQe,?H6;MS?^4nT[^'.7KsR&7Zh"24dL[`g
%D;7U3=(t?455@e?PC8N2IW4f"VIZ.t.eb@UCfgs7/gc:Fef,AC+=`1lSCoHMp8Ib)G(BITLP:8,7H*J\-_?G(8`?`_:+?!4J5/H[
%lWQ.['Ia\@>M!0@;=-`+,Wgl"C-e__;4:Zi]K/]=Mj.PiGgZ+5CFI,T@\YsFT_6Fh45*)%lA\@sj/*75W"EO(,#Fc%1e)gWn:2\c
%Ya/aCde[AK4mr4^O]GtTpK]LcMKrd^,u63Q!,:fnXPa\kT]ieN=,qU!liC)B;)i="MQmb)%r'J=/4qE93SrMrh(&7d>DZXfT_qCM
%K09c$an,j./Z1EeJXti=DE4Nq]2sQ^2;9'Ba=%rY^bljj*qVYL"+d7!KVHk+JRD+j[/<ND9SI@530h$3gk06nD5(&M(al^%G(=Kn
%GlWX)[iQ@+L.5u^&@8hm!?"k*_f<X"46q;#AF83K#H^e15DKP3Zg@g)o4t%0<3KRMG!VV^CY.Jr.S(EB!a':]33%D4r>n89!^Yj=
%WfMbV$`!=Edn20BIp9\]k-j&/N-0]P[P46DIOnb#]AY)SIChkS0L;"a]1q9ER2;AGbG5bbCk=4ojE,s)==4BF//K,1%ioBJBr`ZT
%/'p%'qZG5d_Dt_a:J,oKOg1eYosWZ`/L:[^96a;0AF#)1M(=9C0ekMR(VrI":fEq9]1/9OgDAS$m:h\I5;9$jX'F1=fmX1$"B`fV
%$;KXT32@]gGW_h%HNBGHV=j^e(<dO*Ra!ES]ashP^^+o]bHrUH"7I)'60#1;8na3C5)n5.%CDBC1iC`oh?SCXBtk!+-'s.G4UJ>4
%7j]O%UD-;]"I;'%olSc(c(cC<fckCbqd^4J>")sN_0iW?&M=k`a7nZr7q+_/nh!43_FPfJ[jc8qqIK1"Iqlbk0:?,dm$5cmO;9.V
%VmHG+")X?/D7sG5Cr)e#r,U<a?k:c,X'?jlD#6IC=;oVVe(Ou)R!>t62:ehdD1^-a9mTY5A-ZX2Ma3R@bXYSPU/>,$CLALoF&dd\
%<TCNd+E:WtK\F:^;Z!`Wk%>[WB,o)V`j)&.:u8o&Z#WW2":\jMGEMaYf:9HB[s[g-Q6o9LW?ZaNY*,YKZ:^-ZbAD6eeXsr2)n+b&
%Nng[&*)!U3X-;\$0$rs"Xl,EE,A^PR`W81/??p#/9)Rd.M(m(QH]b=n'sLnJSFC`K+74XoPuW!D.k?Wk%"1@.@`s)%*0@!m<nY-J
%R=gQeiYhZ9Vtn_8^s*sH@<7DtEXqphAW-43OJQU$-4@BD1=jk*N"UK2CuU*,-i9PjEZX#?-2Oop&F^Z+``O8>P^;;^/OCmKXY#7X
%%WU>Imn]CEm"BqjK@%MZV0(bQ(P39_`k%H34&4g%$"fGn<E4:+[Y+(BpX(TAjOiiB)XhGLFl&J,)I(f/l5WsoaY6r-jY)gVeUa!u
%D<o,;o:qjADP7^5/),AHEHW)VfXsNfHM(j4bU*^.WIYbYZ*&KK)oYTr_3iCkPg/61*`brN1N8R?f(J,,<js="Ctc>6YnFhW@kP:N
%D.>P>I^Bc-;uMbs<r_G$5T&XpU'.hd[2%3A*?W-h2-[P'hor\A-We!2hCJSp*TDMoQ6dh4it8"(0mG&[9itRM5GiN<N6YO\_M[GG
%I+o;kCG5TU[1=:AlmO?r$9I!&Oc'56+a)1Q6jr8Q`rFtG_<Slue5-f0CIp<0]asf:0o(?Z$YLqTdAGC&;A%n>!bgk>2?I]J;(@U.
%hP:Ca:Nf!t<<T1"*BN53"[\ipKebJ)h1//3GO*4'7[cpX)qG]_WI;&S*"O5YV867XEY_X>f=2SFOnk@H^22<gNj]#*2No/g51oiK
%;.EW,WMPH;7XR(h=ZP4b`N)*%Be!uQRKBNT"2$N2(FQm,p;$GB5OiDo_(6mp#&m+SW@OdF,SXMb*6l=@!+JGAE5A^%k.jj_P<FGd
%&OiI+7C*\(C_]fG0!Aq(#-AK4DG2K6_c-Z>H%iSpe3;OdLeh#!)D%V`&muNO;)qh`W`O^S@UC"H;6XlWA!:a>8$rkN5i>ih@H`FK
%1.h[G>%:bK>raZ`b5i;WMs+mm(BRa/"hG`IIOo=3qr:i-<sKKY7@.^OA]>R^88A\#.5N16S=$Y&),<"FYU[((dBnQs[1=9llm^CC
%M([CqId!U!)nTYhEl]%G_=cG^CTD%rb@(bgmEq`!egF\jEQK`XZEAu,YtP]]VQ\-V:18&<;]LJRP9jt5[l@7KA?EA?IB3O4rS&*p
%N+"^h&2#9!Jd!c`'X9_GPN-PoT6*BSKV;G`j.uFk*_<XFck9phAhZRg&EtmM/Y&U+3kT$'jtL"BrE<U-^#ksZ51TfAmNn>0^nh[M
%EOGCk91'W)15SPm6I(Zs=lWfO8,u'0)tueiP<BHX(^40Q[0m+XGXEBj?"5"]&/Dul<-i_&!,[u&;-O6bC*2bl0j&djd'D:^OG`&:
%Ufj]A<G4CQg2.:BQFdnHRV`BOZp*/j6,l<Y_,`j\>"V_Yoo;oNg]L`WcrWI?$&JpSP8,i7WI;&S6;^ui/Z;\-p5ii;[j+cTD`OUl
%(&Rr4j]X?OZ`RZfqQ[9eB/%MA0ZuN^Z^a?ZhS'f7EmHBA%@QfAecF/TIJuFKjeE'eoYprX/WC;=MW4uPf+HG4f2j(bLofVFJlp8A
%:_ghYgW-SCPtcYQr6Wts\gmWT*Ykt]^#%\g4AX\_RBdLGmnVS9;T*Gf-TZM*LDZ9Mfq._oMBD3e@5uLA$+m6=XV]tr'#0/Y@m%s(
%#YFCV0\=F:Re$l:\l8N;+1+ML>*K@$dg%Unao0po#_NX>9qKuhY,cSbZo6s:mdr]s"c6:o*^#iK'jPAc)qeSXd(sioE02Sm.m25m
%T+6K\!Dn!/TBq5k6PeomMt42o4U@ju,RNg2mgghLOsa])<c__$)+hbXUU367I^BV0#u`&U5\B&ZDn/X^fG3H1)]_;c=Gu2&OgYba
%Uj0Z'qe-d*18^?=VW]lR4H#.(&*s^A)q%-pO>D(W_->5X0O)Fq[cjO_a\HLq/*Uj@c,Kd`<.t\1[KY!U0!`LZD=oDSa^f&^e",Jg
%q]H59/CsR$p.!(B$XnZ^(>"7ldm>#n2]i1Nlje#nH1SjLn_`[=pFDpg,m`WQ!7fg[G,pL(b?!u=$.$]FPKWZQ=$4Ye"3X_X26`-V
%+$(fA`lu5G6)V\8c6Ml"ONnd$,"7"e0^C^J(nl'[FX#LT9_V&j:\K<HCLU3m:")opmN3ld=UFC'Y6o$j=G*]VD'hJti7PPk=\a:8
%liD[g7&GBlJL[&#ETF;X0K'jEV2Z3\Gt(1hS058n&3-\<YQIe`P8S@S?16E'&qKhk"u`</:M.G:[]!&L@r2b_C[hi][1@FG+V0B:
%dV>gJ`bd0#+kSP@Je9,'hlHlJRFp&)Fe!P;f_UPB@n!.nR&1%b(j5c9B"fW8O#WOFj7E=$EC*_7BKYO-Z3MTD-,HO6ZdhNY<QZfN
%/Q/KK2!X\,BE1DM!*=)c_bold4lBS78@5L$SshYDL3/Gl8eY(S5b]uGMqm=HK##rPIQ?\AYQn'74;r3Q=o2SQ6AKZACtf0uDcR0I
%SIUb57:Oha/)sLoa24_B&]taW7$eY/2grZeN_Iq3]1-.g=BPo!`l=HF>G3SKm!"%LMt88Yk^DYc@o&N8.Hn(=XR&o;R3<RQD*;F-
%;AEJL2lfa`%3?7:"Gu7Uc#V80?k<#:]HHEY4lhUi_i(a4eS1/o/K)`h?UMU:kU$kKL[:ei-ek8gT@gI(#]N2U/Z^-)$tV\`5QK*(
%jf,4%iRfG1[&kcr;Ysu0GXeG?>LrJ1*D9>L3JY"5#pTPXgldWsE!n*)[J5K?h?SBM,a@I-E+pJ$WB19C:7o]X"k"C=EPSRidtQ3X
%$:J`=SCBaU!HP@MGa[.h8-6=Hc:i5;J<ZVAb:uA#%^8")5g^>0GLZIso6mH0"IF,IF/@e/0`(!M%@#'+MW9t=GZYFiL\eD7SCBaU
%!@063Ct[Ad&/u5QONp]T;F2mhKeKXeg.)r+%P?M4#JEq,J9,jBbI%Dib[@Lhk,>.2A\AQ_>0EOX>BhSo(i%72;<u9>S"JXjTA_?i
%(s[./7X=l;i/3cK`6gMg]XV.Xn2U8FOd9Z<_6-'V+$5trFeq[s#uVJN&/-rK<504j=*q\WNmsYrI,4#;I7BVVLhklbR897n\i`Ve
%;>HEWXf]Y:IN@tTVHg9Q`A,;gPH+,d3[8#*6&8mk=+qlCMP'5;f5^]iDlXWcUp4Gt-(/Q87RA/M,Sn>%)oZimXUQPDh72.!H6;MT
%SAkI>a+._=L$8X^6m\Jk/B&&I%OK!j)E/#k*0_goL-XR/I^Baiq/=<0FX=3`+OoU&Ve]C5+im"oq-X)4Xf&R:.T"fjpR7`@"J:A9
%25AliNJ*n`A9JD4Scp"H_?&t>d//ViF,6UB[(b#dBGYo%ED=9Q+GO!;bqIkTbPXIo?q]AcFYm%t]e'g$V,+PV<H<LKn::6JaYJmP
%Bem<O(!.'j\N\+:]5<$mWF8_1<JrJU+70-rDBs5H0s)T13Zc7ng=;(hN?`\:1pCCm%APW!Fp(%_i&GG"ZkN5A#9MLP_[9o\GRRGm
%=2/?6i-QW8?t8)[4m/%PG(r6;C&XTmhL6c67JO7s9l!n5h2G$X2#4ck/@n5G(/SrpXZ+H2$5nQ&)k$:`m6_,TYaZ!J"=t"!3PZ;F
%UPO'#KHKBmXT2=hU,.O=*c6^@rHd!UWI;&S8E<39MN[@j[^leo9umfJ<G?cU>6ZKMXdZBM'N"jG`'Yoc&,*fkC=C+slNt$6X$`8D
%Z"ru6'p3D&on=rHJmQoP_`hg`ZMBnH&WK7iXr!b&&M*3L(f-KR`Jh<9,M+?3V@pEX\].50K0<%B[3?;ZCC)+E9i<oe/c\0K-Os]g
%GG;B8U7g)a9tDj'ZLnN?@Y-tL,Yc>TE_%]9UfSB@?4I#M9:?`U\f:cTX0W8nW:e:+,K32nBO=%V]b"ickr<RLrKuLGU<[\H*@_+?
%Ao4t0*;)MJ"/Y"d()Ud+@m(+S`9X'rB'Y"s),jpZL).g`WsaW_(?0Vfqd^3_SiVZnK*?=J$(B9sZ<%l=C\/!uE3'=LM-5Do%!oM4
%qlt,)HUP+a<pgQ1=][<Zk"eno>[FTm%,h2joZGlW"Tc*X!^b(VeNTs\kX\':-&#9ZAQU)aj,XpnL>l5F$[5oDbFg//7>%cWL&,?.
%KAIu&TEndr')X[Oi!Gd+1jUZE;d<=9)/<G1fR1,,(qSSm:26EfJA?sk6;)[@bXC6J`bP,aR7uDOQ8+-e=riI0"bta\39bjq#=8rH
%JkIUePEUMi7/m$?$*lhaN$r*b5(Z.Yim;(!$qI]9G!PUI9m@NlcPdIB.'6ZgRaOlW'lgli5n(l/@\P!m@#O&Bm=QE%<2G,#%S1n,
%+94k2FOi%4YlsQ7"\-jB;4944P(M(5Rdm3JaWA7A<Iib>%cFgVDZ"d[.un7mD4iC<c<&<b]RdNN`1ke*LSNQN42;/7"MQ^mZ-3SQ
%,lSb1=O)bQM8Xm^Q9&2A,\eKo-`mofT9#BA0#J$,ao]-^nt4^k"u?RHUX\bAjUQB[!^rf;GTPCa/B%?%a7:+gnkO0UEm+N5(Di=A
%h/uM-/S/5\?>5%bTOko\8GRr9kFL<k5BISIX,'g)SU)!i>"-#D+D3ec>jEk8Rn4tOFK]7]LlUl3Mfbh8?.D,\@:i#$=.1T[eCIp@
%3,+W!i>U9qE,,"Pl!F<\hSED;KrIR`b!G?Wc$-Oo\H,14YtaC\-]+l[qbrQupDWGahtJb?Cmf`"XUhktj0jtYXo*fc5IY$oE6To4
%D#iudl!EaC^_[WYiq5t7g5Xr:HQ\L@2ANdUS93L6FfQ4ZENK3B\:sA$mK7m1Xa'gp<i5hkpV@mVR:N5Cj(6mn<'*p+#_f=UG%N,O
%Yb6?Nf8l$,;T&3kMFe>)TBq+o:6^>kT@%6O?Fkg.eZZ'g<9P)1^:H2WK4j$*dLiKibJ7!BK,rlS+lV_ed_W%u_6K[;-#n'U9`jmK
%#iDZlG2Y]/W6*H!8Io!sCd/CRD2`UEZg@f>dh<'iHPMMg9WiK@dFPp_Z/4sM(2Y-QWdV2OSohFF4*Or?m1D@i9&U]>UPR\g$JhaG
%Mg@$uYAJ*3[P46Drlkpds8(INXoqQ*9H\"QQY&F6[LLYfU0FFu#m>C7;?[EK:/A5XDj)hh+$([h+H;:f`Lp8P2%We!i@N>M.G:^W
%(*C;_Y?R]s7'"=#ISflOlNs3j5eW:Xj.;?1?i%qDFH&0f"R8?YB=\lSo)l(/7*8NsPO3QJ8e>Z=$/dEL;gE2]H"F_#e@cu$hi_PZ
%FI^MWX_)Xt;=B-#0Yg)H#h3`#*GE29%F+;LSL4W^Md#];`u^]J7&t<k*qVYK"0Ds2"9QhKbruF8*G6na:noi_7A)XY#<B,>'s/fe
%"HIf#m"%j2#XQA.jmF./Fc!.a[n'*K2`BU%"Z2Mb'!,i)811602F$]/#6+8gGWHW90%/1;9n>VDq>j6%?9C)ifIC:ZkR:44+7+Oc
%N3*Z@?;JVemR:<c]q/+VJSFdmXB,Gb7'!;VoUtp"%`e]%!C>b'+E.hZkH0CpYS6')Wo2=:L`6no`Gn2NC(%pNmDm)?^Dh'fRLnGG
%-a7FZF5S*3]J+NPQK5K@dan3&@p*fXrW!!3>+?^W^?/_n5'3U*VkB>RBIU.7Zo.Gu2\k:GSK>iT=3/W:Es7;QGnoUZ0Y\V#51ft:
%ne_CP=f'CgD'_bCXW9giH$R1=>pD4F7Be%6pF5=uEO&8CoKLq1;(s6aV*(1L5'[\oH/PdcJC4Qk<fdNf+$6`V[6W,E9mTY5A-X5M
%9@0L\YL-;`[A)/bZk]DC%L'@a)OQd,R"YP`5W#W4i2H=bk%A3U/%1\\-'%YU-p1%q/8QLu!FA%7(hY!9-uaUOd((r>e3;Lcj!<_6
%ZjaAP,[Ws.U9e]e.IfZi@sHa1DadO%Rpf#-[81s2#-B)B@7Bb;FF^-c6^jI.(_\@V28Ecqe^hME>6Th+>6Bq4TBq+o`(4j8f.KlL
%+>]fR`O-3dbcU(a]3n"A_c?f4ai;+nmt3b7)t.g(/u,P#;2'(!MpO!:bf-^W/dgeh&e3]n#IPW]F++=oHj6XaA$F*)f&Z4FE@LXp
%5`,D\Sl0OdoQ;Lp`isj[E0ZYir@[cH^)Nhja/1?qXd6Ut3_M8mbV`M9ANo#5N'`'gLjrD$d']8^74hN&Z%e63\.kH38^SG.J[8mu
%KljKJ.^6KRlIWW2f5L:FfE8Ce,(-K>=i=3(!iM-eQM"3[!f9-5kaIJk>"DD@>JX#mC7jjC7'"=@O2^B<")B>UX1)brL/Y,A\JfmD
%N&3E4(#<u,p;me`A@-1pR*#]B&HOI'Xj1r(a7ShacZS8IGJXVi^081l8aD#r+,>q1>c]eb%VJ($RP;)uN>eX<GS`8>V(JNu^j=0k
%>+1G/PMQOk@/Q!#1=fY+MH;7+`(A?[=4C8B30+?7X-MM%*>J]#Xg-P!39kpt#DA*oqQDK:'sLStIB+p$Gm18`@6#X-X#V:=jaO<p
%YDAI-g*\r^+fOI3D*;"JQLLE-V:F6C;!A`L]#MJ4246l=@EXtnI8]rM#6_d#JWR9X80B^HO>O)EXe;d9)4j8hf4mTU%H@N<m[D,#
%*VKEVNbQ7kmcm((U+eF+f?+q?'^7RcYLgpQgi7qp)T,21E0Z]V$!C?la%>YcLEq5hk^(*B,G+>!iZ$We$^U&q3`5\)J8;2tBqhF,
%XHS\?V"Mj\HT^s,#.7pj@m)!<9R)M'k2S%,#fkY_X=12l/P`fZ<p%k&m:..j`b]K"K3G!^#fK_WX=),n/@PXB5r,%R:M1s%!mQR'
%XUrNEmuonrBGE3LWqstbKe@&f@9?aP7VhqVN;=H)CS\)NX7fqNded,W+OHHDR"7Sh.ugU#-a"B9T_1`Al4f_BCoO"$(d`aTX/,fg
%oKLq1OgV0F6JL2t`cA982!2Bh5[ZT$TMTrJg)<LI:W."k^esK/*A@[JEWcMt(>B$k;.)E-E/R[MB[et/q&]5/"Kl@+!XGi'2I@R`
%+_\)[&>PQ><8C/$$\HS-##1epQkaWE&ZmB17s7f-A-_#t&dW5lX+JNM/8NWQOYT,D+gn?&miV=,7^1T_CY6%D/5Z0anL@Nu4GYK9
%HDp1aGC'XS6s,L,S]B`Kji"?1NTsAj5lbRl-9\;UkU8eoMh".0b.aTMH5'IA<XCFsN)EVP#-,nTY1KVh$Is_nQW&o:T56Y=SJ>/I
%/.2mQ,^Ag_0!@c;QHpo1/2=7s8n<#l!\N)Y#IR?NJ<+E=b-3')RXjdYe*m//>GbIWee>M:'ahLY"G$=`^N*6L?jC3C`=9q#Xt9m3
%VGOTW):g"n&Rn#MR]6O'Tn&*[c^mjU;#=W*<(EH\E+/4d#jB,618I['MGPeP+9PR50KFW!Ta%K4H4>gsh?SD#'GQWE9\EIR<qj8s
%*E&NP)?S_V7@J[`=Y+g)=8Z3<BfPC+Z3Lr$UStK"BU..niu@M$OOc&:GS:QhktAAuO*.E*K''HMT(G5!"(UW)M(;Z+``U[&#_Q1$
%&Ljor#Hlii5SgR5"<(Q#l)s^$k0m/Db._IQ,<%`\F&Z*'MSdM4b8T\,_bu&Yc,/*CC-NKfr/=VNN)Y)38<li<akQQ!;XPu`'%uH*
%(MVF,q"siO%j%]J!fe:o>4(0QWS?K@/R+q)-=e7WC>E4[MJ$q,+`5b4rTU*2LT\lQOOJ`a_6hon1LN6dieT)^X(a^q[tsegiG,c`
%Z<7H,LNJ][hroKo#;Wh^ZU6<Y)ZjEF;ZbOST'0pe?V&a_-"SlJo0_59>d5b+]he?P-XCRVellEjTG@['#R,!LA"XV6KljG.4\%8]
%DsY`)CpG4'<;U&.UrF>[&$F'dSuI"sU(",K/H[m"qLNIbageU\2WOjA9+,)dWI:uQ$HY?E[@3=*NH7?59Zb(bb90qQKWN^=8>p3B
%X5E,gYk8m#]qeh+h+GjIAk<7/X-Jub-loKjX^TmD%\cS]R^RI[PMR[6+D)p8*NRbK<iZ\6>8UK@$Iu,8`3*WdF_e(b_Cq`gP9"T6
%51p%J80QT"EG^EpeBBX4#1e(oNLHd7Mm0U$$d@Ug!2R/)o?1#"K0>;g<jpOVb1[*$a5_qoYU8*0EHW/0enEI1ng6>lj1K7[j&,4$
%m$RJsOX_MM(g?V#N.jcI,mnA?$M%e;!?!t<9$I^(AsTG$ADIU`T(G3g8@#-%XVVgXN*IELX-Cn-gQ]!%4^_rH<dQ`LK[pNAbpuoX
%V"_\Hn.!0"@-Dp7)uGR1@<#^=;l<0qA6t33\\+SV,$'&g5,s%:rAj]\6G&3W7qg_q.\jdM"dB)l1+h?bj?8[_'X+r&"\rg)li;=s
%,7(F;TfSL:cu]b5OV2RBBNf/V&HDkT"frKRE74Vk%tk(3'1&<-Z'Dn!FQqAY"d[*N^E"],C*?f/=:rJd"663NaUZ+p.QB8g&Wd-b
%7i\\k)?D9K`M$drfGs+g:X!RMWXi8TCqd*[M't3`E30hE,0O,'Ro5;;&YMtPD8X83TRbRrS`-C<aUTEsWIW@(2M'KdXbV"YC69-]
%3@oQ'rRO/ao0r^qkpARWIBj*JWtU/h'd1XDiXkCRVGQ+\,P%_+"fKK^,4VZb$V.<@$^eXuZq;!X]Z.ojhe=d)aPbGW#M8X:$=ft\
%6'`\FohO%>8lJQ"?WY>s]al,rlm\(%+NkC`#@(9A)7<5H8Dt@-bKqgtL[<EG6F-t/C7jjCJ=fGqASffrXqF)K//5fo#Im*2Q*I9h
%J=Yh<Qln5eQcbNG#<SS:Sg&tAHX%&:]Zb8lY$KLs5bqTgZqOY%=u:mp@Anm"SFf"u"$,u[/PBFlE")U;H&cZp.s,7AJ@%0A:?,oq
%JC(qu^e*jEm;F,q<FAt]#k3CMEau:h8r#kb/!'jNem^K^)G*0sK\Epql$]iB";qkV-5uskb8O7uRGup*S,hu5j-:@HBp#h:L;rnD
%J("4)%lfd_&o\`4".=D5i5fF=aE1&q9!kHPLO84"+:bfj6RT8PG!N2-W<b,G?Od@SqX881Ce?jF^c6RdmFt*,=a<ShW!.43oKLq1
%&NBQ<0(XtUl]"23&LmY*_R;_E0VldGMWOpN;C`HhLsD4@O+fVZUK0RR<o,QGjV2e,p:^58WL-8;G99Z;BW\o,pmXZ4+SaZPYH]W#
%4DI<0X?gHm2e'Xm7"0@nY3&_geg6K(P+4D3pWD2]@i>oVZ&p@Te37to(0W+)"YPuSg2[/p23`%0;KBc#5>5rqB2$ZT$!W=RU:sM%
%A-W7#dl,!YBCsR3.ja(fYQ?VodOh8,X_)>S9&j*dd0-$451fs+/f";OdsXC21*&XE<fIK^$XG3\=Y2t@<Fp0@&PcE0:GtF=j]-.X
%)FM0T_iV+)qA$<bj_^+'X@@n@1//e;k)B`.V"_\HW3TTXb9X!n"N8EiC5L%bi%Q@fXB%Z^<i"<"jR>@]9tDj'ZLs'e[&"pYd=-RE
%MC2PBhZ=U6q+jo>gs",9#$[u!3SOOo>+]UqWooIB21WS[g5f<QAQl3J5:3nGZ>Q-P5WPZ,*sQZU51ft6njXgTAD.m:\r`2?CXn<D
%og$9RQdpna8eGC\NW:G2!fqZ"m"+5Ln>aJD/8u8eeB55b<le$OoF$IXK@NmNOg]io-s8Om8akR'M"W>2.uDf&"G0\7O[glXV8;9d
%;T!G_+AcF(00KJ$eHoD:>31t%LCQmR*AbQ=+D=m9$7/[UVF0/H=Q(#i$lXLP$K^^AKW@;)oUts#*[lUjP=,OK%sT;a+cY@Db7n"m
%K8*R]CGh_4'sFdL\s(hq4!65gMAXha.l3kZUp1gU7]o$CBT0e&Z3ebZYM.Jcl$]c@64\@9:oc:6PFta*"8aq^Z=*9_cs`t"K%#VZ
%emJLd8$rkN5Q]3@im>2;d7PRl6G_pM=2[]S]faYUkpp-b3E/Qaa;Sl74K<h6",)4>377hJ:Bq$\%A;1]74sl+[]I9K>,s;4Ak>nM
%\j\6CoKLq1R(8)B]?LBSf$TIA:NaYC$rd]Rjt`)Af:Fp/=e).mg?roZqd]pk!LEe\7LY%0N#4kMB=)&,-iR]Sg57g^*A&RJ[;aET
%ed'qOl9_1Q"YF:Ok64FSDJb#oYDBI[YMFD,meDZ1`#:4to;M@m6.=^5Z]^SM9<_u10e6ad_+Fg`'BMt&.A9c"M,:)l1n^#+!7BRr
%HI2Q9J]=9j2cXf7epDOQ6%gl&oirMP;8h_S/1*(cY\"DcBUFp((U]<H5XN_pWn9):oi;s7_G]Z)>AocMc!*tFl?]W$S[K/d[VF6C
%hC!XM.2mdiZ]+r,<9hZf_Ve?`(Ml,2o*S=ZjM2NNR`m>g[844q<'R(Q7;PpmW+EpAHAgLW`7>g2^da%*kph9]A&:3?IB<6IR7.9]
%`jC2E'^)8KLIhXNBi8K0[&13D5lGO#TtsdLUY[AF_"0;taKjP-:^A5\HEm],L.o(\ghod.<(BlTn[2m4V2r#*;+:a?gPT#<JbWYE
%9<?>5OKr9=h",hLmCWfC"DSW:-ac`n5b_8sQ-$m$]*_3'HsfKmkmB=A[_SCSH^GAo@Q@5!TBlQuhjV('YHU`;C62Gt&5=%QM1IOb
%laG;'9GJbuD>cOGrE*1n1K*<j;W[X@Wr1K9ha<Fg2rMKdWqdM+U9f8AY?&@;W!#Kob%-P6cW9'jp>j9dF/UUL)e$tdUMW3eL77po
%/PLtJOTQsP3`&>*.Hgq*kON3*=LXs($nIhYNTV>%AnIj!q(LXpGmc$XXC<NupjnJ,/=8GNZ;Y7m)LpqiBq_jNs##dWXaKMt/'fnG
%r:bagLC>.dr&UMGj]H7\n9(_$61YiCJR(J^J)D2&+)i)Qc?#cL".r3F?LZuS*%;gbG#k6NBb)YSp`0#Th#Z"Nf-F,E`rI:q$0///
%?k/90PdY2P65Ve5PKlO#)9Eq8Ogn0tFIX8Q.M1qaa6GYpjoo@9SOLAtTi,&AkOEpf_G(LqE5(HcO\?%?7ZTm^-u\;1F-b#EK:g2f
%Ng5E1L346'O-=7C)rSePoIpQ`(eD(WaPEVAA/*XhW*GtHc)Hu(5J-+G$c781&<WTu8u8"B,5NRW='"kL)kb60E06bUU)r&R,5="r
%&j1'j(a_%b3<i+IqSO$q5Ksa@e?[#bk,<5UJm^KZ[%=MhAe>d0[I4AHk0"=Sj*.Qa0DQ=(Mj)@Z\V[Dlid<9u$%,H38%)"<D9G!N
%0P(,9.gV.G&T&&ORsDskENP\M50'kIj9_qBO*VY*)S2O2fShru%9VFjOiGEGM8/@B%ZgO8N*hF'Kt&uu*ZX%G=:5BlES5PsQOf+e
%NYen#VN2nD8@J`%`lPn7A!c!(@rQc;2JA>);)U[%34&Cf-]9m\;'%s5B0uh_4'<r.9L4`g*XfRgZnhn^=J(c_Ei^B3\`dJa(rZe]
%%p6^r`f(Mq&Ddm'+saPQW"@2rkV67FjH>%/bKNf?4JnaO<&]8=#$@]V0SU*\Q17/-^P:Ac9d$0o'n5+fVI`4Z_pZV1MdZ/)SGqNc
%$,+IO0kOfGC:?iX&^Ipp\eP1kl,d^`kLmH@L#MkfrGuMd_j*k*82h)/2Ioo6OY.EiluH2nj`=Ojj;0J/?O)hYm/$#`'M]OOENnH3
%7+bq-e_W;C`cC,QVeL20JUn*m(L'XjX!Tsp,`L-uP+$E9N`4/'c;FLYR3ej_7T+ff$*9a3r9-t[6[]H;lXZIRV?_T3f(e[dSahp>
%'(p=l8AU*"]EZRS;.AIG)(@kNZ^VuoF%',^J<XM<qc8*1M9D@Yr&f03%UIr2d2N/l71>TtN7KM7+6n@l3YD\hl?&3?MLsn'1V+Wk
%[!!-'8)jpJ3fa(E8;.oU6(Zgj2mj(B?^Nj&P_?t+/rjH"iH%[oOC`GEXj"#fiWr.m=kM2.KuY`Si[hR-g:3<bJ8DbK1=mCN_T[h-
%f&r=[F!>iq3&EZ'W)HXqq`3.f[aCE%=(C*@XQp@kZ&?,=:,MktlSS.+(fe+WRgaBY!ZOs^Bl4;Pie^@oPO0T;rNtSHR2]5/:%+Vt
%:'g3qa3>LH_%?\ae(g$GkuRVjiuWtd\.u-8K)X]`?6$F7A5EH_9ui8_+q\DpipDdV,s7dbC=5*\4nF!-&lD-8^N_MiCb0TTO#[V:
%i=Wqo0rr2orKl:"fcUb&dCUr^@r*blcpdM1g+'=&(VGo.@9A7g7Lb1s@[:p*JJi;nf@?D$AF[;\CG"-X>o^maN*aF3-3\*G@9oP-
%,VE4/>hfD(`_V-NC$@^9mTAhl8XpF<m"Ho&;@C!*F;+n>/G+J5G-@J*6+:kc_l[tZ!,4l4=W_#Uc<YBqE!24j#U`"\DZrR5UZSh?
%[9'h)iAa@ChBo$<\>goJHLhC]SD,2GOsjIO@i05Jb`WPpA6H3,\SVQ=foV3XYA4PeRB,O&Nk]MP.`rc>Ga62er-:CL_%R1Z#PD:G
%hX-c6K/,n91+dQKaN+Gn3m1=7q:cF@\IP<4@u1-N0pa<1amEj1Or[/.NY&n>"+')-<0B*mZI!:g";C-SFchq!!(gXk/+>e_"^D1n
%Po;W2'9_?8KZ:M=S$//q.lp7dn)J%fH[SMfi`7e+Rf6_jOsU\p,`Ygi_N'oK.Y^Qb^J)JM]GAO,]8NiBJWg5gc&V,YeaVJ^g)jXo
%i7p/D[4f0D)=n=c2B:Q$4A>u#UrL/"Na7$47ein2ftg"4KaRR0*DrY8Z?u\^&U.]#dqOcUs$lp=l8l4t$m4NXpeL/Trtj97)=(/q
%l#Gf'8d4g8.Pi7oC;3nsE@,KlJ,o4'Z!ob$;\=b8IZI(k23P-F(OmJL8p=Hggi"mGqgk2bIQi:SSd"V'NX8^kXM#_I32/Obn1BO>
%TfU;7#u=s"P<Fi1YujE2>_f^=o.4iXq,bl0j'5K2qQ@tfloU&N*T!!!,SF`kNNEEI*X@IN?f"?T1r@!._kT2<D!n_#`0$TQ9&=:\
%.qc=J->EF(B91S(YlYjW=':NErGLO`-Ro8q5RF,-_q*)6c%Q"UV!]jkU(">fAip1O.K+7qYt=c>dm)f/e:^RsG3n.`/1JV_D%md3
%=6#+sZ'S(J3\Ga-h2El+60l.UR-C0m+86_nkm,XWs+J"(R$8<2L>#j3qE4gLE-^#H!am%!!fNh?"Ndpb#B@4CNE&LO;XIumEi8N4
%]KK"-h>dD3oI/Hr=LDOQYQO:Yi!)I<j<X7$>elBX=^e1#Z=a0#Ra)s9H.5b99!$esr@;LcOEn:,mIpS#8X3pR8A\(le$XOm$Y&2%
%_t+TRrP@-cgi%0Cj)DBg>034]O@@rgr4ufr*.9H+\6hg*p5e3&g.@*)iA-JJY)LuN7F89OA$qjrm)Pf:9J_CL^1,\f$Jl^Ei>B3:
%GB(3P(S!Cn&@sLEX`2aP"NeL0cLA$]6O#ICEEL+/2s=Zg#j`ZPG]YJo,Z8'XM/:id2\Wh[aI)f9Yfd7t)>M8A!Ocu)4q?$Rlm)NY
%%L"Bf@/**E6>.WqRUURgT\p&r>_e&;E0S5:;S[Z;AE,'A1dfTOe9/-Y_&UrLM.^JlKjg#$`&LNO36lV#ZQaO\Sf8?=M+;"dFGWRh
%&=GiAV8aUa!^o,`Tc7Y_qoEo=#Rn7r&-!nuE"sA*Omf8/c:OtlfL-a/3'=-_r%M50IDjGMFL)tmA&/Y(?n&'1)od?m)GV)->5r@&
%$rku1ITuRti"WFPiT@[/]RYn,Fo4E*"9IZTfZ#VC!$2WA(3*45Wod_4V+)d8c;*E_*[:_J?'3V73"BtQ)#tFT35#3#ApF2nU[a,J
%HX>0tRX`o^b$i94c%ITRc_%;MRJA`N9.9NI8!eL,-U;A'.!?HjR(sio0K]DhDY3n3_`37[!L\DF^EE?O/QOm>pF%ut-"Gse=Zk;d
%i*"oBb#"-"<k0t%J63lIJPS%1-ZAYUQ%Lk&#=#m.f!,4^/2p<F\(FrL.kVC/FLK5a3-I#%AHWVUU;LKLM2PMER.Fi^gk%fS)i]@+
%idnairb3d?1"XO[M]9SCNZ#>D$SE)?Gqk,aPCfa,.WlDEDr3R19>P*<&Li<3EIE50nZSIA-ee:C8"YZSDHHHgZF.K)=!N`%EeBhn
%gego?OPG!BE6((t#I=%S=,j8E0mM]E)h!4pi\Dj#lTacGguW1J_h^KG8_@htcA4Oi?CY(-)H#(Q8(?'K=g5g"UQ0;X9%j[i^/=Z,
%*q!NrF$DhV.]tRs4?mtFd"R6P7?ct)L^se?6<T_,hMZK$CbIR8#-P+cn-=?>"%(ckr!O;OYYj1O0Bs9R1d(!^aX@J#nRrKCkHi5K
%?4R:Za7U(gOq/Y/8,j%)2PG#iCp=/k:fi'0ln7;^#%7E*&V7!S6F'=q"'70]-;_UC^HWfE`e^^H=PW(B4%T<S5s+>QfUPg#)O'ce
%nAcaTZpWkYnC'NA4(K9\!@PoQ/E#iX`9W.*KEN!UH!)A;*#/XL)1e,o97hMp3kC[[9?JUeb+^$\IqfHE.=s5m\Y6iA8V,4s_0:D=
%@s@c!,sQB`MaaKe=sn@h6nh,pf/lQVkJKqX!(`?F/2H$E2O4_FglKK0%.\_q5UV>*nHR+Q?AsE+j3n%-1,h-75hn"Z;X/XMFJs9Z
%#?h99:R$8^k/e<BO`@SQKI$0+,E+`:NXZ;!.=10G/GMcJ(OT6j3l%7S5#RCF$O1/8<@l<.F,u['Efl'r<F35eEFc2!$c(.>JMn)=
%PTg`c!*h:>NO(VDMNq<A=1KIr^h-t29]_4W%rfut&m=dqQB7"Zg:A.)J,EuQi?9b28bah"m%9&F'ik#(dXXh)LA,Y9%B*MK"H>`K
%@-GD0`%kqLhX5W'_"%ZC]umSC!OHhb6fpks?RuJXVtoM"i?*hB%>Q06+1H,6!J3*o![U#l;#3FCe_qTm5a??!Ta.fQ1UA2KL,hef
%4B=kjB:U>s@I_9Z_NTpL'5-Ge0p-hsB2aU?-s6Z\^O/G;[m/4LDV%"k!tO])IlNs!=Z1\%QPT0Ye.I"lPC,Hg"coFHN<DLTZ9Dag
%22K7%Sk2;/Omfr1Mb<k/W^S;'6*R)0;Cb5t:Q@/\-)Y;EPtr!]SZc-g$7Fo/<%dliG!`=>21kRP4L`Y^LrP)QJtD[B'7ArPCs/=3
%huo7$\&KL:*&rZ1Du(1,!kA4n3ZeO,=U8&X-1nb+GTF5"pgtqqPl6(rLWS^5q28[e.L#e6X[_4PjT]=lC`itY#EfDGj%19+X7(*+
%KBN?VCD!9e7/NJG-*T7id)eJl>8i^_Iq8PfgQ"oLkY4uo1>GX\il#ipkR/Rd30I_QDN0GV[oZrmKIH?2"]6@T;SWhl13&d2dR8e^
%4sp9<Y?@E\e3'dkCDZGfU_[6>JjJ!`U&BT:)h0)?$U?^[)^[#o3f>.qQ'mZ6HW`17N!:!sR9`FCWoSGBT-H$>OT0P_Ep;ScLSd5$
%L1nr1;_O8&`+f`16:Q"R3n><K'-=k!7K?;K$Ylb-aMMNcGd\pJS^Niq/,=,Mo?j64]$&sO[?(&7RO2=/U.L\h]gNcq=<R!6Qfd4_
%n-UL/a`jenNr"L;6V8jQV][HX3ffdTh^D+-G=DM=.sa^qg+Ic00GA*Pf*Om38:%u'\?90'?\d8$Xk,PYqd+L$Y-,>8D5J],]mLL"
%:BnL#)Vk8F%`Y!\J']#,@R*g^`jm4LW#+iHPZ</=?Qs<fVJ72#eem6_\9.2jZdY4]1N0RG*BWm+@H+_`5tU.Il@9t,/F,9QPZfJU
%//\[ia\H+J?GO3HeJ^VsCnDqoJ\.F1d_B%6GjCo7cD;\lkL:q!KW8St2VAH])/H@33po]bMI*C(WAKlSO0:]`d[*KLDsH\1`)K;[
%bLO\AMt\8JMb[![8`*>";N%&A)^AmqEj*9b(ntCn[[2S=_'+sH5)=Nc\o)atd`5)Y&nuJ7m%4ecO/_K*>l/d7UhS8RWAd+gVf'19
%b0-k075ZjhfmbY29uru9V8qZ;HGEW,M0H#BJ[hLo;Dh$XjSBcs8.+@[2Qg>upX-A3dLn.Co]daNl7'XRE=_EL2F!6#T^ILZ"tm=e
%Cb\Y24JR=joHhpfjVOM\%oI3gRVc;VGjce3kgYh8FR#/1j;mtZ4Q%Rs1#+>N-c3P][NgTs,@5.2<t^^Y2TM`e-%1WW*kt0)#KAE"
%)qQ_!qa`<M[e(oeK2\s[+t]3E:.'+pm/-%!=4o1\*B:e##EF`K1,-D!Lkoi&'&kYqC*I=_,-V6IF7ksLf9?orY)bN'5F]1BrhYb*
%eS0\T#7eL[g=8"R^Pk2De4k)H_4^$^a2^j.kp#E)8h:3\b2!oCW+1eFj!ra'*U4Xs?];^!'<3QT4FE($<8hki/R5o3mp!-\fT;-b
%A!_;)8'naTiAgjf_15He$0KXCg:0*GDG8#*"f0@r_\7)EWQs93GbeQ91K4tFK\"5@LU[8fV=i?"0!2$Hl#%*$dTd?/#1d'tr%-l0
%E(*><?EaJ"0T)e*(ah/__DXWT\t:dcbJ**S;"b[-*PD--J_!ae$<g5r;UF-BgqpVTTl:d?\RQBc7)RRRm\p.[0RP5%<C*!`aDq@H
%%(1g<,<-J%PZ[]006sto<J&1`q@XY%4Fc,YoaiF^eST/.O8A.t<`@k%SbTF;YjL_Eqd3r]o$YcA3K+t1dM#fBY)>,,*b`P"&^Sil
%<"TosLJWZ/:m-54o/p#TBP'j/aQ]+#Z+_9mWOr.Fn*XIsa3@O=HJUc,8Is1!,on,qY05'ga`Jjp=j\`#q>X*V4%VrDn1K-G1c)\u
%^)\ELH.TA@\G#CJ3RaKk;tE32e9V8ukujf&H"R\2q5nnq`kr(Rg,[p`KIUhO>V=(t(ZA#Io<gKkIuJIa#/sdSfA>>qB3oJG>G<_4
%5.s?da_h/g6WQiK;,)X->_fkMZQ:W&EO$fk&]m2C-Ql]tDpjuZh$MHpo8K1]T3!8rbI*,7%[uNb)PTB]:;''L))Db:Y3\:Y%orQq
%,SX5opugk!*l0HaD\7=;;r=B(OTo1hp2pk.#.$1,mGYa2VEpQ7B[ESW1^GNu;?)rc=:d2[KH_2dWg,S35suTcOW?su]8E(Wn'_p@
%WpK<c-A]1@EUDc!Ml&q0Q>"[B="f^,SWV?X<'lC%YlR657k`Zh9#\#dO>3XU!bG[TlbB7&#ZZCZfK[]0:i1P(f08'gBUX$WMC)W?
%26YROf4H]]<3-'.:Y)]eRL`8.Qi]\I]e>FHR*V7#p_%"s'juH[!Nrq]cPE\^]6DUYkM-WN3Hp>"+L>a)]mtJ@GIfEJ+@I1m:2Dlm
%O<t+)*d)m"BFc?GQB_)"jEL$!1QZ?T-uE3MGjCr8c(uFe87253$Yce);n2CBR;^c-rEalN+8a#:kN"*[)`,4n9c@pGdO%pi4b&Cc
%F^ZHU6Q=W0hE+7[]!OkX/tJ_&Lbl!`qhS-jGl3hZ5"0^0`iFo*+<*`_[5'8P[7r]#/W_ZtI1F%29@t2oFRdpLe"03"2!EAeQUjKb
%C1cPe32-kFT*B`,R>:1e54]m77<$?E]T>[&Dr]QjHOp'86S@h7Mo2P7i;K!lqiCdQn,N+Xp](4Wrr#(\YQ+0Crm1WAs7nm^H2[_8
%=P<F5>IWQuB]M+Lq#:_?7`QeSL3+ob?K36]ama2)0ep<4KnpFuk\Rqd8sip),<.l2PKMche?7]o4(/Epg@H,kYeEZT&K&GGPS#]W
%qBeXd&>(OUF&UdT"-dd\%nM6l#>0*M--"@5iaM!J0trXg;uAs/Sq+^K_l[%&-l`p;L_*isp;`^CkSrNb\:<mch9.VLC4f[aN8`I$
%17"(XJ#IA\)/Ei)HrQK!?2_&l9RjY?Vd9#.*bg,XjcK%@\oisjIpn1Q;:Q4o([&7b[WtUYlgGtGK7@Wp%p32*N'\'>LW4hUlh9+!
%cL&uK9:+"Oa(:AM.9XNqUM^\t^3u2#+QLt,;JI[J1aQ@=_?(h<Vc8^G\[9#!5#/Ol#,sM#l//Uae<k#-YiaXc>(`a*Wde7<Qj+"6
%5chg3;+H'KArSHkECJT6fB_r]iZ+`EQ;eHe-]@Kj*/N.c;RT&4qKVHO2<iiERnVsC[lD?hq]u0Z42_,JN@?b[,TXO4%G,G0^kOh]
%Wn0RnTI[-^;@[(sHe%NL.W"B]CZ;4HpF_m=?!<sgQX8&^k,^D%f$G<[lfRR.^pr%;>31r3pf*.Q^p/r#q'i66-0';ZDSLVFkZ<$_
%S5%f2nD6O]TM&4%ZFuj@oo_"*8,<N_3talbnhD6eFVT7[6bkJ6>stgY)_GN)q3F*r*5d.\hnQ=b%h`;diMM8%*`@>;/^^(]VeAj)
%.Np%8`K*>8%DdZl\35sJ2?'a56^Tuc\E']RS&7fHXfIQW+Rl8Xm;&ftnd[dO\G#CB4k#d>1Gn7B,8u1R6MZ10JRLCh0QcD:'pTc#
%Uk??R/h.uY:+A^UOOl58@g[@4nab*g^IG/8_"G1EEUD_eGG[C`G2?ak4`uUN/4R,XCiC#JWA@f>*$9NhN/uUsLg"DDCHrUWM/dCX
%UMdq$j^c;ck(ChS*8Tj7ete.<s)+AP`nWC<CG&ne2,Wd;.31KW,?0d47_f8M8%o!WYQf<uREIfmYK&R""X47-cFaW\,"dQ)*D1co
%(f1;PH=ZfiPeKQNRE9?=K@hrh6R,\1nkI\K=(I,&Y9!&7;VY!YHKP3>R?"rPnkJI7=[Yc?$(@=fPOlTH!Xn8N%rpEYidM>Nhh=Fa
%OjEU@ef7?RKMD<+V)tnLNI?gm-h+$:NEl@*n)%j-V(%jTkn["Y',<qKgjNn!,n"CK<c`,jG2c8Q3b:a_V6EQ>_5C6.Oq@U<0idO\
%#=QN/H+%_[iOt0!TPI1Skh7Pocc_<J]V$ld&OeRV,ZLI^ZP_9%nO60"MG2)#dLM4i\p1Ap;p)KWM^N0&qV7j+,G/mU,M,-9qe2F?
%Bo46C\j_hZKYhse_R_R9.Z0oS((Zi#kgT25na3r$#WrB6_QC"E)2:t4[;kTn]oPAG*e*qQ!QZL\%-^"!R/Z,2-C55aM\[t+VA-dO
%P1MF60!019UWac4gc"DVg@r+)\7tm.g/%*`!_l1L#9f-UJsLqujCXH+H(!-&X@'LE:#ri\Efrnm]ZA9&@TtS",GS[?em!'cW5_fh
%Jrl2Gj]gd_P!lf&TbC^B!`A+15@04EWu-Aq1Rqm1rm3$&\XaJ7hEdoC+>'!Z5\)d_2hHu2"@aJ[',@!@[u&@T/&$t[<$SP1GekWk
%L!Sl(?/4@Jg7<Qg8_1l$kKifeI]hRLl1/m[\#^dpQKQSHliGlU6'>\hE!AZ,a*@t8cRU4CE-S"mgh;#qo>6aWZ4rjCS=^$K%J%&Y
%20/*C\(cAthK`u':&9>(ek>FL$Yu^UUgIQc6KIfZ5(TPP!%e%U[;)d/m"2q@4385pOt)pg/DP091Ftn&8nK="52JA8RWN9/9kN:^
%><4,PZNqF?JD5RhJ]ncSSu!*PoNOZ7ZI:2_Y/NaICQA&$8JMb,R*b[JG*!fdg:2=rhFH%h91uYUd]8^*P7.5?(:t*i,TXJh!NC)b
%inZQ_'a<RM;PoT.ThQS:<2u:\9X;(0V/Y:bM/*Xj4Z!VZZp]O!]qRe@3QsLEMR[#Di-H'5<RO2VMG]uCOFFC#SocBSDc/`(\(hIc
%UGODmmER&]h7ImW`1NBNh?7Pa3^rt'lSn#EAiXC02:Q3#(Onon(/Ie8oR;o&B>qWaKbnps9;IPcq<MgXY-D*&[;kTm]n<1JQ^2=3
%V,oLPTV_i-DZlCOZjEHD3%tq-T>t3Jg"!eC7*hH#I)m5aiZ/WFceoC7DF1WINZ>0@N[C(NPKAChWMn'Wd[)(kN?_]#j2S$Sb@`'O
%h;t,2,'b&.X4n\0'\mYnEED&Qs#/>kQYsOZ43#Af4`9r6+9poY'W`="2,<.P6l>^E"(Z%qab%S^lqD^bP&aJoq@_.J^?"[&<,H)Y
%=_m*Pa*S'G$1cT1SfghbH3nI<]Ordo,_irMS<BX8M<'17Pf/3(YO#0ll^$$Rj]--NAFh!G_Dg&d5S(M@ZmMq=]Q_acj.@7L$3/GM
%q>TS<gH`c=QYif2h9kYLU4mF_!lMbN!Y"u"gL6K+Ke[mtlSat""_1<fcCVTD=oMGlf&(-&?BbD[cGc>GW_)e/MjG^*JZ2HsGS@e6
%A,q)5Uj]>-4u1V,Pshj0G#jr<_(:Tm.CmtL@V-o:9hW!W?@?D=/M\S4C)E<@`M\p\q^s&?BmjCt\7^g?,$g]s3n>`hbcsEF3=DL(
%Xosa^$]#"@%Fo5>7m]A7N]U''XAd&<_8r#;5K)@F>uN_KZum^nKWU5R3Z1c/SiY==!e]L`l*7g\/V_>oRV&;M"e0VFMV>?]K;h)g
%Cur"Dk4j[GT2Lnir^*t90H"m/Nn7.4Nj#'"jE$!%DhS%['D"FG_GJ35KYn)5B#ECu`hErr23&WcIJY4Ve"t/pY^7h`]7g*qYk(G4
%p\`[;<f.DP2ZDHJ[hUH!>(Sc$5/A5o3''W#D_MU^i%`r$'uZ,7p?n&G'/_e^#)22IpQL!'.=I&[44gpe)f?r^)ce38*o8qKc+,`#
%HS1k@5n57q.44(oM84t74$-DDA@UDH!8lj9mj'\$*0"7<Fl%HW71a?Eg3&_YL+#Q#9k_dl^fC4DWBf\?Gp@KIH#)JQ<`!:1RD[`q
%Lg"Co]%V>fRJS(<3qC_B2d&[H(;3,)2>%ZE1G.)JOIG<]-ToU]#^1L16/$FC!6Bms*Z*i`<Gr;]<k$Bu8h#IrOdePkqfeKNC$JE)
%`i3/qSM0P3>b[J-KIB<h0n=t^7>f*Di*W/pZN0$?C7u&d;;k1%%aKjs@u+#q=NbO?VMFmuRKf<e;L=FPU,`C&B(QDqrUhfT-(_Ie
%)Tu?[-j1DEW&kd[ZtCqHAWshr.`lMmF,3HDR^i([eidWhWL5^0po-nCBBVm6aHMehqTatP=gjDOj:imHdQo3\f5i'lgI^Y[.=I%0
%k>\n9+W<kCYVgIMa*S%cP:fSC8`rn*;NlKj&`;[7&BLMkWIrPDYQCQ9>?I[rZY]Cqfo._J;bQs"Bl-c-5X.boS2RL/h":-n8^jJ.
%;f@8C:>L5Q1jQ:Q5*"Ic^Fp"pW'&44^P]ld_;+;'[=+S1HT%Q9,R#a][uc:*g=F,8#Oaf4m5[*nF3\';M6Jg.]1-mKXR(6GX234e
%`0_,#[u-skZc5XCb`oh0)SP&Or>_Q%?/OAGG4='GB$I:u2<WI<g4P!FOt@3uJ:n4B:e@%H2ouql-o\;h+;.5V+Si9K`D-+?TgV>n
%D]9!3,hZI-\EVqbJ#5BlL>J`da"F>KOd3NLpa1V%#U7S6Eg1'/?rr*(Z+t(nnqBEUhZT&7^i;E3C6+Q$hYB0"bVi[B>W[2rSnZHG
%*B!$0VjEne\mS#r[O*U3lTF-ZU$R*BppQ_I+<7nulCTf=)Nb&7*_cnW3bW1`KSI9i(VZcNDBBrt4^5DsqFdGO[DrhY.0_cV](*rA
%DdlI(G4KM(I-s%lR>%Q[o2EWtc9&AVo(`tC;hToS$lHWrk\o\H>&d0b)(io-F':s=q:3QoMmq!>+b"/s#K<Z@3ln/SI_jT#Qk`^L
%>7OpV[379Z,HFul-bO**cu%]piZ6m?l56_q?9:B,81)c$j/.V+%^ItUe<6t#Vd@Ug,"Wq8jNqjZN\-LaHJmlEmt97<5#WSU/aDFF
%3'O'IlDdg-n]n&8q)&rekbRF1[W'^3HNtE"5..1Ops^et_@3!u=ZN-I!^s06+/7bC/9f-]4]5g^mdPCe*5<N;LVDmsWDSG79OP:p
%@B<b)+FZLmMXVpIJu[.=qCtCCboC[\EHA^`&@sje[)-`:[4g!H4ELPGf[9'<90J[`m<OPm(3qkB[7BjOBo[hCAs=[q"VIeK;Uh0I
%!B/A_eP5fOTl5)N(nE*QZJ;jEC]A9X4-.YLB&;U%I-T*P%b!c%M"af#;*mTE*_KTRCNDug=k76c:kXT;[kU/i3iDTr8)FYOFo.W*
%@<o$'-Ed<Zp!#>UdLNB>GNgEjk(72hZS3!ZV#otO1?#i7\O`cANJ'RB0$0Zo]I?V@+fP#Z;BO`o3Vl\>eAt*s\p3\:C!icV2n;49
%Fc.SX-)QI)aLt'_4P%gt8-X'Tj-nS'NZRo"")3+gVXu1_UiTj,LWH=FFHLp09-<Vn1ekP<7?]@[HAOJb$nlB_EaAA5adjce(U.n$
%KPRKYJ(6EV\93n19oXQj4bGjo*b+9p&B17,f#UQ-n!u:0\hlj>0&:i1PlG?iZNlIm7ppTORPu6#:4[X!:L3Rho/q&VEOPO7q@[M(
%T4EE-=9E/MA0X$]]Q_d\l-^8?\o`iWiC/0lNRuBc!#5^<k/NH<8EV"39M(umR&0[SmV\HWDGlo+hM/=c%T.1$\X\Z7o^Ud0e"fW8
%DfU8TlBYbVbM+l%]FhG3rX\p.RThs`EMKJ!R;ST^[Dr/`QL\D2QUjIO@J_&CWG-*X,<&o@pQ8R"dhFCFFA"9,F0:u1>ljpcaBON?
%fhaLEP&]"&/7.M6?4mJ$\MpL>\FEA0Ih'b,f#+pSY$J^7dBr,c'J6n<M\^m2Zg/9Ua&_!uQ9_Y,`;qNq&<4A>(90ggaYs6:24%UK
%0TMtl\'KX"E+Q=4Ep_o#PGUp<VJ+DS>;QXta(M,l`0mBq5Y@NFg'LCg0'Q;Po=^pKFYb(+%@^<MbYk$HeFL/n?h;E;B,fGThYUti
%FD4==%Sj]`M6s?N^M/&u8U%:1ao,_q\*lKRT^aN%@dA)CrbTnNiQFq+mlg<PH6_==YCBVI2h):IO-6lt15A2[CU>P00:,h=AX@T$
%Bm/Gb6SqU\Z`A8fCbhK1\PVkdQa(>79fRU4NbCu3KA"k>-*m:.VMg4BedpI4htI?M?1ZgmI)%ld$*A!*CA2Q)*dO3_bhG7@KY@#b
%8bLad+Lc^pgbh6brQ+tV[lp@!e"nL\FR9i)&5cm\>;G_N8jE^2GZW1LA)'+64IcQi,n8W5&ou,!Ti-U&.He3jm]dGJ@%*'[qfqQT
%2<ig/9tGES*Cq4sf3Y8#jm6AsX^+kQ*Kke28u"gHGj_LP8=76le@E4`kMpL?J6nimT.ouC2fe<G]p$sACJuqOg+AbH<BFriE((7B
%8"HpM2!rnI27g,E<t\*U4<BO9,kFs2Zj71R^$f<\TsBH\[rLfp]oT$ZQ_rVMbrGES$OQ7ES#.s%ak=LL*bLfDZGUfaR.'T)Lu4C?
%V&e6$V=%4k@pGSNS7hX;j1WuX9jG;SmiSt"g(:BsFGf4FYGFe@+W-Z'lS:A92j8+KbWECk(jY7)iY#FuMBW[@A(dZb#?;B4iH#-t
%P.lCQEUD_uK;Lr$Q>"XA=(o@1+'aJ/9TE[%eL`)6N)B(p9R+C<71tu/*/W?t+s2*fU`@3QPkiJ,4sr.*nTuM40&F32/\3hDMltm1
%7EC"CHrP'Fi<98D\7ML*9KPRK3f6Ee8U;sdA+lBcb"um+UbiC<G'3gIJM]pgEb?WK52JA8RWN8$-=+2OP>E*LCH"eDG`RTW5Ug)m
%1scBt%Y>ag234(iip6Z:q,>qA]$=ic'!a\k@L+bOXH@9?n!u:0\hlj>0&8i!5j9.5q,@G2;J/S=U<0pAi(=?1RDnbWhKm/`R1BO>
%PJ62MPKWt$=?9*IH-"FT[?(&W;Nn7X_5(kUBMnni,I:8MkebB]YIqS]T>lBcKkUe*]p$4J4hC':TRl4$nWM<GP`L]WcbVC_&LXWA
%CEN#91ekP<7?]@[U.N"7RG"_K"R]Y+c!3_7Rg)O;%1N/X#6S<WF?qIH?\9q))P0Z.H[,"RcNDEF*b[/j&P'_"f*$QC/Tg+8,_Ib!
%VI$LT1ROu3m,(*^bAH;Xi]s`D"fGUYYB8R$2L/$ei/JT2[K_?#=e9OQ-5tipk!LEDmDVmr5%kiY+""7/<`WTp5$ome*CQDscUH+Y
%9JD0HkIb)`n;p1KT.6'!VW\NkW%mg>BM)WP2l!>\p3HYk3qHFS&_oD9Y5ck<Ynf0g&)@GW.D'G,V'"jNP7t1WA=hnL[jn^bo'XsQ
%3]Q#mlW6DYIZ8!1^ZB#PfWjsfOF.P$mgkT=F?'<B61tq*A=71'H-6Rm&`StpJ5!MBOI\Vq._WoSAmk:8UYhk#OX;4d=^Qe*BlDqX
%^"X!6DQoI.e<ja$cnp>L$H#Dr:^G.m`ige5;Lfa,1"09]T6hn`_Bc7gK@hM)A7S;h'ER'IFP#[ZFb"b&1Y]E_nD60?ca>(OF6s\O
%6G8__&^(Y1m<clZ]PoHra=Ep(8).Ft(cdZ:^?@gn`6L!sc])^`=8'rJBir:0aL.*'5#RTI9u3W@\'P/A@?Q^&bdOe$6e&d>ClF"#
%kF1P0PZ:(N<[l%IC#t"MAkEdc(*S69T*%,HR-\SJg;SC\9oCVu]ud!plIJV(W=VWE8.'/8>^`H)*9(!^Ij?Sd4Q:Iq)S&%+b/ef`
%kt@iCG&!XN<5%7\>`E"cGjcn6l."5;ga<TfH;/,&^Qlm@D4:Rdi)n->G+NXLcBC=FlUp4[k/8d(?GRT..>n%[5XWr*"Mk].P>ufu
%V`R$037d9I\iUkA0#c#M,+[PeW92pGX)IEU*-:5@S*J.[8Zt-dpo_To8JaDD]+k9g3%!Q'dQok.4UA;JL`H=>6T_-W96J$O.K7"E
%a,_;5Toj+4mi=Mb\hs(,PP*G-3JG"tH;2]'<::GMj&q+=eg/p]4\K>]2;]U1:o<k2dO#ADo4q$-embp3XrY1Ld'b2?>FJ45Yu`T@
%L;:i'Uo&[TGc^3uRp2.!3[Fk/1$HMH9]\3!#shnMVXu1_lM/jl^BQ3/cZsHgg;A7J9nP&Md@a.9?6XNCXeCb(/f1a/'TM(.nmDZa
%h!C+\,O8PZ..2?qZ_VZsd)$4_Es*V0M-?@->l/d7UM8/Q.@PAC(/7-2O&Kd*(-h/Uk#*OZa]=cu]X2)9&I>8QV#n>(VY;B#L:i!D
%MTFAlhSQ[QpE#bbql-9uM;e1M]gN_!),jj2`hLtu\e-g.UgikL.!2@um5sSQd2H7,oX%1s+t\fJXO"/HBlT*baLQqIhO1fWRX#Q/
%EpD(@.F%*+_?5-PjRdkk[4D12=TcnnD5TFCOt?r"lq$q<Q,On5E@upO+Rguj$N]fKC65T.q+G^k^-p\L4S[7KaXu3#hT-H(J!6A<
%XtTLTgVXUU9hWF7X)IEUR-Dad2sJJC8TZ6cb]*DKe3P@5-+aUN7j@^FWMm5MVicRW'M3L0?IT=YKM(q6[Rl1Rq))h2I6BE,mGYa*
%Va6Z8B[ESW0>Y&Q]^^\55O_m;T7F?.:u-^<.Y,r_8p]E;.B#O'dS$'kp5In*ce96,2&M]ih4(otnD6I[So[7UkL(_@@8n*RTRu7O
%FEkgRiYJB\Y`.d(NeB5O*2MpJcUCikC8dAp,nR,sZ@?1o7GHP+FR[jEG$[5;UZ\IPT=>:f`"(3d]Ug>DC4Kt@Q:45r?56`oBG^u-
%fHfL4\#F4N#uLJ]'6acUn2[WS(k]HS\9@E!6.;Q$95b%`ZaUI\n$n6fe@MSb0(N/d[U`9&V7X?tDng78na3gC?0EU2n6">TSZrQD
%F]cXhI<5GCr2hSqs#3o!pndj+5>H$N9[\6PGp!Y,EUQa&`!L@jMI-TC.Y<?A<4nHC8%b(f_/M-of<1Y]3h#_93%79!aD&C]C>b>^
%>KBj/kO=+K//u"hdpM!GIO?*&3q2iqmLBdH,Jf8Dir&`?i!;XZiiDMA1;flmC+cCbjmdTGR!Z=R..:b-d;e4iWAFDBJ@_b02^<93
%S#$Dcp02bQ`jG/0^P.N*h-EXe,C]Y92=Q([o";Z*iB]4r_fs?bMQcu,h<Y'S)8Brm]R&bm*#)3`R=S,C^Yh9_#6g>qArtOU^Q)cV
%F/-%nl_rl+ii2"PIV3F'2lT!:ZPcD`1kQdj4eDQJ4n2MBT4#\*_:oLsMk!<ed<uR-S<dXaC[9j%N,&s\IaHsu5*!%Ij?)@F2o?F9
%XQB'5dBUUaFBT.UGQD"6B5t&PqL'.:k^L9Rj3iRh+8"1'LFH_*^*A)V1Jm&kYkGkkk`AYKnnILE`;A,l.J]!K.XD%CIPBeD/*hD\
%]BSd.f&?X'445eXW$$9u(K5;ndCWJg7E=2Z^.D\Sbfdos6-=.!S7d'1<UDmH`])/WICH6\8Xm5R8VmWHeLVK?O!j0lmsA1;b"@^`
%2M&oga`\#g$D4P!0Bl-p-H<oS2k\1;m!#aSZ3\9!]W-B5!t#\9cU4W7?**a,!$s!UT>(oO$eS0UeEH[CS^kGUs0'\^IBT\"l'keJ
%#D4>b8H_RRjE-XCk^=fd>1EsW7gkD6b7r!L"bfC>lZ'9gepc`@j"A%1I4kti&Q[q+&@HNK$EO8PYi+B@CL:GXH9^2q!>5!Y_;Zme
%Rp>aZE1L#SJi8qeFc[)_"MC2;%N=c3;o<t<R&lSthP+L>=g4\l$c]cCFh?K+H7N8>hVEe6rnI2DlMjq.kLQEMEMVdp"nWo57_i3C
%d!7f[Y'S]MJHj]pJH2k^U.r]:E$U(!B^">8T/Rt[X7!0;a;Hm[^#Vm4VWt4^bfDca)hB%No&q`6G4_sdPkg0^qR&NFp!Z.>q4_Nm
%RC2`A>g\#^[g2:F`R\@Q#MM"Ul*!dA(dKmuYGgMd'8?'3`P_ZCrb=a:]B=ZklWm<9o>.s8_DV!fs+4]#rAPm/?U1#IH6mQ+jKh1`
%rPg_fpk`AX(n\P$>%kY?AJ["H/Re\8l'WA:Wc,)cL`!)RT<IqTM-QK]MX@A@rfK.\^G_^!hhEgr?@E*(@/B*EqM^d%qtL'gqR:sf
%co1%HBc.Wr.DX\/1nRkD7R!HFj!QI9`t/)_qf'jf+5c4M\%_5%gV1L6rt_NWf7kh7hk!^Ig!5mqM.cheW_Kl?1..ka\G6GPrS@[,
%qMiMENhPaN'D:(i]CuCN`bo1f0;t6:q6eOqi?(:tiLO8$4;Zl%dp&.6(O@'n]`m$Qpd2q`]k(b]Rr2:3d@K7goTnlmX[TDCj+St2
%3ZBp-eFT\hU$;("C]1,:\NIito''JD4hVEHDii<&om%HhdH3N<qAYXDmt\%&O(<`Mp?BPXpPVo<GN0_dD-CrCl:IntO[,fi8U$[B
%i*QTEA^"D_=^[gQ)fILB=ZAD!/<==L`SJ*8PcLLV::Di!DOnUCF!-fqB.UI=np.?kc(jW5T%[lD8f_HD2R_DF4tG9Tr*$.:H-/+/
%\@5@>3aZ,oQmrmLZ)NWa'%M(<k"O/FpG-GrLlp9Kngrmrdq;q8SDBV!\\@H!U)l*mV94eOKWqV7!/,)5^#Q.c4%M$)@rpQkM#b51
%TXNSUrA?Wrc_q*894lTngetfic:Q>?i]V!T_<o,4VSS#afQ=-fWT$QkW*HY`'\'UJ's-9K;\36Y=]'BB"M%4DT^SaF55s](Z"mDs
%lRjO=>n8BqR$Dk[;=BL40,MN7/k3q;c^N88-RL"%o7]V3G,P;o10n8i!Rn%YBea)f4f8]jSYoF7AK'>c"1t&."McX'cW-2m]uY3]
%G6Xs'jYJ8@oOAQs,n]j^m_+au;[pRol9oK(X5P3*BQ3Y>ckJ<^'gt=ZVP]`XI;]2^@sBYTVQ7Ft9`K#k9:S)co_9lgs1;V\"KfIQ
%f25g4D-cdn?$)G37.8$m?gYS.m>X`j]/I3X?FoI>[>PC$M`SBFJiSV.ZZ0NF#UX8"c&4V,k16iIf,NJ/b[JCFSh5=/VnF2N"CNXp
%RXL5'CB_MiJohB,*F/<bh?'.rL+HmALP<(0A$p&?D^61*J2$f3j5/1-@o<c]UrAk!pMDgSAT9O[k=os(q^_D+M8(iW5m2^Z^OBi[
%I/#-)RgZ`u$W*KT)H#P45Q4,[4Y]F0[#]$f^gUbsq,ihpa>VR&T4p9iS_k-hd.leZLd55J\M49LQ5iac$25+G:<QjO.$*>#,3trA
%leFP?XC*p*oFhm4*8p88k``%J.<!Fh\/;bs0pq(O^s8iT0DG'G/s0]u#0bk`Tt,\-'.aWL.9dHH!a<UgZsV!.(s(I4NIAOrDDUm5
%pHMooIBqX*Epb$!J[,)Q1"Ui!f$h1Nm$`5Q4hI^m1V4FW/AD,Fl[$XQlH,rFiScZe>]B1%H/DUVi7"0\>@1R#pA+UU<^k#VNQ'A9
%og`rMo=RpBF&bs+njhO\T*bn].$M.jWd&heipm<L`SuAM--66(i=jT@G=Gb4ThRdH=ET@s/7r&9V"R0VT/jt2[S`@M!mjAY,g<`T
%5u]Pg(O*fV/Z<BR>hQ(#s$fEp$'5nWk6;dW<4VoN@h%DVPRbdsHJYBI(.s+\!/O!8b^'mKF&$n*R3l84>'&,>_!Mk!q3[B+^rjpi
%oXK]X9@@sqW!QFc-Ok"jeY^qGaMIAi7D_s(r8QPQ5AQOf_bkp`Jb##/Pjj0IplGIB00fBX+91j"pV6b,5<M11p#CQ#dpKiNig2C!
%*UjL<e,n"BPXn3KADApk3hG%d/=lCj)\Oi/LaV^fFm4!$:g.ITdt0CbiR&`H.lM)>(6+X+Ql%YH=7.8$J@eg:^\EY!L](mCB/CrS
%QGACXY]^(P[k?Bt6tV)e&AEl:kj+HB1O2.u#()*EP8MUs,d!61%CB7p@$,DW$UT:[bB>rVpbSsMJg`qIkumf-MknhPGW=)&eCpWg
%K+5FSd<;Q4AR[pc6EHq[N3ZQW[:!tCTI6E5bZYEdH]\V<VJ,%BQPgI=O%m_8#3KYHA$r9kMmhKhlrHu;P7MYI/059"VBG2^c$!J@
%emC:;XH1</=fsJS#/"]kYUXVd(G2B=r<+Z#3$8,H$*u7OjN.c.3UX/c;UN>E%&%G-iCCR[_erCR\H.>Yogf(BMcOeVWa1K:-`mn>
%dpK78/i#-h^%8bpMhVJcGGo;[06u'M[Jg*)o2!gnI7hV&ga]2niYe7I/<J:7?\^;kZMIe0P<$>YhL.++/_TbE.8H0M`9^E9n=7s"
%[,fW\^l0%DmS!\AI]5T13PS5^pP5fU@Wj'ScslK9$P?Xu\^qB3(:enEmCf%$85'?;$E2!,-i:!rZmTVKDoIch0_;RVVSjmG79dVr
%*5u\-0Eeb/;n/:>\>L"s:I;K*)Qd]a3jM-ZP$WqbNOGV7M/E)I!M$5C=h?%OR11`8Wt523RE+//;`Pr%fd>_ea6Im/=#DAKHBYK4
%!"kDscX1k"GcX])rX#ZlB!`aId3@e/dd/of5R0CT2s@/dEjGAJ8bsAuQ.XlXKR#0e-oqo*I@okJ,H%Z,dTQ41m!c1LM'@//WC'G8
%HkBMc#<Gc!g3W-VKT?/GKSbZG6j>YfSB)VUdR]:Q;,fA,@(=:p_\g@H:*QF,',`kQ$%cZD,SqG#:ghY#<drn\'IgSk=RT8QGlZRV
%=10Rs.$R%X6,M.&o-(KP!0896R,6nn$K_n1!AHO]WZn\^7Y^7l-J6-!,&bT[C_@q]l3nNm-41aMg-oN-\)XeP-Vo+TnQk@$$f!(`
%8-E#4U0%C(821T-<6W5(3"C$h9)^Jn7fouYJ)Jc`89+!bI.H4T)XL8-n.teF]r3@pRrMdH?;2Vk$*#I7nNnq+D`(TM;1_1gA!j;,
%Vrhee:U+00)/Z>SQ7+P'f_=1<7:(D0WaoVY1QkK_`*r=X+qXT:$UD40i2DGn.t/<gNnbBO:!qb2O^12`#pd^<^DhP0QQX[*WYQ%b
%W[=KPL:Agpc_s9(+%4\/1dDQAAYD$8>#[-#.f7E)@pFU\ksD,ip^JQd!=?lua9/dDBp45RK;`-1kgW4`GT&I.K>#oZH$n;DCBLj[
%-f+,UXR2r"2"m.6<(6)tEC<8Rg^Qj0^uf!>#F_W'r,5L0:7e)P#a1T9REUTufZki3617k*%dfQf4pc_RFq]QY8inae>s\;'%.>IR
%J7dmm,p:RKdLJG[_Gt#a-]mT4.8#Q("p9O>7AH&FMOAoi^?jMfdkYH>"UtMHZM56.2-ZMP-!V-9R'&)"KuLJ^HQ+t@C7ID'GOHkK
%V[]<K?H&TFeMd30RrUA3OOBA9lFr$=:\JTs/2'6[6&a?aM87f2M$OL/jQn'+ZV=tlNcKqp;&uP%8+6n5d=T_e?(5'"e]62'U]aCI
%&HbhN*#P3]$eB#4Z<41(OEL+"Xjh?hjBsH_fr64;6mMsO/>WYHJtst>XjDn4643Km]7"P@OA1oT,L4#7%YuZo`gD]KN2A"8&OJe?
%66gk(pI^Ss@N(-4Nc6a&[a_go4@?--L0:rr%S7l9F(CP*0quJXbqoo%G9cq-clq]Xk8pM*)DI;i"IQ"^LEPq,Ogd((?`-Qcab\Y<
%:RE+0dDGIK'r;hAoiRbsH!k=/p,je',-`[DglrLc+S\aD"H<hah\Q!W_)Dh(,A("`'tdULRjnD(*DVI[8:i*7U\/V?=SfY)?b5V'
%C:8D+18N8f8MACT/EKs;c'sXG8DHT]*Z+s4G+1q\hp#QemaR2]MYW3jX@IG,,l?L%%TZ^;P6WPQRG?TZa7YT]:$<4JD!n(5Hdpt0
%ErrelASjX;,Yd.C^*Q_35h0?3R2LeDm+XGb`?[6cHR=qtR,KJUgPk2>W&!/)\&Ud-(`/7bddpI<mQLYu8,M,Q*i3u_*S.5b73pI(
%!j8O?'_'tX7#q^-0#U[oHk;MGZ+(@cXI-M1K[*7DcRWT[eGb^>D?>loA0[(M`XP\94:'A3/c3\3TSi\W1?VB^(XZ72bd(<E-JiXN
%lh9Mqde2ldKB+1GEq?[cMi"r.pU-_VHY,&]\FCQAN-"DNWHJ,g'IQ>QPSP!$6aW[l4aOS4NmgVeS*#i4Odk<e1I3$d=OBU`IVE.b
%2a.^_`sKA)BMe;VIeT(.&$8?K9nBOj*aeKZJWcc3e=Z[R`"F*]H^V=[/ku=38B^/&V/r/mHm"BhbBSn6cIE?q63O8+X[j-nlO"G4
%jur12';459g,LEKZ`[bNGab?Y;pXF0>;a2R\H9;P^O6*E/)&M6/g5.GHTEOq!cdj*N91`QZ3<`emebFp:UIlRQd:CO&nO#b&5;/Z
%4e`>g9C*U!KBi](PFLq"mN=,W>J0U9He1")g]HJR5rR22,`9`t[](qgSsC^8PKtdo>7f309.CVDP9-OQ?cC2gZDm.=8`KC^.;Yh<
%-!pPueg8*mrk#V&60*8nMcSp7$EH/^E5/7%#88JRQPN8oCHqlh@#^KnZ(u$@"i2QSq;01J6@f_%.A+=HiB=5a."I"/O+@l$b<o-k
%T`@rs^m@co_3(8M:tuEt$O$a@/]"p%E<1`i7SH;_B2L!H<&9q1ap62#p5LS0roT8s`'o![+IQ>fRjQ)c2:r;)&/_&]:bEO1?)H34
%#hA_S[c7Xp(ZU:m`+om5&.0C8,dS,b87l!@NElY+DNo!Ta525DC$iSS]=4/T=r&RmmJZuAl'q-#<JlYRm@FGa`2!Ih\#d42abK=F
%20>!C#?gfU[-N!-`_Y2+lLhd<S=mJ/psD%n$R4\WZ!G7GEgN=p&-$+LVe<<SBp8_@9$]L.,RkumkA:3d09[b4nct$:Rbh>@!?\[B
%)sjjOh;6S];T0!A6VOZYL<aVtoQKiL)=Pp?_t2\b/s`Hu9kKIeWT;F,=5gJ7,a%`kXF^ci8YiUSSidItdXhg'C9et6dC[&=OL^'(
%V<Xs@"9e/]:;!S'LR/V.5]<)6I9O)V't-IX`LW9BQasT,2ICg:o5^Xm*7K.X&"P/>,qEpT714iFT7&&5;d>A"&>HAb=Lu_cWM@+q
%I7#GR8F,[YbWpIj>DIHpJ.o9;*SJc=-7?UoR5@ATl/;f*U(Qcq1kE>2c*6DT,c@Xj/?_EFiIpk=j9JeAge#jp#RiFN7)OI4fI^f4
%HR4cb8Bf"`[?>j_Z[nX1`IQ2ZW3G;2]"<Ua1!X,O6j[;KASEX$1GDPR?K\cWM`V*lREodh$2J7VkNN507%\pJo!3/cX<e2co:?t]
%$MrXnGYf4[lZEJt)5i!(\aLTT^rf.n"O\kI\^pnAfIBB!#>%>t3i7=<.i9[=K2)E$p2n&]/Rl#l=%JHZ*RdMCVQ,_\[tBa-h-tSZ
%JD=8peRn$20gYA$QAH2*i,5,M*9NWWAIGWlfT/!t=3--jbXk;04>Mad*gCa;PYOcXQN!9=1j@st`H$V.f;#a?DffK*P2g+d<gGuV
%67Y."&h]'47O#t?KRVs\V`@4-]tS0G&OO.QCAuW@GKU&[`\f42N)TNr^rm.,D4C@[lEH\Dq5Y!Hb=O_Z)?L,NWWAkekL\[q;S,T/
%/'33$e4-\G?=c+*dOocZdH7fD2H+mqQm;,.p*N_;i[GYC+URAq,YudX`fWB)OQH1X&%"u4Me7LH$F.\_K,0n<'$?CDTfr8>0rDD$
%IG1O&pt_/+Uld3#+^,c(h6kG9;B.4aK4^,BMr]RVFa'4jn"-ZVX+tB911ac`#3!C%H8dA&@Q,rL<,@b[+kfc"d4Mi/Oj[")(/cBN
%*;6CPjllS6^KIg/q`u7B\"DI#$REL9rN0#N9/bq1(;(2ph;lEJZ:@\$M%X=-(Q;p4k!d4S^\2IOF#B6LU4P80I(FFI#_VK?^"n],
%N5pRnE;R@W8=jN(g6P\6ica\^S7[7j.4C-tNYf'6\)mG^k,Ol7o(#,lEqO*`R2-at2`o!MN8_,gUOF@5C$mWlVJ75u`Vo%EXSj2a
%K\.qh33$_(c87q,I/S/qZ:-(2:7#ELqL_tUD5;pQ6.+sko$Zr;%b!Ot'7u6'GoS>o+<=cV93)\']MtUe8%19#L"[C*"dY[3ZN+gf
%$K[D9DrN[,OA1\-.6,:gFXCdti`Mp69CbsLJEW3C6!SI`Sq'jil8VY^4`5G*WCY;eZ3Vj2&p$GeL6Abf7D"b"DP(4)r/[=p+^lu+
%d2Ok,rj5rNb0.\L-"!h:d(RNsS=Y?dE$^#um4r7968/m/9U.)3K6Q1*&?`<:4r0cgA83X:-r;K=;XFsl9mtu2X.f6UI=<%d14f65
%Q3YW%T#>5+R6CEA*CB@67kudV,co+\=jdZ8UM3+_o]k9mW_\Sr?DD$#KW,9$6!9"sTbFI9L5QtT$Y_F>2H?%!dB26%2lkA..-HZn
%R3Rek-XdFG9(n)GT]hP]'=AK<cm11L/>QNY2Z:T5J$QM<>*u]irA.&mYiR0"!Zi"PF/sIg[QeOr&d[uDYNlKt=`"p`EEX6l4#\Z\
%Q]9d6?P'=rio&1<;DHNrer&]G\02SH`gZaZY8`aE%13Y^l\d:'&7tfToC;H8%NZf%9QZ15N*):%(+H+U[W"UUg(9(@L2?0;/IWo/
%Flb0^%g`rsAWC?\I3Q$i;$k@3g'R:N8(0U?X/f3"r3S:WdWE0R:LG/n.5-^sch]nU0mNB(??#j)Afak^Z,K(n9+-T<HOqdH=L.kG
%4%-8@>!eBtNmh<S-K9c<[B3bB*'XI7>r5eZXm<JCQiiW99afNPGFRtc77dPL[O=&Fg?_UU+&KmaR8lJ<q\3_AnHDJD+=B#[raBee
%=6!qk0T;Y:grMA-mf\M/mDc=pE^h[onDL33T9BU]XC+sm94"4#8;T="D3#D=YW\iZClVo0j$"l`LjF\aPN%Z(GmZ$HWKb'k,\1sG
%pq\,G!cG)TGAY9j7X`'#RJ;SgY_Va"8&?We%)V#W-,<3+R[9'iNM@+lHXc'UDWnA]CnQUSHth&`"]hbN`e_Mm=0U.?&@KW$*2<XT
%g*'F(?o.dR60AubWSeLOc[l1lK:.p[;20jQ3]P4D'*I2d'8;"2`NgSi`<LTC'a@H6H,3G0$WZ,lfVcn"F\%nt+T3Tib+$uYV?OhW
%O+-s6ZGl#o-7l68'P]AJb1`_rZKhI`A^r45qQ!m!n3nso#Ri#]1=):#)cWqOEfPRa&`_Xm^M\jsrV#4Gb+qKc#r$C'aWqEdj4MWs
%4DU'*fpLc*O@TNqS4[AO+VBVFl,M'a8R8S"WLCWLgP`=G+E@G/OLo/W%W!VXbY%>eMXnaAaTmmrW[7PQTMD07)'DL5eYa3g[nXfB
%pg7$OS=M^c1^(?o)mJ0Tg78!3m^ReaeK@j\Z]cL\f!WJ-@#KelW!r<\BI)?i-*]FY\s/ce.b:`t52!6hDW[(nTUodX"\8XJZtt&7
%!6f>fL8)euOiumJLU?EU%GUJh%"lf$>VO<`',+MG92`>Qmu?Ca8J1W'!>+d4):A8^'+WRE,iP!R-c<S;N2<-<X&so3+rTHa)D)gK
%J2N[J?RLD:ldh=ReuPhsKpD;tl"#2u5=c$3l+hjNMZ2S!QZYCR`NhrG&sF531TSTO81eIC<=s/c-bu`H2V6<a@3sU32I@>4D+)6g
%P;Jai!TLKGj,oFMGt)9gSURB0q0o45RORBm\Y)k!1EX&*OeXQ>LLVLH1<L!%Isj9t5FEubokU4V7Z=4,(7,UY`EK^W78VK=TbXT>
%(=RVW1@q!Cb*746n+l2.Y%T(XSq7e_1brG%.Fi>L=r4<A'qUkW3k]>4o$gnF<C.5P9soLW=bt9qUU;M1V/AD-(K(uZV*2]DP^adR
%9$t!P]]Grn-+%6n-DTsC)-WT#8g30RWa[-3>$"T5rbA7"FYlG<#HJ$3C(:C3W`6!e/4[)M4Nr;*[mOhHRT)'gaTE;kc]#Q4gI_=A
%)DGj?Dg":,.3#RFR8"(9S<ruTL=Kks_['cIV9>u8[N&>gWS<4%Jk3:nb8QdH?'-AfV4q,9(jhBU"Q)D6P.8/c<hA/cTPu!(n14M5
%gS_/*)Ob=<**`G91.JoldsMn,H#1?dUgi<0Hr.4FP0j_'A-jE:Z(k&Q!>;^"*ti#!;E!R[m1`I5dD^;d[>JhQ8d+K,j6eBONNZ?/
%4EP@26,kDM_s*(D<>!*&/3+G>frMVf)cEC8$3FWCEu<82`#b7QUTg$+7ulPiYTi!:p"`"fbEg6%H4i50%>U+\YF"H#FtPH:[`4rO
%F-JNnRT0//%1E`)Ehl?$UoFJ8.+!uph[R15dV"!mXd`+ZM4p2Oh^QQ9_.Sk$deTed0h^jlZ40u._S3X,,/D[M"]?n[<.ur9P*(\+
%Zt.RpC;Gu35*.Hkh1KP5`c>/>NO>J9S2C0@@Csm]ISeK2ZEqNQ?-ig*9[@Dj$Af#\B1`aNc=G(@WeO=]`+\\NSYDn;AG+0)fg:f.
%`q35l<]#A/OHk@X*hE=g]%`kb`'EHo1T!KO/'`i&X@_<?e6?/UG/a?b?(-_#iQ33H3GXWn,fXH8I@Ni@R^&oU:B$nY%A#Dd<D+^G
%MNU'Je$jM_l!(%T;UVV1EYgkE/"oN#75(pQ#/5MRjQ&3lB9p"@@4:rB94Xg[TM_.^rBSRZZNW.&=-Ns_l-!S6H;*#%TNt:cMi/\?
%_\KNWK\uTNkNQWfBE%L8#=i=E.S1At3^YnJ'-!IC()f1g'Ppq3%)!]n)bk)aqN*/5No%Pa8<i1]-<hE7NK$O_XrjU-lB.an0DlXg
%Jg24/=?5'9jL"75QPROfOo=&)Wfu6[<'-!C-U2mI>c*igGBe#nM5"'LSlUYE9R^a[2X6YSUI-riiFGtVgLlSuijMS@g0@P!/0spe
%`>=H\'i*kj-%NRJJ&\K,-aL6;#eC'>@1Y-k7]bJ?dDu2rNo+P(<5UoJ$ehk&5J_60Vg.)Nbe_?AcH[>CjQUg2mqtRiS,D@.7Z!]+
%%7Qg`Ri,jY^1glX+14C9j3J`1gE]u9GJc<RLVV'?n0a)52DL$A8`ZPScP%lp]R?2FZYrbh%B/YFYoD/b8bTm-)sPb0OQ7nGW)&m4
%J.aR=U"E)"V/4J+\q9VU5rOr28`<OjXFsBi9h(skmQ<,C2FGJ@gOb05jNR!4=&Z9.*/\<2e3YKmpZ#G*)=?^tW?a5g2q,,]SHLij
%a!+L8.P4pupZQ@JT)9'4CIU+p<B$-.]UCcE]9c]E+AHpH'SZ'lp!DAY$!tlY;IF4#J!A&BA15V"V'Jh"9n>'qZ0u9e-X**pT(4!$
%TYl(QIA:7`7*;g+n_6p%?LSg`Aa)=UW(^:c\fehf5SY*7AhZtii06>OEcDGX:Akhs;&qL00AR*ESjRDc7"00^E@T;ZMFr!,rp!L8
%JZ";^XR$3%(;09=nlF$r?Q?$5?F9!+*u:_LYr(lC+23KQ2=oRb5WZEVFsZiq$`;u*]/##!B:Ctt7.r5nT;kXt;rqMF,BC40*3IQH
%h8We`N$US9]05NY#YW)%;R'`$ifl?;gmAp;d$,glc.H!N%(D<aVmaAb+I&56)PlgjM*_\T2,t-5`3`gbJ^Y3jX=0]09%&_.c?@S"
%Ftdjn^2+r<MdLZ32,ue=h"+1T%!]]anoJkN?6hm<9ZtR-/$4osc:8$V=Djp9&o^bu\5dr*K%<;3b#KpcEmKH3%PI\PFaW.\[p$O)
%oLniU6:GlKaj"+d`_JdF75Ot@+WQYOk\B:]$>'ere)5i4Q&?ufDXuG#Q,4L_X)1%<1T?N'YOA[PjSS[NX2](Hk:PO_.3G/G'!fuI
%M`^X>rlNr(FC-rH?H>/Ka0$`EOsAcamJs39Z@a&fp[TbAbk,lIH/#dr`Cu\7rMs,2;.]6Ym`b6:maq$W2l(c8]ip;!#'RGeUSZR2
%C(aEl:Ns<)$\,0O=>IQ\H)PS.F1Wo)mJ+Yl:+NfK&i9DfbnfZ\?fQ>>9)Q%F^/'F]O8Ak^VnIt$I<7n^`q0hfnB`&L%c(^K:j5jb
%I)PHYY(^s1MoNqB^=gA)*TNjG"pBu$>?;sf5ABe<FOl;_J90o("==]'(>a*N40<]F[\spri6flLm!FkYJ0bm9<*Qqc>erVem`Q^0
%q-[&-QJ=#/dqc*t0PqaWB9.>]!AY=gfBs`NX.(6>mtE@8)i%GcDaDLhW=8C*Yk!CB"'"j[ARiY`WbP'Ia1;^M="N"/2&U90Yidn@
%FuhEc;=ognnr:,.C2Q1<D9?(ns6=fN"26>]7KV1VY^rrEiG9C0RVIu:IE>Ph#!o-Zb9[[rJJHijk*a8AN#KD/[7!YP!;NK2<'X//
%W5,D<26GiO*P%DG]F@lF$IqCXT]g@",29F!2JPE10@P,r&7N>mcAonZ9o^$^pdl&"m`Z;^j6&qY50J^G!g@/V_D'n-Kr(XM".@bI
%Zt<%3`,0?_.:<Qq1TIL`+Rn'H?BhE(%mZN'jIM]`Od8>rcEsFH1>c*6gik)6+Hso+,)ieU9ib"n"lbkCY/G-q],6dsQH7;+/gZ3F
%Z\&+)WMuD=Z]V2ts7DpC!3,[g8j=O#rGJblYrq^+iWO?q>sGpB@BM2%hs+BK2.rYKS3/8;U.XGP:7$.)WJDktm@H45iijf*\SI-Y
%:j#`n2qGVT0h]Wh,U67:2WPK.3Bb>^\H\IVS0du:'[[XfZq^'aX1FB+hM*9g:oQ`\fMOdGbr2O/hNCSGi5r<\6S5*#qj0pe"'#T^
%Pu0H76f+O4bDdcC3M,'O`jZ@h2boYt03W8LBiXUM?.P4sNWGp;i?YpGj_R1nPJ`C'PI"^iRTWrZ4B5=lKqb$+CRcn`:[2VQ;B6s-
%biCZeeV&5Ya-^is(=#VG1S[7=U6TQC$k'gqlJ;lN%bfLe61orp98/$S9mA7djX/n9NdFjpi8/75I.Rjtd45d]b+?*<>-ehW1a&b4
%5[3*Ga4]MB;PVpVHd$Z9a)S8aeb9"%-]dVZ.Tmf!9MQ*"G2W[^2nNW(3Yg_pfXU)2&d)'aZo>N.V3oj*;c;WaQ$(L#eSNcsANg.t
%1pP*[jE_fTXK#KqlB_0V#g3W[ce_U%K:Sl$q158@d=r.=no)GEe.aKd5X!+>?iagc=(dt`2q+^s'iN<2PpgZ0V<mKMaMJr6&2;E_
%;d2ZORXc4i2TRZ9EV76=6_M)[D?g<n%KTuR7Fm2_QmXsrR$DhCLLp91^i6XnOZd)0a4qJcD/IOhrU`R?auSk:=`1f*H<c?p45>lm
%dS0Coq7\T3\,3Mp)jlIh17+d#]qU)6mGQ>"Rb5sq"]@l'b;LVcW2]<OIn01ec(LR^[jshV:;d8k7/>Yna&SD=T^7O)`J:=DZgTU;
%Lgs4PcfRSm:Eu6p"uoWRhCXFtF?1=2p52*9Ip=n[C8Z%18&M,S9)C0[6>bd"?hhmn(%NY>^<=:U=Zt@ZGm,/aaeX8NUOfF;R4/fj
%/tCF':;Ps+!QJ103dLU8_r.(_Xh]UHRfIYHM&'JJ_AjulAJc$=U$Il`m1*etrEb`t#7G]hU:)s&G\N5s@4<K-E.66F]^@'km1?I"
%ohc5d1`&F3PhaKC%U/q:RQ@]?5N[%-fMCmL)A!M;LLb6UOJM4r<pKKnJK;0UJi[sBeJ_ShVehI:ZtgWf(,d7B+39+bFO+VmI=Zs_
%XElP]Zpm*LZ:!i1\JEE9)pU!/JIV)]KQ%+#A-$@JANr0_m[bWAcu62hWbuCamV!3:KSB=q?N=Zc/5%q#p;Qh]jJ/j7M0b+2?jVN)
%.;FcaHa95X88AUJp'[-8HZ<I.!86n#hq3W1.SnZ;"@[E]97X..g6dps!Lc??MW\oL`+[Y2F0*Z_=&Whe@hHNeAp$klXa>&IL"j7!
%Au]?F6=k)o2dStWi_Y0>Q,n<XWq9m7h?aJV.!Q]rgm9T<UgS<0i\kPuK0b8G0ihu`7PIf7rZkSi&GWf9#W4(Kb%jc##qslrTK\oj
%lqCEq?5CWS9.HKVJt1ZC>0@KdWW0qAWOf9rK"o"6fPLogiqQEn^]8&i?C%"KRj[sNi+G?5^5<u:OB&\UkL4PLm*h#rL,PFcI6e'4
%X;DpsYhkt<96[6_j0(=$;t&W'f>0tJ6Qg!2JRq$^k9&#<9ONr4SkQFk"-gNsmN:poc1D1C6Nab>%3'L%qYJGI'"[%)TDqffJ4[l]
%<)5\lK5%S'b.r?YY]*"A8k0!O^CVQeZYbT"d:]SoA#0[Mn+o(6s%D*K+Na&CWl,!Z,ZEl[),Od`<RSH%)t?6!hbo0%e'Lg[I/;D?
%8\,qCHu?`Y;>,X'pJK>6>WQhSA01mkOXS^AI<6#9]!Wjj#"\4mR]eEA-Rf^\`;GH3cdJ73@WTR:-=8ZYFLjsgk?2_mqF&MA/^j?H
%%FA+sM\.CQY?cIEnp5?"'NsQDoSc<YB,tUtNW4DojPQo?cEsGV_h)Nb.&]9lJ-cLfjo&9b$\Z^+Y"=S2UjcZQT`Wb.<<B>,^_caD
%l'.ql[$7<<%p@ISZ=tH;\r'6i>9.Y\fabt^Lsr?h%G$4A1tE56FeD_emfGD^\sJS!L"4"V#N=Y#`%409@We^Ueo5<,2l@T\6JTqm
%>D`i6B6m[kYTt\m_+h[6?^5$MebX*>(sIZ4V\W]Fo*F'<`$rj*1J?[*(d6bA6r$V^8?lbTpHpa5ZJ@9$RV-c?^L]),H4$fGEtntg
%31;6RCeu/VC87G3&kr!,Kkm)E$ARS,I6dH9,4?O0A<n4WBY#fhnPfS.I"m)EA`htsmoSGPVR8DOZMA%]VWe_$JE3T5F^ZjfW\ipR
%#GO.e6<0:"UtuN`BN`#JhqlX$=:Wl,'nhKkH^Vlrlt8/Hem+GR:aO(E<["b=44BmgGV$O2\kNdXWc0'gE48'X8)j&sI/j<P`_4Ec
%FFAO.c%]q_WMMrW.M$loD^Q.'8^Grr0^\aT(H,'YT76/so#LUKg!j]k8`u_("G^>HegSjV#l<<CX);9`r7'Q#^2:g'(If7Z4,0Em
%Rc$ShH_ltGRfT=f2S;q>G-DZ+iL+%4Wm<TC@G#ON@R]]`RR>(ZjckG/(i)1.@%'MWZq*L5@,9u),`-JPMqGP4Q7\.U!CmK?'je#C
%%S?eXCfZg5%?78f7PNFk5s^e5,]bCLf",b,]dXF7\#:FLn-f?ak`%Y9`$srS*_ZiVp`,$kVTigS'm+F2X"Z+Da\b'TC@obod:ei+
%a"gcV1YLLdo%ccMRo0Ae!O8X-VGWKhd7oLpf\-ddf#-@IarIKLf=';3)I?Fg__2u]9obT!YbG?Qk62)Q+/g_t0G-%d,-52h":,9P
%IrpUc0NX\GCbm;8aFbE*J>ZB4c-RMqr,`UrO31+Kp)t&ci[XE:H<2,(dj4XmqbA>!A@5\a6/g_u\,,7CTP'(`7,\@0DFsMjHd$`=
%kpIf,o+?[&(4EKJ8`4?&&<!(o6eIRUZ=KJY6AZp><)FS_?]]ne<<E*4IFPV!FL>n=Q`+0udff_lX>8WK&JApd<^Q#I1o^V$>Si5l
%kj;?2"t;O7c+:pba4<iWWor;?/4%N@0`ISW()"E&nl%>Ik$9E4'OTh7V%Do%G&$l=MG&/rH-Yc]XP(Y>j"7O2GmB9DC3`luf5-ch
%0\7nu*pkGgqK<L5$Lo9W-Yjk:BL6$&o@l5P.4LHc2]+hZB9iW$WQI;<KGOB,CKWZpTde?g%)b;!r.6`4Zic:kB0Q?/@Oj<]chg+<
%a7d7AFIGL@\+acc(->peds027EZ`E].%%6"e&;^n\2Dfa26%HC('$h02oU\,0^L@+<0m'JgtT=bfU+JXA!IY'h0Ssd`8_L77hPT-
%>B[_HfO=9ekj1k]"uS\V>nSh=]N9,:;kFmkL:\\[G;/]8GagHK'h&30]de!:N3f,;$Sf2#3Gu;JCfDXp6gHkNUJ[T:#PH3;978_)
%Y\IP6bE8r9`"QiJ"u!W'DT(p/9Pe9NWrUn?IGV9hRi4OZMupFckX*26)HGSY?p7Ptok.?qQ%mIs0T>6a>5&)+(JS`f(Xg*95K=XL
%RNc+Z:CeD478.fCai-IBq!R6(T:"4,$cR9^Z:a1IWm58pRr.qBTm(+,(UiF=Nj)qHQ\,A6W<)1u+ZYn0`-AO6*.1&/db=V4.r9nJ
%"Xf4CH[[Zq&heoI,qH)CZtY\,0k)B9Y,=s%`W.NH,%qmb,cD6X-(CUS2Snnk:_K"!UsP<&7l-)sc-T`i72B_EGPINd*?Qn7ifc5_
%N&Xqfl=Uo!HsV%kP:$NMYrjFN:HSOu'5+'UCKo<p-GPY-*SD8EGW'!1WXF#]gV=/.JZa]B\K/?@AgE8l7)F3&%uH>;b.t2'Ph(G#
%O.3.`L\>CT7bsPgRD=Cb(W\Z3dNrDLV-mICk.)R3e_/)2<tV3k;Y#0K@6-"TE1mE)4bOH/Yt8H?MS9LBW'l7(SM`G^]@;.H+j6^N
%VYuUJI(?1>oG=7'M;&9Teg;j/MNZ*QGer@B4Z$<eEHpj,WIV;2L3"imgrfkoH*hpd1-,<@2,GYb/F-d6*<%Xmca7<a'&I]e9CZNH
%e/WQRk11lU:!*\iL4(`Jo_Sf5f7hb4qU]abU#;`o2CT,?l<XGp0krWMe6](S2\L*-:@^(()OBR44]n*6s0aRSRj:1LjBkBuESJf>
%.`nYMq$X([+jlmN2f!+qiI3CnQ@kWR@;7nq_:Q5oc-k(]dW@_g%]YQF&o.;1Q+B=,7VM+h)97)R<BMG)Et%?a03#/HHptN68-3Yc
%I$HT'0o&@;2Rs>B<Bl44rg/g`nTtGO[&HL<Ru*g*T@<ct`C`OmGWY?RYF-3$%c^M>%qf58:>O)+pfWum8'`OEiuo+/EiIUUkCE=h
%81u:GqrYBfqCWq/,cf:hQ=M:6g#<dk<OgbGXCTDDN*6Wf$>bGVkD^CM3bU^.U]u10lh&Y>$DRsZZlI'-p7[4D*/7R$5LKj8q@]T0
%)PYo>PVaFKPn4/1gGDl%0U:0OI&0/!nm/A*)`0SfK`b3UHshB"prP#`&>'BN6BH^nMPD!7Iu'R4gM*elRV&m3f/16Q<$EIU[F?$n
%$qS'fgT-<P,PL#r_]2l[n<'.K2ON[C8\n,?i3Hq#F.B,iF>DgKGO)HulBR2iOtG@@%"RQ%_QR+b_X>dOO`\fJ@*(_.q*:H$7KKDt
%8/S5Tf\TAiV^&Y!Bs:)tX%olZPtC<_^sEYd6k)sM9r)m/b]-=XXsr`[1snZT\q&PhZrSPGZ>j,Lbo?"IJ*e(O\'-A@A^"]n-k&<H
%e_;@8d-?qPfk.?`3_;@M;RNb6>qHRSUa<.OE9k=dW*7@RoLqY$ks0!Q)SnNUg&_DbjTO(]B1Tr5E1C*smbIm$ia[H]gm,d=WY#f^
%UOB3EF=SjsU+]-o"/,u$Bf1gg64e5YdD$E+8-\8HIPN7F1FLfZf>srN?'m;o0]iH')<Xk\,a)qN#tQeL=MMAW"n\PrJ9`f>^8rbm
%C?$D'@;'f.9oUcoG=M4cF#sYP1cqA!7"DdkIZe,K>m@T$%0$p'A'&k!=D`p"I;Y9i5SDA=OfARb0PZh32C^+IOF#]X$?nd6O+oq)
%H>A4$GKRD9i%&]a'+6W^dbYDT<`Gnl\etXnB5.!^ZUIl`Eg5BL-*dIo=Y-/>W.M5_61_Kb6\qEV*7J_/L!7G:I5m00'SKnic%b35
%f=oD5[$`mW`FdBs8LX7^lajX0@r@3Do/.GH3"p2knjh`K&PO`%JE<4e"U`\j-)!@XqqOH$#)dcZkTPndS6V2.G-5t]eIP`98IRmm
%PCVX9N\J;]5qW5[&e2/K>J4`%/@N,Nc`lVkI6J,iUN[UM/gqd/rhJ0q]F2,ilIeNlQ_miO<'UT\!jbTq>?!*%@PT<_G^&[n-hVl"
%`A#JjJf]71H.QK2@_gA@Q@$Gt[dd+WWR@!ej@SX`F8!ZaZU.T-bT-+Y/E;Ahd55URS.-YEBSp5SS7J<q38jO@gQJu?FtI]GgJ88!
%AVJc"<H0b[Gk05@&J[-?MO]`;ABjqU\K-33"c<qf6i[q=2M!FhcO/ZBZAVgj.86+E.b$d\'N=\s9d/],]p><6"&"g$CFM/)>Sk\u
%er0-20MNHp`J>N%"X[P5ORTV<iLYuhD"n^i<)5R4C356*3K?XgBM0_K)%.Z^dZibWPR-4jUtg@6.jBHq\YVup4La>0NKgB0)o.=^
%Q&W_O.CuCZjQP@^gF-K>PI7DAcQ(Gm6_1>\Di?8JV^>*b#cDhlm>[V!Fu>Ha,qff^nX00SZ.5t*e`==]oh!8!IVoooAth,`qFM1u
%<8u$TU25I^qR$"c'GMQO:a4h,.bMf8oUb7)SYSDGVST<H\WA,u<<0at[T)p=']P7$gJ1Tqe`V2!J:Nm%FN@D&6MX_A'ZklNl@*P&
%doDL*YahFjI,8$/A5c[<7),bQrS.N,QX<i*V^T%\XG9U4PLdUqJtXN*m`-*V+81djm*hKNl@tME2Kb7qiC%3.m!3OW@J*/<+D_Yj
%II`=aFapDc$`.@uojICT^_E:(\Y7[manct7-?ZQGD,MqMeshT/-<WpdBh60'=?qP.Psg:s@"-!&2uY-USPPiE6uR1,O/3dq*6Abp
%[6Du3i_l=hR)D^T&ogj>g!3LM:9$cURMgU:jM`Qh+3ta4@[b5+_/-&^Zc1^XC\=QPU?rn+**>?0q-jtscK/6jf>V?bJ78kp)hK=#
%R1Q2Y)H)sQSImH_>eQWY69"5*4+J\n)*@\-h8W>)dMh<mc%nm-WOqsm2-F$VXR?G/_>9Tb*n7^!lfX8Wp@PH=mjQ'alcWN,FVd:9
%ii/!2f2hg[\URL;fnPn(JPMYO-5Vn_1'fV/V12$q7RQC/Jm.GK80(7`"_8^#"EB[gP;su=@@I7PZkYkRe(RC9EWj2"r6=GRJ8O=B
%CSmW+:.[[L,ZKCl"Xr8sb#7=>-3=cooJfdMFUim#Ot$UlLF2q.RH'sb;XVUt(u60$-i#3;7F_nQ.j$q1:?.K'cM`P<_;@WclQBe4
%W',Dm,,bAcR!!(fRtcan8<j`VZDdkZ8IrL.s#k[spUn,`:Qrs==fho3`+A=dok&0$bj]A]cKh`8\Ks.>_^5)\Cjd=_'>`\<@#]@>
%RJ]J@iKo9sC);tsQ4;jukQFu'&pBoG(RW'/7R/CkKc1/\m7gEV%lT/#)jVQ=@%qs=90$^*_kN3H:e=@r,.D,-ZdZ?*$o\c4>E]H9
%fbn0H[GjPnZUU?7YCLKXWj-";7@dK0c6e4<9qWJ#Vhrp)R[45U*5RdJ:QrWQWV_*DO^W;8ZZRU"S@WY4L!`\t,4a"*CV,#I`.]C`
%7Q6;lm5XU+&W9?c+cN4bR7/B\?duTW=GoZS$b6kAGLNQU3:CkH5phirS3Xh)#Egl#1Qh$B/j?gNZ_/"p[kZVTqak*'f"YhJ&nLQr
%70U7R4p"=l(dV+P2bBsB8KpeV<>FNH=@!AsQ3=/=U-:,p15#8SQ'PMQ#VlBW(b!n$>@nh6?@A,&21B<QMS77;8VJABD?Jn_Na$/`
%Jjo\s:Y7>GmLb@Y_&E7"P)Zan6IA(r<&Mpn1m0i<:tIX#1mnojf-Zuh/nG\ZQ^]fsjS6utb9oIO4'F''_QBlAKGK-DdquH<'s"4+
%9Z^1rWdQ6_[0.#`<&OV@jUb-W_HNi`h7ngSKonY*P4e)13WFEKoHhLI9\,f5!Ik27Uik(Xb[M=5bPf7t'@9jem-,e=d$XB-1m\]f
%iG/?0D$NoZAX-9JFpbPqal2oE7g`0TkeLk:lcMJI'[&f6&qk92+XF)lV)sX`=r4C@a^b4n\_PM;Am(CE]/gk_Jh>`o[]Gp<1<TjN
%86L"t(cPStF4()W/^kB-Pt%`Z2%I_]9Zt[e,Wq%JcKIgMg5[]L_eo]RlDZ<#>#k3r<,YYoQ'3=hMmu..iRGKkrmeRTo0ECg-<dQ$
%18_=d!Nf1Ke.0]3fJmJDgGjK?BMBe>U;0],R;t&WHS\m4otc&p5MBu4.tp#VceLb`?0alQrFnmsr,jjob/Z\q>kRNCe&Q/*rUr:5
%O2DTJo(C9M#?Ici9BU5?p$>J'gBT9Nrqj5JGELqbp^T=PI,qf8kDMJd.3tPO*;@`]r0ucWqp*rfF56.*.9ZMm3Go@_'jhfc"5&<6
%s$2sP?Ip?JZ>Sg2)>sN88f/)8GE6o[c^Ef"qTm!#fBMXG?']PoiVDr?hlhP0L]:WZk<Jq8Im&5W\*ne@n6loXqd7)9_fu.ZLN!4S
%qsT"/c/8KYcen`sh8?^Or$/uSh>^XXo^IVX^AIM/rq+*P%tFT9J,6oV\EUN^\%hm>J,W6Yq7HY3]js:)~>
%AI9_PrivateDataEnd
